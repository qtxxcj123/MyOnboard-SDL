<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\osdk_stm32.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\osdk_stm32.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Mon Apr 01 17:25:44 2019
<BR><P>
<H3>Maximum Stack Usage =       1820 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__sti___11_dji_ack_cpp_0a38b940 &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[544]">__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[544]">__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)</a><BR>
 <LI><a href="#[558]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4a1]">__rw::__rw_throw(int, ...)</a><BR>
 <LI><a href="#[555]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4a4]">__rw::__rw_allocate(unsigned, int)</a><BR>
 <LI><a href="#[548]">__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[548]">__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)</a><BR>
 <LI><a href="#[1b]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">NMI_Handler</a><BR>
 <LI><a href="#[1d]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">MemManage_Handler</a><BR>
 <LI><a href="#[1e]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">BusFault_Handler</a><BR>
 <LI><a href="#[1f]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">UsageFault_Handler</a><BR>
 <LI><a href="#[20]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">SVC_Handler</a><BR>
 <LI><a href="#[21]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">DebugMon_Handler</a><BR>
 <LI><a href="#[22]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">PendSV_Handler</a><BR>
 <LI><a href="#[499]">[local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[499]">[local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*)</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[8d]">&lang;Func5&rang;</a> from locale.o(i.<Func5>) referenced from locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj)
 <LI><a href="#[8d]">&lang;Func5&rang;</a> from locale.o(i.<Func5>) referenced from locale.o(i._ZN4__rw15__rw_locale_impC1ERKS0_PKcj)
 <LI><a href="#[8d]">&lang;Func5&rang;</a> from locale.o(i.<Func5>) referenced from locale.o(i._ZNSt6localeC1ERKS_PKci)
 <LI><a href="#[36]">ADC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1e]">BusFault_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[38]">CAN1_RX0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[39]">CAN1_RX1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3a]">CAN1_SCE_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[37]">CAN1_TX_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[64]">CAN2_RX0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[65]">CAN2_RX1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[66]">CAN2_SCE_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[63]">CAN2_TX_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[73]">CRYP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[72]">DCMI_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2f]">DMA1_Stream0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[30]">DMA1_Stream1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[31]">DMA1_Stream2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[32]">DMA1_Stream3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[33]">DMA1_Stream4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[34]">DMA1_Stream5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[35]">DMA1_Stream6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[53]">DMA1_Stream7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5c]">DMA2_Stream0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5d]">DMA2_Stream1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5e]">DMA2_Stream2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5f]">DMA2_Stream3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[60]">DMA2_Stream4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[68]">DMA2_Stream5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[69]">DMA2_Stream6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6a]">DMA2_Stream7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[21]">DebugMon_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[61]">ETH_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[62]">ETH_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2a]">EXTI0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4c]">EXTI15_10_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2b]">EXTI1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2c]">EXTI2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2d]">EXTI3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2e]">EXTI4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3b]">EXTI9_5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[28]">FLASH_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[75]">FPU_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[54]">FSMC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[74]">HASH_RNG_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1c]">HardFault_Handler</a> from bspusart.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[44]">I2C1_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[43]">I2C1_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[46]">I2C2_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[45]">I2C2_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6d]">I2C3_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6c]">I2C3_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1d]">MemManage_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1b]">NMI_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[67]">OTG_FS_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4e]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6f]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6e]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[71]">OTG_HS_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[70]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[25]">PVD_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[22]">PendSV_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[29]">RCC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4d]">RTC_Alarm_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[27]">RTC_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1a]">Reset_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[55]">SDIO_IRQHandler</a> from sdio_sdcard.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[47]">SPI1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[48]">SPI2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[57]">SPI3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[20]">SVC_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[23]">SysTick_Handler</a> from timer.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[78]">SystemInit</a> from system_stm32f4xx.o(.text) referenced from startup_stm32f40_41xxx.o(.text)
 <LI><a href="#[26]">TAMP_STAMP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3c]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3f]">TIM1_CC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3e]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3d]">TIM1_UP_TIM10_IRQHandler</a> from timer.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[40]">TIM2_IRQHandler</a> from timer.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[41]">TIM3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[42]">TIM4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[56]">TIM5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5a]">TIM6_DAC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5b]">TIM7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4f]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[52]">TIM8_CC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[51]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[50]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[58]">UART4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[59]">UART5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[49]">USART1_IRQHandler</a> from bspusart.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4a]">USART2_IRQHandler</a> from bspusart.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4b]">USART3_IRQHandler</a> from bspusart.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6b]">USART6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1f]">UsageFault_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[24]">WWDG_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[7a]">aes256_decrypt_ecb(tagAES256Context*, unsigned char*)</a> from dji_aes.o(.text) referenced 2 times from dji_open_protocol.o(.text)
 <LI><a href="#[7b]">aes256_encrypt_ecb(tagAES256Context*, unsigned char*)</a> from dji_aes.o(.text) referenced from dji_open_protocol.o(.text)
 <LI><a href="#[1dd]">actionMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from mobilesample.o(.text) referenced 4 times from mobilesample.o(.text)
 <LI><a href="#[9e]">__default_new_handler()</a> from newhandler.o(i._Z21__default_new_handlerv) referenced from new.o(i._Znwj)
 <LI><a href="#[1e5]">controlAuthorityMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from mobilesample.o(.text) referenced 4 times from mobilesample.o(.text)
 <LI><a href="#[a3]">[local to rtti_c]::tbc_downcast(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)</a> from rtti.o(i._ZN27_INTERNAL_6_rtti_c_066a44b012tbc_downcastEPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE) referenced from rtti.o(i.__dynamic_cast)
 <LI><a href="#[a4]">[local to rtti_c]::tbc_post_downcast(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)</a> from rtti.o(i._ZN27_INTERNAL_6_rtti_c_066a44b017tbc_post_downcastEPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE) referenced from rtti.o(i.__dynamic_cast)
 <LI><a href="#[87]">[local to unwinder_c]::EIT_comparator(const void*, const void*)</a> from unwinder.o(.text) referenced from unwinder.o(.text)
 <LI><a href="#[82]">[local to arm_exceptions_c]::__default_terminate_handler()</a> from arm_exceptions_globs.o(.text) referenced from arm_exceptions_globs.o(.text)
 <LI><a href="#[80]">[local to arm_exceptions_c]::armcpp_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)</a> from arm_exceptions_throw.o(.text) referenced from arm_exceptions_throw.o(.text)
 <LI><a href="#[b0]">DJI::OSDK::HardDriver::displayLog(const char*)</a> from dji_hard_driver.o(.text) referenced from stm32f4serialdriver.o(.constdata__ZTV7STM32F4)
 <LI><a href="#[b0]">DJI::OSDK::HardDriver::displayLog(const char*)</a> from dji_hard_driver.o(.text) referenced from dji_hard_driver.o(.constdata__ZTVN3DJI4OSDK10HardDriverE)
 <LI><a href="#[b4]">DJI::OSDK::HardDriver::getDeviceStatus()</a> from dji_hard_driver.o(i._ZN3DJI4OSDK10HardDriver15getDeviceStatusEv) referenced from dji_hard_driver.o(.constdata__ZTVN3DJI4OSDK10HardDriverE)
 <LI><a href="#[b2]">DJI::OSDK::HardDriver::~HardDriver__deallocating()</a> from dji_hard_driver.o(.text) referenced from dji_hard_driver.o(.constdata__ZTVN3DJI4OSDK10HardDriverE)
 <LI><a href="#[b1]">DJI::OSDK::HardDriver::~HardDriver__sub_object()</a> from dji_hard_driver.o(.text) referenced from dji_hard_driver.o(.constdata__ZTVN3DJI4OSDK10HardDriverE)
 <LI><a href="#[b6]">DJI::OSDK::MissionBase::~MissionBase__deallocating()</a> from dji_hotpoint.o(i._ZN3DJI4OSDK11MissionBaseD0Ev) referenced from dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK11MissionBaseE)
 <LI><a href="#[b5]">DJI::OSDK::MissionBase::~MissionBase__sub_object()</a> from dji_hotpoint.o(i._ZN3DJI4OSDK11MissionBaseD2Ev) referenced from dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK11MissionBaseE)
 <LI><a href="#[3cb]">DJI::OSDK::MobileDevice::getDataFromMSDKCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from dji_mobile_device.o(.text) referenced from dji_mobile_device.o(.text)
 <LI><a href="#[b9]">DJI::OSDK::MutexDefault::lock()</a> from dji_memory_default.o(.text) referenced from dji_memory_default.o(.constdata__ZTVN3DJI4OSDK12MutexDefaultE)
 <LI><a href="#[ba]">DJI::OSDK::MutexDefault::unlock()</a> from dji_memory_default.o(.text) referenced from dji_memory_default.o(.constdata__ZTVN3DJI4OSDK12MutexDefaultE)
 <LI><a href="#[b8]">DJI::OSDK::MutexDefault::~MutexDefault__deallocating()</a> from dji_memory_default.o(.text) referenced from dji_memory_default.o(.constdata__ZTVN3DJI4OSDK12MutexDefaultE)
 <LI><a href="#[b7]">DJI::OSDK::MutexDefault::~MutexDefault()</a> from dji_memory_default.o(.text) referenced from dji_memory_default.o(.constdata__ZTVN3DJI4OSDK12MutexDefaultE)
 <LI><a href="#[c9]">DJI::OSDK::OpenProtocol::appHandler(void*)</a> from dji_open_protocol.o(.text) referenced from dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
 <LI><a href="#[c7]">DJI::OSDK::OpenProtocol::verifyData()</a> from dji_open_protocol.o(.text) referenced from dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
 <LI><a href="#[c6]">DJI::OSDK::OpenProtocol::verifyHead()</a> from dji_open_protocol.o(.text) referenced from dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
 <LI><a href="#[c5]">DJI::OSDK::OpenProtocol::checkStream()</a> from dji_open_protocol.o(.text) referenced from dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
 <LI><a href="#[ca]">DJI::OSDK::OpenProtocol::crcHeadCheck(unsigned char*, unsigned)</a> from dji_open_protocol.o(.text) referenced from dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
 <LI><a href="#[cb]">DJI::OSDK::OpenProtocol::crcTailCheck(unsigned char*, unsigned)</a> from dji_open_protocol.o(.text) referenced from dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
 <LI><a href="#[be]">DJI::OSDK::OpenProtocol::sendInterface(void*)</a> from dji_open_protocol.o(.text) referenced from dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
 <LI><a href="#[bd]">DJI::OSDK::OpenProtocol::init(DJI::OSDK::HardDriver*, DJI::OSDK::MMU*, bool)</a> from dji_open_protocol.o(.text) referenced from dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
 <LI><a href="#[c8]">DJI::OSDK::OpenProtocol::callApp()</a> from dji_open_protocol.o(.text) referenced from dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
 <LI><a href="#[bf]">DJI::OSDK::OpenProtocol::sendData(unsigned char*)</a> from dji_open_protocol.o(.text) referenced from dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
 <LI><a href="#[bc]">DJI::OSDK::OpenProtocol::~OpenProtocol__deallocating()</a> from dji_open_protocol.o(.text) referenced from dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
 <LI><a href="#[bb]">DJI::OSDK::OpenProtocol::~OpenProtocol()</a> from dji_open_protocol.o(.text) referenced from dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
 <LI><a href="#[c2]">DJI::OSDK::ProtocolBase::byteHandler(unsigned char)</a> from dji_protocol_base.o(.text) referenced from dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
 <LI><a href="#[c2]">DJI::OSDK::ProtocolBase::byteHandler(unsigned char)</a> from dji_protocol_base.o(.text) referenced from dji_protocol_base.o(.constdata__ZTVN3DJI4OSDK12ProtocolBaseE)
 <LI><a href="#[c3]">DJI::OSDK::ProtocolBase::streamHandler(unsigned char)</a> from dji_protocol_base.o(.text) referenced from dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
 <LI><a href="#[c3]">DJI::OSDK::ProtocolBase::streamHandler(unsigned char)</a> from dji_protocol_base.o(.text) referenced from dji_protocol_base.o(.constdata__ZTVN3DJI4OSDK12ProtocolBaseE)
 <LI><a href="#[c0]">DJI::OSDK::ProtocolBase::receive()</a> from dji_protocol_base.o(.text) referenced from dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
 <LI><a href="#[c0]">DJI::OSDK::ProtocolBase::receive()</a> from dji_protocol_base.o(.text) referenced from dji_protocol_base.o(.constdata__ZTVN3DJI4OSDK12ProtocolBaseE)
 <LI><a href="#[c1]">DJI::OSDK::ProtocolBase::readPoll()</a> from dji_protocol_base.o(.text) referenced from dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
 <LI><a href="#[c1]">DJI::OSDK::ProtocolBase::readPoll()</a> from dji_protocol_base.o(.text) referenced from dji_protocol_base.o(.constdata__ZTVN3DJI4OSDK12ProtocolBaseE)
 <LI><a href="#[c4]">DJI::OSDK::ProtocolBase::storeData(unsigned char)</a> from dji_protocol_base.o(.text) referenced from dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
 <LI><a href="#[c4]">DJI::OSDK::ProtocolBase::storeData(unsigned char)</a> from dji_protocol_base.o(.text) referenced from dji_protocol_base.o(.constdata__ZTVN3DJI4OSDK12ProtocolBaseE)
 <LI><a href="#[cd]">DJI::OSDK::ProtocolBase::~ProtocolBase__deallocating()</a> from dji_protocol_base.o(.text) referenced from dji_protocol_base.o(.constdata__ZTVN3DJI4OSDK12ProtocolBaseE)
 <LI><a href="#[cc]">DJI::OSDK::ProtocolBase::~ProtocolBase__sub_object()</a> from dji_protocol_base.o(.text) referenced from dji_protocol_base.o(.constdata__ZTVN3DJI4OSDK12ProtocolBaseE)
 <LI><a href="#[398]">DJI::OSDK::DataBroadcast::unpackCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from dji_broadcast.o(.text) referenced from dji_broadcast.o(.text)
 <LI><a href="#[3a7]">DJI::OSDK::DataBroadcast::setFrequencyCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from dji_broadcast.o(.text) referenced from dji_broadcast.o(.text)
 <LI><a href="#[7c]">DJI::OSDK::MissionManager::missionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from dji_mission_manager.o(.text) referenced 4 times from dji_hotpoint.o(.text)
 <LI><a href="#[d7]">DJI::OSDK::ThreadAbstract::freeStopCond()</a> from dji_thread_manager.o(.text) referenced from dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
 <LI><a href="#[d6]">DJI::OSDK::ThreadAbstract::lockStopCond()</a> from dji_thread_manager.o(.text) referenced from dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
 <LI><a href="#[d5]">DJI::OSDK::ThreadAbstract::nonBlockWait()</a> from dji_thread_manager.o(.text) referenced from dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
 <LI><a href="#[d3]">DJI::OSDK::ThreadAbstract::freeNonBlockCBAck()</a> from dji_thread_manager.o(.text) referenced from dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
 <LI><a href="#[d2]">DJI::OSDK::ThreadAbstract::lockNonBlockCBAck()</a> from dji_thread_manager.o(.text) referenced from dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
 <LI><a href="#[d1]">DJI::OSDK::ThreadAbstract::freeProtocolHeader()</a> from dji_thread_manager.o(.text) referenced from dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
 <LI><a href="#[d0]">DJI::OSDK::ThreadAbstract::lockProtocolHeader()</a> from dji_thread_manager.o(.text) referenced from dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
 <LI><a href="#[d4]">DJI::OSDK::ThreadAbstract::notifyNonBlockCBAckRecv()</a> from dji_thread_manager.o(.text) referenced from dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
 <LI><a href="#[d9]">DJI::OSDK::ThreadAbstract::freeFrame()</a> from dji_thread_manager.o(.text) referenced from dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
 <LI><a href="#[d8]">DJI::OSDK::ThreadAbstract::lockFrame()</a> from dji_thread_manager.o(.text) referenced from dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
 <LI><a href="#[cf]">DJI::OSDK::ThreadAbstract::~ThreadAbstract__deallocating()</a> from dji_thread_manager.o(.text) referenced from dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
 <LI><a href="#[ce]">DJI::OSDK::ThreadAbstract::~ThreadAbstract__sub_object()</a> from dji_thread_manager.o(.text) referenced from dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
 <LI><a href="#[320]">DJI::OSDK::HotpointMission::getHotpointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from dji_hotpoint.o(.text) referenced from dji_hotpoint.o(.text)
 <LI><a href="#[de]">DJI::OSDK::HotpointMission::stop(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</a> from dji_hotpoint.o(.text) referenced from dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
 <LI><a href="#[df]">DJI::OSDK::HotpointMission::stop(int)</a> from dji_hotpoint.o(.text) referenced from dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
 <LI><a href="#[e0]">DJI::OSDK::HotpointMission::pause(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</a> from dji_hotpoint.o(.text) referenced from dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
 <LI><a href="#[e1]">DJI::OSDK::HotpointMission::pause(int)</a> from dji_hotpoint.o(.text) referenced from dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
 <LI><a href="#[dc]">DJI::OSDK::HotpointMission::start(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</a> from dji_hotpoint.o(.text) referenced from dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
 <LI><a href="#[dd]">DJI::OSDK::HotpointMission::start(int)</a> from dji_hotpoint.o(.text) referenced from dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
 <LI><a href="#[e2]">DJI::OSDK::HotpointMission::resume(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</a> from dji_hotpoint.o(.text) referenced from dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
 <LI><a href="#[e3]">DJI::OSDK::HotpointMission::resume(int)</a> from dji_hotpoint.o(.text) referenced from dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
 <LI><a href="#[db]">DJI::OSDK::HotpointMission::~HotpointMission__deallocating()</a> from dji_hotpoint.o(.text) referenced from dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
 <LI><a href="#[da]">DJI::OSDK::HotpointMission::~HotpointMission()</a> from dji_hotpoint.o(.text) referenced from dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
 <LI><a href="#[38a]">DJI::OSDK::WaypointMission::getIndexCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from dji_waypoint.o(.text) referenced from dji_waypoint.o(.text)
 <LI><a href="#[38f]">DJI::OSDK::WaypointMission::idleVelocityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from dji_waypoint.o(.text) referenced 2 times from dji_waypoint.o(.text)
 <LI><a href="#[38d]">DJI::OSDK::WaypointMission::uploadIndexDataCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from dji_waypoint.o(.text) referenced from dji_waypoint.o(.text)
 <LI><a href="#[387]">DJI::OSDK::WaypointMission::getWaypointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from dji_waypoint.o(.text) referenced from dji_waypoint.o(.text)
 <LI><a href="#[e8]">DJI::OSDK::WaypointMission::stop(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</a> from dji_waypoint.o(.text) referenced from dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
 <LI><a href="#[e9]">DJI::OSDK::WaypointMission::stop(int)</a> from dji_waypoint.o(.text) referenced from dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
 <LI><a href="#[ea]">DJI::OSDK::WaypointMission::pause(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</a> from dji_waypoint.o(.text) referenced from dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
 <LI><a href="#[eb]">DJI::OSDK::WaypointMission::pause(int)</a> from dji_waypoint.o(.text) referenced from dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
 <LI><a href="#[e6]">DJI::OSDK::WaypointMission::start(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</a> from dji_waypoint.o(.text) referenced from dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
 <LI><a href="#[e7]">DJI::OSDK::WaypointMission::start(int)</a> from dji_waypoint.o(.text) referenced from dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
 <LI><a href="#[ec]">DJI::OSDK::WaypointMission::resume(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</a> from dji_waypoint.o(.text) referenced from dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
 <LI><a href="#[ed]">DJI::OSDK::WaypointMission::resume(int)</a> from dji_waypoint.o(.text) referenced from dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
 <LI><a href="#[e5]">DJI::OSDK::WaypointMission::~WaypointMission__deallocating()</a> from dji_waypoint.o(.text) referenced from dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
 <LI><a href="#[e4]">DJI::OSDK::WaypointMission::~WaypointMission()</a> from dji_waypoint.o(.text) referenced from dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
 <LI><a href="#[357]">DJI::OSDK::DataSubscription::resetCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from dji_subscription.o(.text) referenced from dji_subscription.o(.text)
 <LI><a href="#[34b]">DJI::OSDK::DataSubscription::decodeCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from dji_subscription.o(.text) referenced from dji_subscription.o(.text)
 <LI><a href="#[352]">DJI::OSDK::DataSubscription::verifyCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from dji_subscription.o(.text) referenced from dji_subscription.o(.text)
 <LI><a href="#[354]">DJI::OSDK::DataSubscription::addPackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from dji_subscription.o(.text) referenced from dji_subscription.o(.text)
 <LI><a href="#[355]">DJI::OSDK::DataSubscription::removePackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from dji_subscription.o(.text) referenced from dji_subscription.o(.text)
 <LI><a href="#[fd]">DJI::OSDK::STM32F4DataGuard::freeStopCond()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[fc]">DJI::OSDK::STM32F4DataGuard::lockStopCond()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[fb]">DJI::OSDK::STM32F4DataGuard::nonBlockWait()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[f9]">DJI::OSDK::STM32F4DataGuard::freeNonBlockCBAck()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[f1]">DJI::OSDK::STM32F4DataGuard::freeRecvContainer()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[f8]">DJI::OSDK::STM32F4DataGuard::lockNonBlockCBAck()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[f0]">DJI::OSDK::STM32F4DataGuard::lockRecvContainer()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[f7]">DJI::OSDK::STM32F4DataGuard::freeProtocolHeader()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[f6]">DJI::OSDK::STM32F4DataGuard::lockProtocolHeader()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[fa]">DJI::OSDK::STM32F4DataGuard::notifyNonBlockCBAckRecv()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[102]">DJI::OSDK::STM32F4DataGuard::init()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[101]">DJI::OSDK::STM32F4DataGuard::wait(int)</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[100]">DJI::OSDK::STM32F4DataGuard::notify()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[f5]">DJI::OSDK::STM32F4DataGuard::freeACK()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[f3]">DJI::OSDK::STM32F4DataGuard::freeMSG()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[f4]">DJI::OSDK::STM32F4DataGuard::lockACK()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[f2]">DJI::OSDK::STM32F4DataGuard::lockMSG()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[ff]">DJI::OSDK::STM32F4DataGuard::freeFrame()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[fe]">DJI::OSDK::STM32F4DataGuard::lockFrame()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[ef]">DJI::OSDK::STM32F4DataGuard::~STM32F4DataGuard__deallocating()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[ee]">DJI::OSDK::STM32F4DataGuard::~STM32F4DataGuard()</a> from stm32f4dataguard.o(.text) referenced from stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
 <LI><a href="#[338]">DJI::OSDK::MobileCommunication::getDataFromMSDKCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from dji_mobile_communication.o(.text) referenced from dji_mobile_communication.o(.text)
 <LI><a href="#[34d]">DJI::OSDK::SubscriptionPackage::SubscriptionPackage()</a> from dji_subscription.o(.text) referenced from dji_subscription.o(.text)
 <LI><a href="#[8a]">DJI::OSDK::SubscriptionPackage::~SubscriptionPackage()</a> from dji_subscription.o(.text) referenced 2 times from dji_subscription.o(.text)
 <LI><a href="#[8a]">DJI::OSDK::SubscriptionPackage::~SubscriptionPackage()</a> from dji_subscription.o(.text) referenced from dji_subscription.o(.text.clean)
 <LI><a href="#[105]">DJI::OSDK::Log::print(const char*, ...)</a> from dji_log.o(.text) referenced from dji_log.o(.constdata__ZTVN3DJI4OSDK3LogE)
 <LI><a href="#[104]">DJI::OSDK::Log::~Log__deallocating()</a> from dji_log.o(.text) referenced from dji_log.o(.constdata__ZTVN3DJI4OSDK3LogE)
 <LI><a href="#[103]">DJI::OSDK::Log::~Log()</a> from dji_log.o(.text) referenced from dji_log.o(.constdata__ZTVN3DJI4OSDK3LogE)
 <LI><a href="#[327]">DJI::OSDK::MFIO::initCallback(DJI::OSDK::RecvContainer, void*)</a> from dji_mfio.o(.text) referenced from dji_mfio.o(.text)
 <LI><a href="#[32a]">DJI::OSDK::MFIO::getValueCallback(DJI::OSDK::RecvContainer, void*)</a> from dji_mfio.o(.text) referenced from dji_mfio.o(.text)
 <LI><a href="#[329]">DJI::OSDK::MFIO::setValueCallback(DJI::OSDK::RecvContainer, void*)</a> from dji_mfio.o(.text) referenced from dji_mfio.o(.text)
 <LI><a href="#[107]">DJI::OSDK::Mutex::~Mutex__deallocating()</a> from dji_thread_manager.o(.text) referenced from dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK5MutexE)
 <LI><a href="#[106]">DJI::OSDK::Mutex::~Mutex__sub_object()</a> from dji_thread_manager.o(.text) referenced from dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK5MutexE)
 <LI><a href="#[109]">DJI::OSDK::Thread::~Thread__deallocating()</a> from dji_thread_manager.o(.text) referenced from dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK6ThreadE)
 <LI><a href="#[108]">DJI::OSDK::Thread::~Thread__sub_object()</a> from dji_thread_manager.o(.text) referenced from dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK6ThreadE)
 <LI><a href="#[302]">DJI::OSDK::Control::actionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from dji_control.o(.text) referenced 3 times from dji_control.o(.text)
 <LI><a href="#[2b8]">DJI::OSDK::Vehicle::activateCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from dji_vehicle.o(.text) referenced from dji_vehicle.o(.text)
 <LI><a href="#[2b7]">DJI::OSDK::Vehicle::getDroneVersionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from dji_vehicle.o(.text) referenced from dji_vehicle.o(.text)
 <LI><a href="#[299]">DJI::OSDK::Vehicle::controlAuthorityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</a> from dji_vehicle.o(.text) referenced 3 times from dji_vehicle.o(.text)
 <LI><a href="#[77]">DJI::OSDK::Vehicle::~Vehicle()</a> from dji_vehicle.o(.text) referenced from main.o(.text)
 <LI><a href="#[10b]">DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::~Singleton__deallocating()</a> from dji_log.o(t._ZN3DJI4OSDK9SingletonINS0_3LogEED0Ev) referenced from dji_log.o(.constdata__ZTVN3DJI4OSDK9SingletonINS0_3LogEEE)
 <LI><a href="#[10a]">DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::~Singleton()</a> from dji_log.o(t._ZN3DJI4OSDK9SingletonINS0_3LogEED1Ev) referenced from dji_log.o(.constdata__ZTVN3DJI4OSDK9SingletonINS0_3LogEEE)
 <LI><a href="#[10d]">__rw::__rw_facet_base::_C_initfacet(const std::locale&)</a> from char.o(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale) referenced from rwstdexcept.o(.constdata__ZTVNSt6locale5facetE)
 <LI><a href="#[10d]">__rw::__rw_facet_base::_C_initfacet(const std::locale&)</a> from char.o(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale) referenced from char.o(.constdata__ZTVSt14collate_bynameIcE)
 <LI><a href="#[10d]">__rw::__rw_facet_base::_C_initfacet(const std::locale&)</a> from char.o(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale) referenced from rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[a8]">__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)</a> from rwstdexcept.o(t._ZN4__rw16__rw_facet_makerISt5ctypeIcEE13_C_maker_funcEiPKcj) referenced from rwstdexcept.o(t._ZNKSt8messagesIcE6do_getEiiiRKSs)
 <LI><a href="#[a5]">__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector()</a> from rwcats.o(t._ZN4__rw18__rw_locale_vectorIPNS_8__rw_catEED1Ev) referenced from rwcats.o(i.__sti___10_rwcats_cpp_64e8068e)
 <LI><a href="#[9d]">__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector()</a> from messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev) referenced from messages.o(i._ZSt13__rw_get_catsv)
 <LI><a href="#[19]">__rw::__rw_throw_exception(int, char*)</a> from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc) referenced 2 times from rwthrowproc.o(.data)
 <LI><a href="#[81]">__ARM::default_unexpected_handler()</a> from arm_exceptions_unexpected.o(.text) referenced from arm_exceptions_globs.o(.text)
 <LI><a href="#[ac]">STM32F4::getTimeStamp()</a> from stm32f4serialdriver.o(.text) referenced from stm32f4serialdriver.o(.constdata__ZTV7STM32F4)
 <LI><a href="#[af]">STM32F4::getDeviceStatus()</a> from stm32f4serialdriver.o(i._ZN7STM32F415getDeviceStatusEv) referenced from stm32f4serialdriver.o(.constdata__ZTV7STM32F4)
 <LI><a href="#[ab]">STM32F4::init()</a> from stm32f4serialdriver.o(i._ZN7STM32F44initEv) referenced from stm32f4serialdriver.o(.constdata__ZTV7STM32F4)
 <LI><a href="#[ad]">STM32F4::send(const unsigned char*, unsigned)</a> from stm32f4serialdriver.o(.text) referenced from stm32f4serialdriver.o(.constdata__ZTV7STM32F4)
 <LI><a href="#[ae]">STM32F4::readall(unsigned char*, unsigned)</a> from stm32f4serialdriver.o(i._ZN7STM32F47readallEPhj) referenced from stm32f4serialdriver.o(.constdata__ZTV7STM32F4)
 <LI><a href="#[aa]">STM32F4::~STM32F4__deallocating()</a> from stm32f4serialdriver.o(i._ZN7STM32F4D0Ev) referenced from stm32f4serialdriver.o(.constdata__ZTV7STM32F4)
 <LI><a href="#[a9]">STM32F4::~STM32F4()</a> from stm32f4serialdriver.o(i._ZN7STM32F4D1Ev) referenced from stm32f4serialdriver.o(.constdata__ZTV7STM32F4)
 <LI><a href="#[10f]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10badbit_setE)
 <LI><a href="#[10f]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10eofbit_setE)
 <LI><a href="#[10f]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base11failbit_setE)
 <LI><a href="#[10f]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base7failureE)
 <LI><a href="#[10f]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVSt11logic_error)
 <LI><a href="#[10f]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVSt11range_error)
 <LI><a href="#[10f]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVSt12domain_error)
 <LI><a href="#[10f]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVSt12length_error)
 <LI><a href="#[10f]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVSt12out_of_range)
 <LI><a href="#[10f]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVSt13runtime_error)
 <LI><a href="#[10f]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
 <LI><a href="#[10f]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVSt14overflow_error)
 <LI><a href="#[10f]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVSt15underflow_error)
 <LI><a href="#[10f]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwthrowproc_impl.o(.constdata__ZTVSt16invalid_argument)
 <LI><a href="#[126]">std::collate_byname&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const</a> from char.o(i._ZNKSt14collate_bynameIcE10do_compareEPKcS2_S2_S2_) referenced from char.o(.constdata__ZTVSt14collate_bynameIcE)
 <LI><a href="#[127]">std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const</a> from char.o(i._ZNKSt14collate_bynameIcE12do_transformEPKcS2_) referenced from char.o(.constdata__ZTVSt14collate_bynameIcE)
 <LI><a href="#[11a]">std::ctype&lang;char&rang;::do_tolower(char*, const char*) const</a> from char.o(i._ZNKSt5ctypeIcE10do_tolowerEPcPKc) referenced from char.o(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[11a]">std::ctype&lang;char&rang;::do_tolower(char*, const char*) const</a> from char.o(i._ZNKSt5ctypeIcE10do_tolowerEPcPKc) referenced from char.o(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[11c]">std::ctype&lang;char&rang;::do_tolower(char) const</a> from char.o(i._ZNKSt5ctypeIcE10do_tolowerEc) referenced from char.o(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[11c]">std::ctype&lang;char&rang;::do_tolower(char) const</a> from char.o(i._ZNKSt5ctypeIcE10do_tolowerEc) referenced from char.o(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[119]">std::ctype&lang;char&rang;::do_toupper(char*, const char*) const</a> from char.o(i._ZNKSt5ctypeIcE10do_toupperEPcPKc) referenced from char.o(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[119]">std::ctype&lang;char&rang;::do_toupper(char*, const char*) const</a> from char.o(i._ZNKSt5ctypeIcE10do_toupperEPcPKc) referenced from char.o(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[11b]">std::ctype&lang;char&rang;::do_toupper(char) const</a> from char.o(i._ZNKSt5ctypeIcE10do_toupperEc) referenced from char.o(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[11b]">std::ctype&lang;char&rang;::do_toupper(char) const</a> from char.o(i._ZNKSt5ctypeIcE10do_toupperEc) referenced from char.o(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[128]">std::collate&lang;char&rang;::do_hash(const char*, const char*) const</a> from char.o(t._ZNKSt7collateIcE7do_hashEPKcS2_) referenced from char.o(.constdata__ZTVSt14collate_bynameIcE)
 <LI><a href="#[132]">std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const</a> from rwstdexcept.o(t._ZNKSt8messagesIcE6do_getEiiiRKSs) referenced from rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[131]">std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const</a> from rwstdexcept.o(t._ZNKSt8messagesIcE7do_openERKSsRKSt6locale) referenced from rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[8c]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</a> from char.o(t._ZNSsD1Ev) referenced from locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj)
 <LI><a href="#[8c]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</a> from char.o(t._ZNSsD1Ev) referenced from locale.o(i._ZN4__rw15__rw_locale_impC1ERKS0_PKcj)
 <LI><a href="#[8c]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</a> from char.o(t._ZNSsD1Ev) referenced from locale.o(i._ZNSt6localeC1ERKS_PKci)
 <LI><a href="#[8c]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</a> from char.o(t._ZNSsD1Ev) referenced from locale.o(t._ZN4__rw18__rw_locale_vectorISsED1Ev)
 <LI><a href="#[113]">std::bad_typeid::~bad_typeid__deallocating()</a> from bad_typeid.o(i._ZNSt10bad_typeidD0Ev) referenced from bad_typeid.o(.constdata__ZTVSt10bad_typeid)
 <LI><a href="#[86]">std::bad_typeid::~bad_typeid()</a> from bad_typeid.o(i._ZNSt10bad_typeidD1Ev) referenced from bad_typeid.o(.constdata__ZTVSt10bad_typeid)
 <LI><a href="#[86]">std::bad_typeid::~bad_typeid()</a> from bad_typeid.o(i._ZNSt10bad_typeidD1Ev) referenced from arm_exceptions_bad_typeid.o(.text)
 <LI><a href="#[114]">std::logic_error::~logic_error__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt11logic_errorD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt11logic_error)
 <LI><a href="#[8f]">std::logic_error::~logic_error()</a> from rwthrowproc_impl.o(i._ZNSt11logic_errorD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt11logic_error)
 <LI><a href="#[8f]">std::logic_error::~logic_error()</a> from rwthrowproc_impl.o(i._ZNSt11logic_errorD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[115]">std::range_error::~range_error__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt11range_errorD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt11range_error)
 <LI><a href="#[95]">std::range_error::~range_error()</a> from rwthrowproc_impl.o(i._ZNSt11range_errorD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt11range_error)
 <LI><a href="#[95]">std::range_error::~range_error()</a> from rwthrowproc_impl.o(i._ZNSt11range_errorD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[117]">std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()</a> from char.o(i._ZNSt12ctype_bynameIcED0Ev) referenced from char.o(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[116]">std::ctype_byname&lang;char&rang;::~ctype_byname()</a> from char.o(i._ZNSt12ctype_bynameIcED1Ev) referenced from char.o(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[11d]">std::domain_error::~domain_error__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt12domain_errorD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt12domain_error)
 <LI><a href="#[90]">std::domain_error::~domain_error()</a> from rwthrowproc_impl.o(i._ZNSt12domain_errorD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt12domain_error)
 <LI><a href="#[90]">std::domain_error::~domain_error()</a> from rwthrowproc_impl.o(i._ZNSt12domain_errorD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[11e]">std::length_error::~length_error__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt12length_errorD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt12length_error)
 <LI><a href="#[92]">std::length_error::~length_error()</a> from rwthrowproc_impl.o(i._ZNSt12length_errorD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt12length_error)
 <LI><a href="#[92]">std::length_error::~length_error()</a> from rwthrowproc_impl.o(i._ZNSt12length_errorD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[11f]">std::out_of_range::~out_of_range__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt12out_of_rangeD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt12out_of_range)
 <LI><a href="#[93]">std::out_of_range::~out_of_range()</a> from rwthrowproc_impl.o(i._ZNSt12out_of_rangeD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt12out_of_range)
 <LI><a href="#[93]">std::out_of_range::~out_of_range()</a> from rwthrowproc_impl.o(i._ZNSt12out_of_rangeD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[120]">std::bad_exception::~bad_exception__deallocating()</a> from bad_exception_dtor.o(i._ZNSt13bad_exceptionD0Ev) referenced from bad_exception_dtor.o(.constdata__ZTVSt13bad_exception)
 <LI><a href="#[7d]">std::bad_exception::~bad_exception()</a> from bad_exception_dtor.o(i._ZNSt13bad_exceptionD1Ev) referenced from bad_exception_dtor.o(.constdata__ZTVSt13bad_exception)
 <LI><a href="#[7d]">std::bad_exception::~bad_exception()</a> from bad_exception_dtor.o(i._ZNSt13bad_exceptionD1Ev) referenced from arm_exceptions_callunex.o(.text)
 <LI><a href="#[7d]">std::bad_exception::~bad_exception()</a> from bad_exception_dtor.o(i._ZNSt13bad_exceptionD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[121]">std::runtime_error::~runtime_error__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt13runtime_errorD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt13runtime_error)
 <LI><a href="#[94]">std::runtime_error::~runtime_error()</a> from rwthrowproc_impl.o(i._ZNSt13runtime_errorD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt13runtime_error)
 <LI><a href="#[94]">std::runtime_error::~runtime_error()</a> from rwthrowproc_impl.o(i._ZNSt13runtime_errorD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[123]">std::__rw_exception::~__rw_exception__deallocating()</a> from rwstdexcept.o(i._ZNSt14__rw_exceptionD0Ev) referenced from rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
 <LI><a href="#[122]">std::__rw_exception::~__rw_exception()</a> from rwstdexcept.o(i._ZNSt14__rw_exceptionD1Ev) referenced from rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
 <LI><a href="#[125]">std::collate_byname&lang;char&rang;::~collate_byname__deallocating()</a> from char.o(i._ZNSt14collate_bynameIcED0Ev) referenced from char.o(.constdata__ZTVSt14collate_bynameIcE)
 <LI><a href="#[124]">std::collate_byname&lang;char&rang;::~collate_byname()</a> from char.o(i._ZNSt14collate_bynameIcED1Ev) referenced from char.o(.constdata__ZTVSt14collate_bynameIcE)
 <LI><a href="#[129]">std::overflow_error::~overflow_error__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt14overflow_errorD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt14overflow_error)
 <LI><a href="#[96]">std::overflow_error::~overflow_error()</a> from rwthrowproc_impl.o(i._ZNSt14overflow_errorD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt14overflow_error)
 <LI><a href="#[96]">std::overflow_error::~overflow_error()</a> from rwthrowproc_impl.o(i._ZNSt14overflow_errorD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[12a]">std::underflow_error::~underflow_error__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt15underflow_errorD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt15underflow_error)
 <LI><a href="#[97]">std::underflow_error::~underflow_error()</a> from rwthrowproc_impl.o(i._ZNSt15underflow_errorD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt15underflow_error)
 <LI><a href="#[97]">std::underflow_error::~underflow_error()</a> from rwthrowproc_impl.o(i._ZNSt15underflow_errorD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[12b]">std::invalid_argument::~invalid_argument__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt16invalid_argumentD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt16invalid_argument)
 <LI><a href="#[91]">std::invalid_argument::~invalid_argument()</a> from rwthrowproc_impl.o(i._ZNSt16invalid_argumentD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVSt16invalid_argument)
 <LI><a href="#[91]">std::invalid_argument::~invalid_argument()</a> from rwthrowproc_impl.o(i._ZNSt16invalid_argumentD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[a7]">std::__rw_open_cat_data::__rw_open_cat_data()</a> from messages.o(i._ZNSt18__rw_open_cat_dataC1Ev) referenced from messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
 <LI><a href="#[a6]">std::__rw_open_cat_data::~__rw_open_cat_data()</a> from messages.o(i._ZNSt18__rw_open_cat_dataD1Ev) referenced from messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
 <LI><a href="#[a6]">std::__rw_open_cat_data::~__rw_open_cat_data()</a> from messages.o(i._ZNSt18__rw_open_cat_dataD1Ev) referenced from messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev)
 <LI><a href="#[118]">std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)</a> from char.o(i._ZNSt5ctypeIcE12_C_initfacetERKSt6locale) referenced from char.o(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[118]">std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)</a> from char.o(i._ZNSt5ctypeIcE12_C_initfacetERKSt6locale) referenced from char.o(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[12d]">std::ctype&lang;char&rang;::~ctype__deallocating()</a> from char.o(i._ZNSt5ctypeIcED0Ev) referenced from char.o(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[12c]">std::ctype&lang;char&rang;::~ctype()</a> from char.o(i._ZNSt5ctypeIcED1Ev) referenced from char.o(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[10c]">std::locale::facet::~facet__deallocating()</a> from rwstdexcept.o(i._ZNSt6locale5facetD0Ev) referenced from rwstdexcept.o(.constdata__ZTVNSt6locale5facetE)
 <LI><a href="#[9c]">std::locale::~locale()</a> from locale.o(i._ZNSt6localeD1Ev) referenced from locale.o(i._ZNSt6locale7classicEv)
 <LI><a href="#[12e]">std::bad_cast::~bad_cast__deallocating()</a> from bad_cast.o(i._ZNSt8bad_castD0Ev) referenced from bad_cast.o(.constdata__ZTVSt8bad_cast)
 <LI><a href="#[8e]">std::bad_cast::~bad_cast()</a> from bad_cast.o(i._ZNSt8bad_castD1Ev) referenced from bad_cast.o(.constdata__ZTVSt8bad_cast)
 <LI><a href="#[8e]">std::bad_cast::~bad_cast()</a> from bad_cast.o(i._ZNSt8bad_castD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[10e]">std::ios_base::badbit_set::~badbit_set__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base10badbit_setD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10badbit_setE)
 <LI><a href="#[99]">std::ios_base::badbit_set::~badbit_set()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base10badbit_setD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10badbit_setE)
 <LI><a href="#[99]">std::ios_base::badbit_set::~badbit_set()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base10badbit_setD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[110]">std::ios_base::eofbit_set::~eofbit_set__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base10eofbit_setD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10eofbit_setE)
 <LI><a href="#[9a]">std::ios_base::eofbit_set::~eofbit_set()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base10eofbit_setD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10eofbit_setE)
 <LI><a href="#[9a]">std::ios_base::eofbit_set::~eofbit_set()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base10eofbit_setD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[111]">std::ios_base::failbit_set::~failbit_set__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base11failbit_setD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base11failbit_setE)
 <LI><a href="#[98]">std::ios_base::failbit_set::~failbit_set()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base11failbit_setD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base11failbit_setE)
 <LI><a href="#[98]">std::ios_base::failbit_set::~failbit_set()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base11failbit_setD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[112]">std::ios_base::failure::~failure__deallocating()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base7failureD0Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base7failureE)
 <LI><a href="#[9b]">std::ios_base::failure::~failure()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base7failureD1Ev) referenced from rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base7failureE)
 <LI><a href="#[9b]">std::ios_base::failure::~failure()</a> from rwthrowproc_impl.o(i._ZNSt8ios_base7failureD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[130]">std::messages&lang;char&rang;::~messages__deallocating()</a> from rwstdexcept.o(i._ZNSt8messagesIcED0Ev) referenced from rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[12f]">std::messages&lang;char&rang;::~messages()</a> from rwstdexcept.o(i._ZNSt8messagesIcED1Ev) referenced from rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[133]">std::bad_alloc::~bad_alloc__deallocating()</a> from bad_alloc_dtor.o(i._ZNSt9bad_allocD0Ev) referenced from bad_alloc_dtor.o(.constdata__ZTVSt9bad_alloc)
 <LI><a href="#[8b]">std::bad_alloc::~bad_alloc()</a> from bad_alloc_dtor.o(i._ZNSt9bad_allocD1Ev) referenced from bad_alloc_dtor.o(.constdata__ZTVSt9bad_alloc)
 <LI><a href="#[8b]">std::bad_alloc::~bad_alloc()</a> from bad_alloc_dtor.o(i._ZNSt9bad_allocD1Ev) referenced from newhandler.o(i._Z21__default_new_handlerv)
 <LI><a href="#[8b]">std::bad_alloc::~bad_alloc()</a> from bad_alloc_dtor.o(i._ZNSt9bad_allocD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[b]">std::exception::~exception()</a> from exception_dtor.o(i._ZNSt9exceptionD1Ev) referenced from exception_dtor.o(.constdata__ZTVSt9exception)
 <LI><a href="#[b]">std::exception::~exception()</a> from exception_dtor.o(i._ZNSt9exceptionD1Ev) referenced from rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
 <LI><a href="#[a2]">operator delete[] (void*)</a> from array_del.o(i._ZdaPv) referenced from cxa_vec_new.o(i.__cxa_vec_new)
 <LI><a href="#[88]">__aeabi_unwind_cpp_pr0</a> from unwind_pr0.o(.text) referenced from unwinder.o(.text)
 <LI><a href="#[89]">__aeabi_unwind_cpp_pr1</a> from unwind_pr1.o(.text) referenced from unwinder.o(.text)
 <LI><a href="#[83]">__cxa_call_unexpected</a> from arm_exceptions_callunex.o(.text) referenced from unwind_prcommon.o(.text)
 <LI><a href="#[b3]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 4 times from dji_hard_driver.o(.constdata__ZTVN3DJI4OSDK10HardDriverE)
 <LI><a href="#[b3]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 8 times from dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK11MissionBaseE)
 <LI><a href="#[b3]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 10 times from dji_protocol_base.o(.constdata__ZTVN3DJI4OSDK12ProtocolBaseE)
 <LI><a href="#[b3]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 9 times from dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
 <LI><a href="#[b3]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK5MutexE)
 <LI><a href="#[b3]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK6ThreadE)
 <LI><a href="#[79]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f40_41xxx.o(.text)
 <LI><a href="#[156]">__sti___10_buffer_cpp_a556aa1b</a> from buffer.o(.text) referenced from buffer.o(.init_array)
 <LI><a href="#[15b]">__sti___10_locale_cpp_ff99fc7b</a> from locale.o(i.__sti___10_locale_cpp_ff99fc7b) referenced from locale.o(.init_array)
 <LI><a href="#[15c]">__sti___10_rwcats_cpp_64e8068e</a> from rwcats.o(i.__sti___10_rwcats_cpp_64e8068e) referenced from rwcats.o(.init_array)
 <LI><a href="#[158]">__sti___11_GetData_cpp_8f60a30d</a> from getdata.o(.text) referenced from getdata.o(.init_array)
 <LI><a href="#[13c]">__sti___11_Receive_cpp_88bc3a46</a> from receive.o(.text) referenced from receive.o(.init_array)
 <LI><a href="#[14c]">__sti___11_dji_ack_cpp_0a38b940</a> from dji_ack.o(.text) referenced from dji_ack.o(.init_array)
 <LI><a href="#[13b]">__sti___12_Activate_cpp_c609511d</a> from activate.o(.text) referenced from activate.o(.init_array)
 <LI><a href="#[13d]">__sti___12_BspUsart_cpp_353bec44</a> from bspusart.o(.text) referenced from bspusart.o(.init_array)
 <LI><a href="#[147]">__sti___12_dji_mfio_cpp_c2ebea95</a> from dji_mfio.o(.text) referenced from dji_mfio.o(.init_array)
 <LI><a href="#[143]">__sti___14_dji_camera_cpp_cdfdda64</a> from dji_camera.o(.text) referenced from dji_camera.o(.init_array)
 <LI><a href="#[14f]">__sti___14_dji_gimbal_cpp_d619892c</a> from dji_gimbal.o(.text) referenced from dji_gimbal.o(.init_array)
 <LI><a href="#[134]">__sti___15_cppforstm32_cpp_2d9dc738</a> from cppforstm32.o(.text) referenced from cppforstm32.o(.init_array)
 <LI><a href="#[144]">__sti___15_dji_control_cpp_aae34645</a> from dji_control.o(.text) referenced from dji_control.o(.init_array)
 <LI><a href="#[141]">__sti___15_dji_vehicle_cpp_8f4cafc0</a> from dji_vehicle.o(.text) referenced from dji_vehicle.o(.init_array)
 <LI><a href="#[151]">__sti___15_dji_version_cpp_06fb57c7</a> from dji_version.o(.text) referenced from dji_version.o(.init_array)
 <LI><a href="#[139]">__sti___16_MobileSample_cpp_0cb23d9d</a> from mobilesample.o(.text) referenced from mobilesample.o(.init_array)
 <LI><a href="#[146]">__sti___16_dji_hotpoint_cpp_f4e83e9b</a> from dji_hotpoint.o(.text) referenced from dji_hotpoint.o(.init_array)
 <LI><a href="#[14d]">__sti___16_dji_waypoint_cpp_16ca33f4</a> from dji_waypoint.o(.text) referenced from dji_waypoint.o(.init_array)
 <LI><a href="#[137]">__sti___17_MissionSample_cpp_105bd650</a> from missionsample.o(.text) referenced from missionsample.o(.init_array)
 <LI><a href="#[159]">__sti___17_basicFunction_cpp_2da18785</a> from basicfunction.o(.text) referenced from basicfunction.o(.init_array)
 <LI><a href="#[14e]">__sti___17_dji_broadcast_cpp_d9fe0773</a> from dji_broadcast.o(.text) referenced from dji_broadcast.o(.init_array)
 <LI><a href="#[150]">__sti___18_dji_virtual_rc_cpp_fcc8de67</a> from dji_virtual_rc.o(.text) referenced from dji_virtual_rc.o(.init_array)
 <LI><a href="#[13a]">__sti___19_TelemetrySample_cpp_d62fb3f4</a> from telemetrysample.o(.text) referenced from telemetrysample.o(.init_array)
 <LI><a href="#[145]">__sti___19_dji_hard_driver_cpp_df62f7f1</a> from dji_hard_driver.o(.text) referenced from dji_hard_driver.o(.init_array)
 <LI><a href="#[14b]">__sti___20_dji_subscription_cpp_e3250e60</a> from dji_subscription.o(.text) referenced from dji_subscription.o(.init_array)
 <LI><a href="#[14a]">__sti___21_dji_hardware_sync_cpp_571dc58a</a> from dji_hardware_sync.o(.text) referenced from dji_hardware_sync.o(.init_array)
 <LI><a href="#[155]">__sti___21_dji_mobile_device_cpp_a8636f60</a> from dji_mobile_device.o(.text) referenced from dji_mobile_device.o(.init_array)
 <LI><a href="#[142]">__sti___21_dji_open_protocol_cpp_81b2a1ff</a> from dji_open_protocol.o(.text) referenced from dji_open_protocol.o(.init_array)
 <LI><a href="#[153]">__sti___21_dji_protocol_base_cpp_246ea02c</a> from dji_protocol_base.o(.text) referenced from dji_protocol_base.o(.init_array)
 <LI><a href="#[138]">__sti___22_CameraGimbalSample_cpp_2ed0a8e0</a> from cameragimbalsample.o(.text) referenced from cameragimbalsample.o(.init_array)
 <LI><a href="#[136]">__sti___23_FlightControlSample_cpp_8e9053dd</a> from flightcontrolsample.o(.text) referenced from flightcontrolsample.o(.init_array)
 <LI><a href="#[152]">__sti___23_dji_circular_buffer_cpp_bdb94397</a> from dji_circular_buffer.o(.text) referenced from dji_circular_buffer.o(.init_array)
 <LI><a href="#[148]">__sti___23_dji_mission_manager_cpp_d61cd15c</a> from dji_mission_manager.o(.text) referenced from dji_mission_manager.o(.init_array)
 <LI><a href="#[154]">__sti___24_dji_platform_manager_cpp_4a190e86</a> from dji_platform_manager.o(.text) referenced from dji_platform_manager.o(.init_array)
 <LI><a href="#[149]">__sti___28_dji_mobile_communication_cpp_a0253467</a> from dji_mobile_communication.o(.text) referenced from dji_mobile_communication.o(.init_array)
 <LI><a href="#[13f]">__sti___7_bsp_cpp_eb441081</a> from bsp.o(.text) referenced from bsp.o(.init_array)
 <LI><a href="#[140]">__sti___7_rtc_cpp_8afd6a98</a> from rtc.o(.text) referenced from rtc.o(.init_array)
 <LI><a href="#[15a]">__sti___8_char_cpp_a3dc957a</a> from char.o(i.__sti___8_char_cpp_a3dc957a) referenced from char.o(.init_array)
 <LI><a href="#[157]">__sti___8_list_cpp_dc6bb2e0</a> from list.o(.text) referenced from list.o(.init_array)
 <LI><a href="#[135]">__sti___8_main_cpp_078b5881</a> from main.o(.text) referenced from main.o(.init_array)
 <LI><a href="#[13e]">__sti___9_timer_cpp_tick</a> from timer.o(.text) referenced from timer.o(.init_array)
 <LI><a href="#[7f]">_sbackspace</a> from _sgetc.o(.text) referenced 3 times from __0sscanf.o(.text)
 <LI><a href="#[84]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[7e]">_sgetc</a> from _sgetc.o(.text) referenced 3 times from __0sscanf.o(.text)
 <LI><a href="#[a1]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0vsnprintf)
 <LI><a href="#[a0]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[a0]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[9f]">fputc</a> from cppforstm32.o(.text) referenced from printfa.o(i.__0fprintf)
 <LI><a href="#[9f]">fputc</a> from cppforstm32.o(.text) referenced from printfa.o(i.__0printf)
 <LI><a href="#[9f]">fputc</a> from cppforstm32.o(.text) referenced from printfa.o(i.__0vprintf)
 <LI><a href="#[85]">isspace</a> from isspace_o.o(.text) referenced 2 times from scanf_char.o(.text)
 <LI><a href="#[76]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[79]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(.text)
</UL>
<P><STRONG><a name="[561]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[15e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[481]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[562]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[160]"></a>_main_cpp_init$empty</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8a.o(.ARM.Collect$$$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = _main_cpp_init$empty &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[563]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[564]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[565]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[161]"></a>__rt_final_cpp$nonempty</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = __rt_final_cpp$nonempty &rArr; __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[566]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[163]"></a>__cxa_end_cleanup</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, arm_exceptions_cleanup.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_cxa_end_cleanup
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
</UL>

<P><STRONG><a name="[44a]"></a>_Unwind_Activity</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, unwind_activity.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_cpp_prcommon
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_RaiseException
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned)
</UL>

<P><STRONG><a name="[13]"></a>__ARM_Unwind_VRS_VFPpreserve_low</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, unwinder.o(.emb_text), UNUSED)

<P><STRONG><a name="[14]"></a>__ARM_Unwind_VRS_VFPpreserve_high</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, unwinder.o(.emb_text), UNUSED)

<P><STRONG><a name="[15]"></a>__ARM_Unwind_VRS_VFPrestore_low</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, unwinder.o(.emb_text), UNUSED)

<P><STRONG><a name="[16]"></a>__ARM_Unwind_VRS_VFPrestore_high</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, unwinder.o(.emb_text), UNUSED)

<P><STRONG><a name="[480]"></a>__ARM_Unwind_VRS_corerestore</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, unwinder.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_next_frame
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_Resume
</UL>

<P><STRONG><a name="[166]"></a>_Unwind_RaiseException</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, unwinder.o(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_RaiseException
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
</UL>

<P><STRONG><a name="[165]"></a>_Unwind_Resume</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, unwinder.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_Resume
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
</UL>

<P><STRONG><a name="[169]"></a>u2_printf</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, cppforstm32.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>

<P><STRONG><a name="[9f]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, cppforstm32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 3]<UL><LI> printfa.o(i.__0fprintf)
<LI> printfa.o(i.__0printf)
<LI> printfa.o(i.__0vprintf)
</UL>
<P><STRONG><a name="[16f]"></a>sendWaypoint(NODE*)</STRONG> (Thumb, 132 bytes, Stack size 80 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = sendWaypoint(NODE*) &rArr; UartBuffer::send(USART_TypeDef*, const void*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::send(USART_TypeDef*, const void*, unsigned char)
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::waypointUploading()
</UL>

<P><STRONG><a name="[76]"></a>main</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = main &rArr; [local to main_cpp]::waypointUploading() &rArr; [local to main_cpp]::renewFatfs() &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::functionalSetUp()
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::getEError()
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::getCmdFlg()
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::startAri()
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::clearEError()
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSPinit()
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::initFatfs()
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::saveAriToSd()
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::waypointUploading()
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::ledHandler()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[195]"></a>monitoredTakeOff()</STRONG> (Thumb, 910 bytes, Stack size 160 bytes, flightcontrolsample.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getDriver() const
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::takeoff(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::initPackageFromTopicList(int, int, DJI::OSDK::Telemetry::TopicName*, bool, unsigned short)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getStatus()
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getGlobalPosition()
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)27&rang;()
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)26&rang;()
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runHotpointMission(int)
</UL>

<P><STRONG><a name="[1a1]"></a>monitoredLanding()</STRONG> (Thumb, 830 bytes, Stack size 112 bytes, flightcontrolsample.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getDriver() const
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::land(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::initPackageFromTopicList(int, int, DJI::OSDK::Telemetry::TopicName*, bool, unsigned short)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getStatus()
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getGlobalPosition()
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)27&rang;()
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)26&rang;()
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runHotpointMission(int)
</UL>

<P><STRONG><a name="[1a3]"></a>localOffsetFromGpsOffset(DJI::OSDK::Vehicle*, DJI::OSDK::Telemetry::Vector3f&, void*, void*)</STRONG> (Thumb, 374 bytes, Stack size 80 bytes, flightcontrolsample.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
</UL>

<P><STRONG><a name="[1a8]"></a>toEulerAngle(void*)</STRONG> (Thumb, 690 bytes, Stack size 96 bytes, flightcontrolsample.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
</UL>

<P><STRONG><a name="[1ad]"></a>startGlobalPositionBroadcast(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, flightcontrolsample.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setBroadcastFreq(unsigned char*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
</UL>

<P><STRONG><a name="[1af]"></a>moveByPositionOffset(float, float, float, float, float, float)</STRONG> (Thumb, 2162 bytes, Stack size 328 bytes, flightcontrolsample.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::positionAndYawCtrl(float, float, float, float)
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::emergencyBrake()
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::initPackageFromTopicList(int, int, DJI::OSDK::Telemetry::TopicName*, bool, unsigned short)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int)
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getGlobalPosition()
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getQuaternion()
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)11&rang;()
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)0&rang;()
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::abs(double)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startGlobalPositionBroadcast(DJI::OSDK::Vehicle*)
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toEulerAngle(void*)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localOffsetFromGpsOffset(DJI::OSDK::Vehicle*, DJI::OSDK::Telemetry::Vector3f&, void*, void*)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[1bc]"></a>setUpSubscription(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, missionsample.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::initPackageFromTopicList(int, int, DJI::OSDK::Telemetry::TopicName*, bool, unsigned short)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runHotpointMission(int)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runWaypointMission(unsigned char)
</UL>

<P><STRONG><a name="[1bd]"></a>uploadWaypoints(std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;&)</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, missionsample.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexData(DJI::OSDK::WayPointSettings*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::begin()
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::end()
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runWaypointMission(unsigned char)
</UL>

<P><STRONG><a name="[1c5]"></a>setWaypointDefaults(DJI::OSDK::WayPointSettings*)</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, missionsample.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createWaypoints(int, double, float)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generateWaypointsPolygon(DJI::OSDK::WayPointSettings*, double, int)
</UL>

<P><STRONG><a name="[1c1]"></a>generateWaypointsPolygon(DJI::OSDK::WayPointSettings*, double, int)</STRONG> (Thumb, 368 bytes, Stack size 176 bytes, missionsample.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::push_back(const DJI::OSDK::WayPointSettings&)
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::begin()
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;DJI::OSDK::WayPointSettings&rang;::allocator()
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;DJI::OSDK::WayPointSettings&rang;::allocator(const std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&)
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWaypointDefaults(DJI::OSDK::WayPointSettings*)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createWaypoints(int, double, float)
</UL>

<P><STRONG><a name="[1c7]"></a>createWaypoints(int, double, float)</STRONG> (Thumb, 280 bytes, Stack size 208 bytes, missionsample.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generateWaypointsPolygon(DJI::OSDK::WayPointSettings*, double, int)
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWaypointDefaults(DJI::OSDK::WayPointSettings*)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getGlobalPosition()
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)11&rang;()
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runWaypointMission(unsigned char)
</UL>

<P><STRONG><a name="[1c9]"></a>setWaypointInitDefaults(DJI::OSDK::WayPointInitSettings*)</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, missionsample.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runWaypointMission(unsigned char)
</UL>

<P><STRONG><a name="[1c8]"></a>runWaypointMission(unsigned char)</STRONG> (Thumb, 340 bytes, Stack size 112 bytes, missionsample.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::printInfo()
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::init(DJI::OSDK::DJI_MISSION_TYPE, int, void*)
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::~vector()
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWaypointInitDefaults(DJI::OSDK::WayPointInitSettings*)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createWaypoints(int, double, float)
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uploadWaypoints(std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;&)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUpSubscription(DJI::OSDK::Vehicle*)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1cd]"></a>runHotpointMission(int)</STRONG> (Thumb, 622 bytes, Stack size 120 bytes, missionsample.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::updateYawRate(DJI::OSDK::HotpointMission::YawRate&, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::updateRadius(float, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::setHotPoint(double, double, double)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::printInfo()
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::init(DJI::OSDK::DJI_MISSION_TYPE, int, void*)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUpSubscription(DJI::OSDK::Vehicle*)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int)
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getGlobalPosition()
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)11&rang;()
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredLanding()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredTakeOff()
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[1d1]"></a>displayResult(RotationAngle*)</STRONG> (Thumb, 90 bytes, Stack size 48 bytes, cameragimbalsample.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gimbalCameraControl()
</UL>

<P><STRONG><a name="[1d2]"></a>doSetGimbalAngle(GimbalContainer*)</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, cameragimbalsample.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Gimbal::setAngle(DJI::OSDK::Gimbal::AngleData*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gimbalCameraControl()
</UL>

<P><STRONG><a name="[1d4]"></a>gimbalCameraControl()</STRONG> (Thumb, 2618 bytes, Stack size 216 bytes, cameragimbalsample.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getGimbal()
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)24&rang;()
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GimbalContainer::GimbalContainer(int, int, int, int, int, bool, bool, bool, RotationAngle, RotationAngle)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RotationAngle::RotationAngle(float, float, float)
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSetGimbalAngle(GimbalContainer*)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayResult(RotationAngle*)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::initPackageFromTopicList(int, int, DJI::OSDK::Telemetry::TopicName*, bool, unsigned short)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int)
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Gimbal::setSpeed(DJI::OSDK::Gimbal::SpeedData*)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Camera::videoStop()
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Camera::videoStart()
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Camera::shootPhoto()
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[1dd]"></a>actionMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 288 bytes, Stack size 80 bytes, mobilesample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1520<LI>Call Chain = actionMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*) &rArr; DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileCommunication::sendDataToMSDK(unsigned char*, unsigned char)
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mobilesample.o(.text)
</UL>
<P><STRONG><a name="[1e5]"></a>controlAuthorityMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 226 bytes, Stack size 80 bytes, mobilesample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = controlAuthorityMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::MobileCommunication::sendDataToMSDK(unsigned char*, unsigned char) &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::obtainCtrlAuthority(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::releaseCtrlAuthority(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileCommunication::sendDataToMSDK(unsigned char*, unsigned char)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mobilesample.o(.text)
</UL>
<P><STRONG><a name="[1e8]"></a>parseFromMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, mobilesample.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::obtainCtrlAuthority(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::releaseCtrlAuthority(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::armMotors(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::disArmMotors(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>

<P><STRONG><a name="[1ec]"></a>getBroadcastData()</STRONG> (Thumb, 430 bytes, Stack size 168 bytes, telemetrysample.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getStatus()
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getGlobalPosition()
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getQuaternion()
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getRC()
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setBroadcastFreqDefaults(int)
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getVelocity()
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[1f0]"></a>subscribeToData()</STRONG> (Thumb, 1262 bytes, Stack size 200 bytes, telemetrysample.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getDriver() const
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::initPackageFromTopicList(int, int, DJI::OSDK::Telemetry::TopicName*, bool, unsigned short)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int)
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)26&rang;()
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)11&rang;()
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)0&rang;()
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)4&rang;()
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)23&rang;()
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[190]"></a>userActivate()</STRONG> (Thumb, 30 bytes, Stack size 56 bytes, activate.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::droneInit()
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::OSDK::Vehicle*)
</UL>

<P><STRONG><a name="[1f4]"></a>TerminalCommand::terminalCommandHandler(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, receive.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userActivate()
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersion(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>

<P><STRONG><a name="[20f]"></a>SDIO_Register_Deinit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, sdio_sdcard.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[213]"></a>SD_SetDeviceMode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sdio_sdcard.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[212]"></a>SDIO_Clock_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sdio_sdcard.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[1f6]"></a>CmdResp1Error</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[1f9]"></a>FindSCR</STRONG> (Thumb, 390 bytes, Stack size 32 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
</UL>

<P><STRONG><a name="[1fc]"></a>SDEnWideBus</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
</UL>

<P><STRONG><a name="[1fd]"></a>SD_EnableWideBusOperation</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[1fe]"></a>SD_SelectDeselect</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SD_SelectDeselect &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[211]"></a>SD_GetCardInfo</STRONG> (Thumb, 806 bytes, Stack size 20 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SD_GetCardInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[1ff]"></a>CmdResp2Error</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CmdResp2Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
</UL>

<P><STRONG><a name="[200]"></a>CmdResp6Error</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CmdResp6Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
</UL>

<P><STRONG><a name="[201]"></a>SD_InitializeCards</STRONG> (Thumb, 354 bytes, Stack size 16 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SD_InitializeCards &rArr; CmdResp6Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetPowerState
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp2Error
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[203]"></a>CmdResp3Error</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CmdResp3Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[204]"></a>CmdResp7Error</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CmdResp7Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[205]"></a>CmdError</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CmdError
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[206]"></a>SD_PowerON</STRONG> (Thumb, 460 bytes, Stack size 32 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SD_PowerON &rArr; CmdError
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SetPowerState
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdError
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp7Error
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp3Error
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[209]"></a>SD_Init</STRONG> (Thumb, 334 bytes, Stack size 24 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCardInfo
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Clock_Set
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SetDeviceMode
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Register_Deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[214]"></a>SD_PowerOFF</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sdio_sdcard.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SetPowerState
</UL>

<P><STRONG><a name="[215]"></a>SD_DMA_Config</STRONG> (Thumb, 118 bytes, Stack size 80 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SD_DMA_Config &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetCmdStatus
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_FlowControllerConfig
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
</UL>

<P><STRONG><a name="[21c]"></a>convert_from_bytes_to_power_of_two</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sdio_sdcard.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
</UL>

<P><STRONG><a name="[21b]"></a>SD_ReadBlock</STRONG> (Thumb, 570 bytes, Stack size 40 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SD_ReadBlock &rArr; SD_DMA_Config &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_from_bytes_to_power_of_two
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMA_Config
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadDisk
</UL>

<P><STRONG><a name="[21d]"></a>SD_ReadMultiBlocks</STRONG> (Thumb, 756 bytes, Stack size 56 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SD_ReadMultiBlocks &rArr; SD_DMA_Config &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_from_bytes_to_power_of_two
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMA_Config
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadDisk
</UL>

<P><STRONG><a name="[21e]"></a>IsCardProgramming</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IsCardProgramming
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
</UL>

<P><STRONG><a name="[21f]"></a>SD_WriteBlock</STRONG> (Thumb, 906 bytes, Stack size 80 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCardProgramming
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_from_bytes_to_power_of_two
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMA_Config
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteDisk
</UL>

<P><STRONG><a name="[220]"></a>SD_WriteMultiBlocks</STRONG> (Thumb, 966 bytes, Stack size 72 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = SD_WriteMultiBlocks &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCardProgramming
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_from_bytes_to_power_of_two
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMA_Config
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteDisk
</UL>

<P><STRONG><a name="[221]"></a>SD_ProcessIRQSrc</STRONG> (Thumb, 300 bytes, Stack size 8 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SD_ProcessIRQSrc &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_IRQHandler
</UL>

<P><STRONG><a name="[55]"></a>SDIO_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SDIO_IRQHandler &rArr; SD_ProcessIRQSrc &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[222]"></a>SD_SendStatus</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, sdio_sdcard.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetState
</UL>

<P><STRONG><a name="[223]"></a>SD_GetState</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sdio_sdcard.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
</UL>

<P><STRONG><a name="[224]"></a>SD_ReadDisk</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SD_ReadDisk &rArr; SD_ReadMultiBlocks &rArr; SD_DMA_Config &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[226]"></a>SD_WriteDisk</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, sdio_sdcard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[227]"></a>USART1_Init(unsigned)</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, bspusart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USART1_Init(unsigned) &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartConfig()
</UL>

<P><STRONG><a name="[22a]"></a>USART2_Gpio_Config()</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, bspusart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USART2_Gpio_Config() &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Config()
</UL>

<P><STRONG><a name="[22b]"></a>USART3_Gpio_Config()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, bspusart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USART3_Gpio_Config() &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Config()
</UL>

<P><STRONG><a name="[22c]"></a>USART2_Config()</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, bspusart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USART2_Config() &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Gpio_Config()
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartConfig()
</UL>

<P><STRONG><a name="[22e]"></a>USART3_Config()</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, bspusart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USART3_Config() &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Gpio_Config()
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartConfig()
</UL>

<P><STRONG><a name="[22f]"></a>USARTxNVIC_Config()</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, bspusart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USARTxNVIC_Config() &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartConfig()
</UL>

<P><STRONG><a name="[230]"></a>UsartConfig()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bspusart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = UsartConfig() &rArr; USART1_Init(unsigned) &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTxNVIC_Config()
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Config()
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Config()
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSPinit()
</UL>

<P><STRONG><a name="[49]"></a>USART1_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bspusart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = USART1_IRQHandler &rArr; UartBuffer::byteHandler(unsigned char) &rArr; UartBuffer::storeDataBuffer(unsigned char) &rArr; UartBuffer::checkDataStream() &rArr; UartBuffer::verifyData() &rArr; isCRC(unsigned char*, unsigned short, unsigned short) &rArr; getCRC(unsigned char*, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::byteHandler(unsigned char)
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>USART2_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, bspusart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USART2_IRQHandler &rArr; UartBuffer::receAir(unsigned char) &rArr; UartBuffer::ariHandler() &rArr; UartBuffer::saveAriData(unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::receAir(unsigned char)
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>USART3_IRQHandler</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, bspusart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1488<LI>Call Chain = USART3_IRQHandler &rArr; DJI::OSDK::Vehicle::processReceivedData(DJI::OSDK::RecvContainer*) &rArr; DJI::OSDK::Vehicle::PushDataHandler(void*) &rArr; DJI::OSDK::CircularBuffer::cbPush(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler, DJI::OSDK::RecvContainer) &rArr; DJI::OSDK::CircularBuffer::cbPop(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler*, DJI::OSDK::RecvContainer*) &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::processReceivedData(DJI::OSDK::RecvContainer*)
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getReceivedFrame()
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>HardFault_Handler</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, bspusart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HardFault_Handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[237]"></a>Timer1Config()</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Timer1Config() &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSPinit()
</UL>

<P><STRONG><a name="[23c]"></a>Timer2Config()</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Timer2Config() &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSPinit()
</UL>

<P><STRONG><a name="[23e]"></a>SystickConfig()</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SystickConfig()
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSPinit()
</UL>

<P><STRONG><a name="[173]"></a>delay_nms(unsigned short)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::droneInit()
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::waypointUploading()
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::ledHandler()
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gimbalCameraControl()
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSetGimbalAngle(GimbalContainer*)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runHotpointMission(int)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runWaypointMission(unsigned char)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createWaypoints(int, double, float)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUpSubscription(DJI::OSDK::Vehicle*)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredLanding()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredTakeOff()
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcConfig()
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subscribeToData()
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeData()
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeFLIGHT()
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeGIMBAL_ANGLES()
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeGPS_FUSED()
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeBATTERY()
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::~Get_Data()
</UL>

<P><STRONG><a name="[23]"></a>SysTick_Handler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM1_UP_TIM10_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM2_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM2_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[186]"></a>BSPinit()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = BSPinit() &rArr; UsartConfig() &rArr; USART1_Init(unsigned) &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcConfig()
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledInit()
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Config
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystickConfig()
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartConfig()
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23f]"></a>DMA_Config</STRONG> (Thumb, 102 bytes, Stack size 64 bytes, dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DMA_Config &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetCmdStatus
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSPinit()
</UL>

<P><STRONG><a name="[242]"></a>DMA_Enable</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetCurrDataCounter
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetCmdStatus
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Start
</UL>

<P><STRONG><a name="[244]"></a>DMA_Start</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::sendDma(void*, unsigned char)
</UL>

<P><STRONG><a name="[241]"></a>ledInit()</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ledInit() &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSPinit()
</UL>

<P><STRONG><a name="[249]"></a>rtcSetDate(unsigned char, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rtcSetDate(unsigned char, unsigned char, unsigned char, unsigned char) &rArr; RTC_SetDate &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcConfig()
</UL>

<P><STRONG><a name="[24b]"></a>rtcSetTime(unsigned char, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rtcSetTime(unsigned char, unsigned char, unsigned char, unsigned char) &rArr; RTC_SetTime &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcConfig()
</UL>

<P><STRONG><a name="[240]"></a>RtcConfig()</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = RtcConfig() &rArr; rtcSetTime(unsigned char, unsigned char, unsigned char, unsigned char) &rArr; RTC_SetTime &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadBackupRegister
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtcSetTime(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtcSetDate(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSPinit()
</UL>

<P><STRONG><a name="[231]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartConfig()
</UL>

<P><STRONG><a name="[210]"></a>NVIC_Init</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTxNVIC_Config()
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[567]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[568]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[569]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[217]"></a>DMA_DeInit</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Config
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMA_Config
</UL>

<P><STRONG><a name="[218]"></a>DMA_Init</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, stm32f4xx_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Config
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMA_Config
</UL>

<P><STRONG><a name="[56a]"></a>DMA_StructInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[21a]"></a>DMA_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Enable
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMA_Config
</UL>

<P><STRONG><a name="[56b]"></a>DMA_PeriphIncOffsetSizeConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[219]"></a>DMA_FlowControllerConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMA_Config
</UL>

<P><STRONG><a name="[243]"></a>DMA_SetCurrDataCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Enable
</UL>

<P><STRONG><a name="[56c]"></a>DMA_GetCurrDataCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[56d]"></a>DMA_DoubleBufferModeConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[56e]"></a>DMA_DoubleBufferModeCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[56f]"></a>DMA_MemoryTargetConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[570]"></a>DMA_GetCurrentMemoryTarget</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[216]"></a>DMA_GetCmdStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Enable
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Config
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_DMA_Config
</UL>

<P><STRONG><a name="[571]"></a>DMA_GetFIFOStatus</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[246]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, stm32f4xx_dma.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Start
</UL>

<P><STRONG><a name="[247]"></a>DMA_ClearFlag</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Start
</UL>

<P><STRONG><a name="[572]"></a>DMA_ITConfig</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[573]"></a>DMA_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[574]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[255]"></a>GPIO_DeInit</STRONG> (Thumb, 220 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphResetCmd
</UL>

<P><STRONG><a name="[20d]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledInit()
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Gpio_Config()
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Gpio_Config()
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init(unsigned)
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[575]"></a>GPIO_StructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[576]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[577]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[578]"></a>GPIO_ReadInputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[579]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[57a]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[248]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledInit()
</UL>

<P><STRONG><a name="[57b]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[57c]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[57d]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[57e]"></a>GPIO_ToggleBits</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[20e]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Gpio_Config()
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Gpio_Config()
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init(unsigned)
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[257]"></a>PWR_DeInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_pwr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>

<P><STRONG><a name="[24d]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_pwr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcConfig()
</UL>

<P><STRONG><a name="[57f]"></a>PWR_PVDLevelConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_pwr.o(.text), UNUSED)

<P><STRONG><a name="[580]"></a>PWR_PVDCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_pwr.o(.text), UNUSED)

<P><STRONG><a name="[581]"></a>PWR_WakeUpPinCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_pwr.o(.text), UNUSED)

<P><STRONG><a name="[582]"></a>PWR_BackupRegulatorCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_pwr.o(.text), UNUSED)

<P><STRONG><a name="[583]"></a>PWR_MainRegulatorModeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_pwr.o(.text), UNUSED)

<P><STRONG><a name="[584]"></a>PWR_FlashPowerDownCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_pwr.o(.text), UNUSED)

<P><STRONG><a name="[585]"></a>PWR_EnterSTOPMode</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f4xx_pwr.o(.text), UNUSED)

<P><STRONG><a name="[586]"></a>PWR_EnterSTANDBYMode</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f4xx_pwr.o(.text), UNUSED)

<P><STRONG><a name="[587]"></a>PWR_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_pwr.o(.text), UNUSED)

<P><STRONG><a name="[588]"></a>PWR_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_pwr.o(.text), UNUSED)

<P><STRONG><a name="[589]"></a>RCC_DeInit</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[58a]"></a>RCC_HSEConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[250]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcConfig()
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[259]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>

<P><STRONG><a name="[58b]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[58c]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[24f]"></a>RCC_LSEConfig</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcConfig()
</UL>

<P><STRONG><a name="[58d]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[58e]"></a>RCC_PLLConfig</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[58f]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[590]"></a>RCC_PLLI2SConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[591]"></a>RCC_PLLI2SCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[592]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[593]"></a>RCC_MCO1Config</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[594]"></a>RCC_MCO2Config</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[595]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[596]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[597]"></a>RCC_HCLKConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[598]"></a>RCC_PCLK1Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[599]"></a>RCC_PCLK2Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[27a]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 222 bytes, Stack size 20 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[251]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcConfig()
</UL>

<P><STRONG><a name="[252]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcConfig()
</UL>

<P><STRONG><a name="[59a]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[59b]"></a>RCC_I2SCLKConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[59c]"></a>RCC_TIMCLKPresConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[20a]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledInit()
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Config
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Gpio_Config()
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Gpio_Config()
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init(unsigned)
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[59d]"></a>RCC_AHB2PeriphClockCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[59e]"></a>RCC_AHB3PeriphClockCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[22d]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcConfig()
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Config()
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Config()
</UL>

<P><STRONG><a name="[20b]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init(unsigned)
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[256]"></a>RCC_AHB1PeriphResetCmd</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
</UL>

<P><STRONG><a name="[59f]"></a>RCC_AHB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[5a0]"></a>RCC_AHB3PeriphResetCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[258]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_DeInit
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[20c]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DeInit
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[5a1]"></a>RCC_AHB1PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[5a2]"></a>RCC_AHB2PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[5a3]"></a>RCC_AHB3PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[5a4]"></a>RCC_APB1PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[5a5]"></a>RCC_APB2PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[5a6]"></a>RCC_ITConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[5a7]"></a>RCC_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[5a8]"></a>RCC_GetITStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[5a9]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[25c]"></a>RTC_WaitForSynchro</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SynchroShiftConfig
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_DeInit
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>

<P><STRONG><a name="[25b]"></a>RTC_EnterInitMode</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CoarseCalibCmd
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CoarseCalibConfig
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_RefClockCmd
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_DeInit
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[25a]"></a>RTC_DeInit</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
</UL>

<P><STRONG><a name="[25d]"></a>RTC_ExitInitMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CoarseCalibCmd
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CoarseCalibConfig
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_RefClockCmd
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[253]"></a>RTC_Init</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, stm32f4xx_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcConfig()
</UL>

<P><STRONG><a name="[5aa]"></a>RTC_StructInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5ab]"></a>RTC_WriteProtectionCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[25e]"></a>RTC_RefClockCmd</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, stm32f4xx_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>

<P><STRONG><a name="[5ac]"></a>RTC_BypassShadowCmd</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[24c]"></a>RTC_SetTime</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, stm32f4xx_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_SetTime &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtcSetTime(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[5ad]"></a>RTC_TimeStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[181]"></a>RTC_GetTime</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::saveAriToSd()
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>

<P><STRONG><a name="[5ae]"></a>RTC_GetSubSecond</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[24a]"></a>RTC_SetDate</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, stm32f4xx_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_SetDate &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtcSetDate(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[5af]"></a>RTC_DateStructInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[180]"></a>RTC_GetDate</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::saveAriToSd()
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>

<P><STRONG><a name="[261]"></a>RTC_SetAlarm</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, stm32f4xx_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
</UL>

<P><STRONG><a name="[5b0]"></a>RTC_AlarmStructInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[262]"></a>RTC_GetAlarm</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, stm32f4xx_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>

<P><STRONG><a name="[5b1]"></a>RTC_AlarmCmd</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5b2]"></a>RTC_AlarmSubSecondConfig</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5b3]"></a>RTC_GetAlarmSubSecond</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5b4]"></a>RTC_WakeUpClockConfig</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5b5]"></a>RTC_SetWakeUpCounter</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5b6]"></a>RTC_GetWakeUpCounter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5b7]"></a>RTC_WakeUpCmd</STRONG> (Thumb, 116 bytes, Stack size 12 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5b8]"></a>RTC_DayLightSavingConfig</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5b9]"></a>RTC_GetStoreOperation</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5ba]"></a>RTC_OutputConfig</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[263]"></a>RTC_CoarseCalibConfig</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>

<P><STRONG><a name="[264]"></a>RTC_CoarseCalibCmd</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, stm32f4xx_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>

<P><STRONG><a name="[5bb]"></a>RTC_CalibOutputCmd</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5bc]"></a>RTC_CalibOutputConfig</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5bd]"></a>RTC_SmoothCalibConfig</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5be]"></a>RTC_TimeStampCmd</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[265]"></a>RTC_GetTimeStamp</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, stm32f4xx_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>

<P><STRONG><a name="[5bf]"></a>RTC_GetTimeStampSubSecond</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5c0]"></a>RTC_TamperTriggerConfig</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5c1]"></a>RTC_TamperCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5c2]"></a>RTC_TamperFilterConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5c3]"></a>RTC_TamperSamplingFreqConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5c4]"></a>RTC_TamperPinsPrechargeDuration</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5c5]"></a>RTC_TimeStampOnTamperDetectionCmd</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5c6]"></a>RTC_TamperPullUpCmd</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[254]"></a>RTC_WriteBackupRegister</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_WriteBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcConfig()
</UL>

<P><STRONG><a name="[24e]"></a>RTC_ReadBackupRegister</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_ReadBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcConfig()
</UL>

<P><STRONG><a name="[5c7]"></a>RTC_TamperPinSelection</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5c8]"></a>RTC_TimeStampPinSelection</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5c9]"></a>RTC_OutputTypeConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[266]"></a>RTC_SynchroShiftConfig</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, stm32f4xx_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
</UL>

<P><STRONG><a name="[5ca]"></a>RTC_ITConfig</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5cb]"></a>RTC_GetFlagStatus</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5cc]"></a>RTC_ClearFlag</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5cd]"></a>RTC_GetITStatus</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[5ce]"></a>RTC_ClearITPendingBit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text), UNUSED)

<P><STRONG><a name="[267]"></a>SDIO_DeInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_sdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[207]"></a>SDIO_Init</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[5cf]"></a>SDIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[5d0]"></a>SDIO_ClockCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[208]"></a>SDIO_SetPowerState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerOFF
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[202]"></a>SDIO_GetPowerState</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
</UL>

<P><STRONG><a name="[1fa]"></a>SDIO_SendCommand</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCardProgramming
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[5d1]"></a>SDIO_CmdStructInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[5d2]"></a>SDIO_GetCommandResponse</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[5d3]"></a>SDIO_GetResponse</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[1fb]"></a>SDIO_DataConfig</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[5d4]"></a>SDIO_DataStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[5d5]"></a>SDIO_GetDataCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[5d6]"></a>SDIO_ReadData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[5d7]"></a>SDIO_WriteData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[5d8]"></a>SDIO_GetFIFOCount</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[5d9]"></a>SDIO_StartSDIOReadWait</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[5da]"></a>SDIO_StopSDIOReadWait</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[5db]"></a>SDIO_SetSDIOReadWaitMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[5dc]"></a>SDIO_SetSDIOOperation</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[5dd]"></a>SDIO_SendSDIOSuspendCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[5de]"></a>SDIO_CommandCompletionCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[5df]"></a>SDIO_CEATAITCmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[5e0]"></a>SDIO_SendCEATACmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[5e1]"></a>SDIO_DMACmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[5e2]"></a>SDIO_ITConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[1f7]"></a>SDIO_GetFlagStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCardProgramming
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdError
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp3Error
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp2Error
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>

<P><STRONG><a name="[1f8]"></a>SDIO_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCardProgramming
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdError
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp7Error
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp3Error
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp2Error
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>

<P><STRONG><a name="[5e3]"></a>SDIO_GetITStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[5e4]"></a>SDIO_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text), UNUSED)

<P><STRONG><a name="[268]"></a>TIM_DeInit</STRONG> (Thumb, 346 bytes, Stack size 8 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>

<P><STRONG><a name="[238]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
</UL>

<P><STRONG><a name="[5e5]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5e6]"></a>TIM_PrescalerConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5e7]"></a>TIM_CounterModeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5e8]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5e9]"></a>TIM_SetAutoreload</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5ea]"></a>TIM_GetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5eb]"></a>TIM_GetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5ec]"></a>TIM_UpdateDisableConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5ed]"></a>TIM_UpdateRequestConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5ee]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5ef]"></a>TIM_SelectOnePulseMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5f0]"></a>TIM_SetClockDivision</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[23b]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
</UL>

<P><STRONG><a name="[5f1]"></a>TIM_OC1Init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5f2]"></a>TIM_OC2Init</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5f3]"></a>TIM_OC3Init</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5f4]"></a>TIM_OC4Init</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5f5]"></a>TIM_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5f6]"></a>TIM_SelectOCxM</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5f7]"></a>TIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5f8]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5f9]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5fa]"></a>TIM_SetCompare4</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5fb]"></a>TIM_ForcedOC1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5fc]"></a>TIM_ForcedOC2Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5fd]"></a>TIM_ForcedOC3Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5fe]"></a>TIM_ForcedOC4Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[5ff]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[600]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[601]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[602]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[603]"></a>TIM_OC1FastConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[604]"></a>TIM_OC2FastConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[605]"></a>TIM_OC3FastConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[606]"></a>TIM_OC4FastConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[607]"></a>TIM_ClearOC1Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[608]"></a>TIM_ClearOC2Ref</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[609]"></a>TIM_ClearOC3Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[60a]"></a>TIM_ClearOC4Ref</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[60b]"></a>TIM_OC1PolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[60c]"></a>TIM_OC1NPolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[60d]"></a>TIM_OC2PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[60e]"></a>TIM_OC2NPolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[60f]"></a>TIM_OC3PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[610]"></a>TIM_OC3NPolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[611]"></a>TIM_OC4PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[612]"></a>TIM_CCxCmd</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[613]"></a>TIM_CCxNCmd</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[271]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[26f]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[26d]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[26b]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[269]"></a>TIM_ICInit</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI3_Config
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI4_Config
</UL>

<P><STRONG><a name="[614]"></a>TIM_ICStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[272]"></a>TIM_PWMIConfig</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[615]"></a>TIM_GetCapture1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[616]"></a>TIM_GetCapture2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[617]"></a>TIM_GetCapture3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[618]"></a>TIM_GetCapture4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[619]"></a>TIM_BDTRConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[61a]"></a>TIM_BDTRStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[61b]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[61c]"></a>TIM_SelectCOM</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[61d]"></a>TIM_CCPreloadControl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[23a]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
</UL>

<P><STRONG><a name="[61e]"></a>TIM_GenerateEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[61f]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[239]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_TIM10_IRQHandler
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2Config()
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1Config()
</UL>

<P><STRONG><a name="[23d]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_TIM10_IRQHandler
</UL>

<P><STRONG><a name="[620]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[621]"></a>TIM_DMAConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[622]"></a>TIM_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[623]"></a>TIM_SelectCCDMA</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[624]"></a>TIM_InternalClockConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[274]"></a>TIM_SelectInputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRxExternalClockConfig
</UL>

<P><STRONG><a name="[273]"></a>TIM_ITRxExternalClockConfig</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
</UL>

<P><STRONG><a name="[275]"></a>TIM_TIxExternalClockConfig</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[277]"></a>TIM_ETRConfig</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode2Config
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode1Config
</UL>

<P><STRONG><a name="[276]"></a>TIM_ETRClockMode1Config</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[278]"></a>TIM_ETRClockMode2Config</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[625]"></a>TIM_SelectOutputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[626]"></a>TIM_SelectSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[627]"></a>TIM_SelectMasterSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[628]"></a>TIM_EncoderInterfaceConfig</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[629]"></a>TIM_SelectHallSensor</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[62a]"></a>TIM_RemapConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[279]"></a>USART_DeInit</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>

<P><STRONG><a name="[228]"></a>USART_Init</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Config()
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Config()
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init(unsigned)
</UL>

<P><STRONG><a name="[62b]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[62c]"></a>USART_ClockInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[62d]"></a>USART_ClockStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[17a]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::waypointUploading()
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Config()
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Config()
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init(unsigned)
</UL>

<P><STRONG><a name="[62e]"></a>USART_SetPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[62f]"></a>USART_OverSampling8Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[630]"></a>USART_OneBitMethodCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[16d]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::send(USART_TypeDef*, const void*, unsigned char)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u2_printf
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4::send(const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[232]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[631]"></a>USART_SetAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[632]"></a>USART_ReceiverWakeUpCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[633]"></a>USART_WakeUpConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[634]"></a>USART_LINBreakDetectLengthConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[635]"></a>USART_LINCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[636]"></a>USART_SendBreak</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[637]"></a>USART_HalfDuplexCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[638]"></a>USART_SetGuardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[639]"></a>USART_SmartCardCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[63a]"></a>USART_SmartCardNACKCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[63b]"></a>USART_IrDAConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[63c]"></a>USART_IrDACmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[245]"></a>USART_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Start
</UL>

<P><STRONG><a name="[229]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Config()
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Config()
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init(unsigned)
</UL>

<P><STRONG><a name="[16c]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::send(USART_TypeDef*, const void*, unsigned char)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u2_printf
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Config()
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Config()
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4::send(const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[63d]"></a>USART_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[63e]"></a>USART_GetITStatus</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[63f]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, system_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(.text)
</UL>
<P><STRONG><a name="[640]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, system_stm32f4xx.o(.text), UNUSED)

<P><STRONG><a name="[1a]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[27d]"></a>DJI::OSDK::Vehicle::initMainReadThread()</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DJI::OSDK::Vehicle::initMainReadThread() &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::PlatformManager::addThread(DJI::OSDK::Vehicle*, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::mandatorySetUp()
</UL>

<P><STRONG><a name="[27f]"></a>DJI::OSDK::Vehicle::initOpenProtocol()</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = DJI::OSDK::Vehicle::initOpenProtocol() &rArr; DJI::OSDK::OpenProtocol::OpenProtocol(DJI::OSDK::PlatformManager*, const char*, unsigned) &rArr; DJI::OSDK::OpenProtocol::init(DJI::OSDK::HardDriver*, DJI::OSDK::MMU*, bool) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::PlatformManager::PlatformManager()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::OpenProtocol(DJI::OSDK::PlatformManager*, const char*, unsigned)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned, const std::nothrow_t&)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::mandatorySetUp()
</UL>

<P><STRONG><a name="[287]"></a>DJI::OSDK::Vehicle::initCMD_SetSupportMatrix()</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, dji_vehicle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::mandatorySetUp()
</UL>

<P><STRONG><a name="[286]"></a>DJI::OSDK::Vehicle::initCallbacks()</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dji_vehicle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::mandatorySetUp()
</UL>

<P><STRONG><a name="[283]"></a>DJI::OSDK::Vehicle::mandatorySetUp()</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = DJI::OSDK::Vehicle::mandatorySetUp() &rArr; DJI::OSDK::Vehicle::initOpenProtocol() &rArr; DJI::OSDK::OpenProtocol::OpenProtocol(DJI::OSDK::PlatformManager*, const char*, unsigned) &rArr; DJI::OSDK::OpenProtocol::init(DJI::OSDK::HardDriver*, DJI::OSDK::MMU*, bool) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::CircularBuffer()
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initCallbacks()
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initCMD_SetSupportMatrix()
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initOpenProtocol()
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMainReadThread()
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::Vehicle(bool)
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::Vehicle(const char*, unsigned, bool, bool)
</UL>

<P><STRONG><a name="[288]"></a>DJI::OSDK::Vehicle::Vehicle(const char*, unsigned, bool, bool)</STRONG> (Thumb, 174 bytes, Stack size 48 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::mandatorySetUp()
</UL>

<P><STRONG><a name="[641]"></a>DJI::OSDK::Vehicle::Vehicle__sub_object(const char*, unsigned, bool, bool)</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, dji_vehicle.o(.text), UNUSED)

<P><STRONG><a name="[193]"></a>DJI::OSDK::Vehicle::Vehicle(bool)</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = DJI::OSDK::Vehicle::Vehicle(bool) &rArr; DJI::OSDK::Vehicle::mandatorySetUp() &rArr; DJI::OSDK::Vehicle::initOpenProtocol() &rArr; DJI::OSDK::OpenProtocol::OpenProtocol(DJI::OSDK::PlatformManager*, const char*, unsigned) &rArr; DJI::OSDK::OpenProtocol::init(DJI::OSDK::HardDriver*, DJI::OSDK::MMU*, bool) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::mandatorySetUp()
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_078b5881
</UL>

<P><STRONG><a name="[642]"></a>DJI::OSDK::Vehicle::Vehicle__sub_object(bool)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dji_vehicle.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>DJI::OSDK::Vehicle::~Vehicle()</STRONG> (Thumb, 650 bytes, Stack size 32 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1552<LI>Call Chain = DJI::OSDK::Vehicle::~Vehicle() &rArr; DJI::OSDK::DataSubscription::reset(int) &rArr; DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*) &rArr; DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list::~list()
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::~Control()
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Gimbal::~Gimbal()
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Camera::~Camera()
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::~MFIO()
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileCommunication::~MobileCommunication()
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::~DataSubscription()
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::reset(int)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::PlatformManager::~PlatformManager()
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::~MissionManager()
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::~CircularBuffer()
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::~DataBroadcast()
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileDevice::~MobileDevice()
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::~BasicFunction()
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::~UartBuffer()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::droneInit()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[643]"></a>DJI::OSDK::Vehicle::~Vehicle__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dji_vehicle.o(.text), UNUSED)

<P><STRONG><a name="[1e6]"></a>DJI::OSDK::Vehicle::callbackIdIndex()</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, dji_vehicle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::obtainCtrlAuthority(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verify()
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexData(DJI::OSDK::WayPointSettings*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::updateYawRate(DJI::OSDK::HotpointMission::YawRate&, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::updateRadius(float, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int)
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setBroadcastFreq(unsigned char*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersion(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::releaseCtrlAuthority(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlAuthorityMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::controlAuthorityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::getValue(DJI::OSDK::MFIO::CHANNEL, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::setValue(DJI::OSDK::MFIO::CHANNEL, unsigned, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::config(DJI::OSDK::MFIO::MODE, DJI::OSDK::MFIO::CHANNEL, unsigned, unsigned short, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::getHotpointSettings(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::resetYaw(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::resume(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::pause(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::stop(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::start(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::killSwitch(DJI::OSDK::Control::KillSwitch, char*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::setArm(bool, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::reset()
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::init(DJI::OSDK::WayPointInitSettings*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::updateIdleVelocity(float, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::readIdleVelocity(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getIndex(unsigned char, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getWaypointSettings(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::resume(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::pause(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::stop(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::start(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>

<P><STRONG><a name="[1e7]"></a>DJI::OSDK::Vehicle::releaseCtrlAuthority(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DJI::OSDK::Vehicle::releaseCtrlAuthority(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*) &rArr; DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseFromMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlAuthorityMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::controlAuthorityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
</UL>

<P><STRONG><a name="[299]"></a>DJI::OSDK::Vehicle::controlAuthorityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 242 bytes, Stack size 80 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1520<LI>Call Chain = DJI::OSDK::Vehicle::controlAuthorityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*) &rArr; DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::obtainCtrlAuthority(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::releaseCtrlAuthority(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_vehicle.o(.text)
</UL>
<P><STRONG><a name="[192]"></a>DJI::OSDK::Vehicle::obtainCtrlAuthority(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DJI::OSDK::Vehicle::obtainCtrlAuthority(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*) &rArr; DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::droneInit()
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseFromMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlAuthorityMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::controlAuthorityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
</UL>

<P><STRONG><a name="[29a]"></a>DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int) &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verify(int)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::reset(int)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int, int)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int, int)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersion(int)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, int)
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::releaseCtrlAuthority(int)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::obtainCtrlAuthority(int)
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::getValue(DJI::OSDK::MFIO::CHANNEL, int)
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::setValue(DJI::OSDK::MFIO::CHANNEL, unsigned, int)
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::config(DJI::OSDK::MFIO::MODE, DJI::OSDK::MFIO::CHANNEL, unsigned, unsigned short, int)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::getHotpointSettings(int)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::resetYaw(int)
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::updateRadius(float, int)
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::updateYawRate(DJI::OSDK::HotpointMission::YawRate&, int)
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::resume(int)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::pause(int)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::stop(int)
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::start(int)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::killSwitch(DJI::OSDK::Control::KillSwitch, int, char*)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::setArm(bool, int)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, int)
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::init(DJI::OSDK::WayPointInitSettings*, int)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setBroadcastFreq(unsigned char*, int)
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::updateIdleVelocity(float, int)
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::readIdleVelocity(int)
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexData(DJI::OSDK::WayPointSettings*, int)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getIndex(unsigned char, int)
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getWaypointSettings(int)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::resume(int)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::pause(int)
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::stop(int)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::start(int)
</UL>

<P><STRONG><a name="[29c]"></a>DJI::OSDK::Vehicle::obtainCtrlAuthority(int)</STRONG> (Thumb, 120 bytes, Stack size 72 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::obtainCtrlAuthority(int)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::obtainCtrlAuthority(int)
</UL>

<P><STRONG><a name="[29d]"></a>DJI::OSDK::Vehicle::releaseCtrlAuthority(int)</STRONG> (Thumb, 120 bytes, Stack size 72 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::releaseCtrlAuthority(int)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::releaseCtrlAuthority(int)
</UL>

<P><STRONG><a name="[18f]"></a>DJI::OSDK::Vehicle::getFwVersion() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dji_vehicle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::droneInit()
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gimbalCameraControl()
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runHotpointMission(int)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runWaypointMission(unsigned char)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createWaypoints(int, double, float)
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::emergencyBrake()
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localOffsetFromGpsOffset(DJI::OSDK::Vehicle*, DJI::OSDK::Telemetry::Vector3f&, void*, void*)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredLanding()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredTakeOff()
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::processReceivedData(DJI::OSDK::RecvContainer*)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseFromMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actionMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initVersion()
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initGimbal()
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::killSwitch(DJI::OSDK::Control::KillSwitch, char*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::killSwitch(DJI::OSDK::Control::KillSwitch, int, char*)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::angularRateAndVertPosCtrl(float, float, float, float)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::flightCtrl(DJI::OSDK::Control::AdvancedCtrlData)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeData()
</UL>

<P><STRONG><a name="[1b0]"></a>DJI::OSDK::Vehicle::isLegacyM600()</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DJI::OSDK::Vehicle::isLegacyM600() &rArr; DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::takeoff(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::land(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getStatus()
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getVelocity()
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::armMotors(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::disArmMotors(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isCmdSetSupported(unsigned char)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initGimbal()
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::land(int)
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::goHome(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::goHome(int)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::takeoff(int)
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::disArmMotors(int)
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::armMotors(int)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, int)
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getBatteryInfo()
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getGPSInfo()
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getVelocityInfo()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getSyncStamp()
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getTimeStamp()
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
</UL>

<P><STRONG><a name="[29f]"></a>DJI::OSDK::Vehicle::initGimbal()</STRONG> (Thumb, 874 bytes, Stack size 88 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::initPackageFromTopicList(int, int, DJI::OSDK::Telemetry::TopicName*, bool, unsigned short)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Gimbal::Gimbal(DJI::OSDK::Vehicle*)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verify(int)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int, int)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int, int)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::PlatformManager::millisecSleep(int)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)25&rang;()
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned, const std::nothrow_t&)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, int)
</UL>

<P><STRONG><a name="[2b1]"></a>DJI::OSDK::Vehicle::getEncryption()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_vehicle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verify()
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexData(DJI::OSDK::WayPointSettings*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::updateYawRate(DJI::OSDK::HotpointMission::YawRate&, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::updateRadius(float, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int)
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setBroadcastFreq(unsigned char*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileCommunication::sendDataToMSDK(unsigned char*, unsigned char)
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Gimbal::setSpeed(DJI::OSDK::Gimbal::SpeedData*)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Gimbal::setAngle(DJI::OSDK::Gimbal::AngleData*)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verify(int)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::reset(int)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int, int)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int, int)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, int)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::getHotpointSettings(int)
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::getHotpointSettings(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::resetYaw(int)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::resetYaw(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::updateRadius(float, int)
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::updateYawRate(DJI::OSDK::HotpointMission::YawRate&, int)
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::resume(int)
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::resume(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::pause(int)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::pause(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::stop(int)
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::stop(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::start(int)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::start(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::killSwitch(DJI::OSDK::Control::KillSwitch, char*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::killSwitch(DJI::OSDK::Control::KillSwitch, int, char*)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::flightCtrl(DJI::OSDK::Control::AdvancedCtrlData)
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::flightCtrl(DJI::OSDK::Control::CtrlData)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::setArm(bool, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::setArm(bool, int)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, int)
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Camera::action(const unsigned char*)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::reset()
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HardwareSync::startSync(DJI::OSDK::HardwareSync::SyncSettings&)
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::init(DJI::OSDK::WayPointInitSettings*, int)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::init(DJI::OSDK::WayPointInitSettings*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileDevice::sendDataToMSDK(unsigned char*, unsigned char)
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::VirtualRC::neutralVRCSticks()
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::VirtualRC::sendData(DJI::OSDK::VirtualRCData)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::VirtualRC::setControl(bool, DJI::OSDK::VirtualRC::CutOff)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setBroadcastFreq(unsigned char*, int)
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::updateIdleVelocity(float, int)
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::updateIdleVelocity(float, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::readIdleVelocity(int)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::readIdleVelocity(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexData(DJI::OSDK::WayPointSettings*, int)
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getIndex(unsigned char, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getIndex(unsigned char, int)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getWaypointSettings(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getWaypointSettings(int)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::resume(int)
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::resume(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::pause(int)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::pause(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::stop(int)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::stop(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::start(int)
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::start(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>

<P><STRONG><a name="[2a7]"></a>DJI::OSDK::Vehicle::initMySubscribe()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DJI::OSDK::Vehicle::initMySubscribe() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::Get_Data()
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::functionalSetUp()
</UL>

<P><STRONG><a name="[2a9]"></a>DJI::OSDK::Vehicle::initTools()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DJI::OSDK::Vehicle::initTools() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::BasicFunction()
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::functionalSetUp()
</UL>

<P><STRONG><a name="[2ab]"></a>DJI::OSDK::Vehicle::initList()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = DJI::OSDK::Vehicle::initList() &rArr; list::list() &rArr; list::initList() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list::list()
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::functionalSetUp()
</UL>

<P><STRONG><a name="[2ad]"></a>DJI::OSDK::Vehicle::initUart()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = DJI::OSDK::Vehicle::initUart() &rArr; UartBuffer::UartBuffer() &rArr; UartBuffer::init() &rArr; UartBuffer::headInit() &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::UartBuffer()
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::functionalSetUp()
</UL>

<P><STRONG><a name="[187]"></a>DJI::OSDK::Vehicle::functionalSetUp()</STRONG> (Thumb, 598 bytes, Stack size 32 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = DJI::OSDK::Vehicle::functionalSetUp() &rArr; DJI::OSDK::Vehicle::initUart() &rArr; UartBuffer::UartBuffer() &rArr; UartBuffer::init() &rArr; UartBuffer::headInit() &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initUart()
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initList()
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initTools()
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMySubscribe()
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::droneInit()
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, int)
</UL>

<P><STRONG><a name="[2af]"></a>DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, int)</STRONG> (Thumb, 594 bytes, Stack size 96 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::functionalSetUp()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::setKey(const char*)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initGimbal()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[2b3]"></a>DJI::OSDK::Vehicle::parseDroneVersionInfo(DJI::OSDK::Version::VersionData&, unsigned char*)</STRONG> (Thumb, 1082 bytes, Stack size 160 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = DJI::OSDK::Vehicle::parseDroneVersionInfo(DJI::OSDK::Version::VersionData&, unsigned char*) &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersion(int)
</UL>

<P><STRONG><a name="[2b5]"></a>DJI::OSDK::Vehicle::getDroneVersion(int)</STRONG> (Thumb, 326 bytes, Stack size 72 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::parseDroneVersionInfo(DJI::OSDK::Version::VersionData&, unsigned char*)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[2b7]"></a>DJI::OSDK::Vehicle::getDroneVersionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 504 bytes, Stack size 56 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = DJI::OSDK::Vehicle::getDroneVersionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::Vehicle::parseDroneVersionInfo(DJI::OSDK::Version::VersionData&, unsigned char*) &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::parseDroneVersionInfo(DJI::OSDK::Version::VersionData&, unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_vehicle.o(.text)
</UL>
<P><STRONG><a name="[1f5]"></a>DJI::OSDK::Vehicle::getDroneVersion(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 134 bytes, Stack size 56 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DJI::OSDK::Vehicle::getDroneVersion(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*) &rArr; DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalCommand::terminalCommandHandler(DJI::OSDK::Vehicle*)
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initVersion()
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activateCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
</UL>

<P><STRONG><a name="[2b8]"></a>DJI::OSDK::Vehicle::activateCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 272 bytes, Stack size 80 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1520<LI>Call Chain = DJI::OSDK::Vehicle::activateCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*) &rArr; DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersion(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::setKey(const char*)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_vehicle.o(.text)
</UL>
<P><STRONG><a name="[1f3]"></a>DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 332 bytes, Stack size 80 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::functionalSetUp()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userActivate()
</UL>

<P><STRONG><a name="[2b9]"></a>DJI::OSDK::Vehicle::getAccountData() const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[2ba]"></a>DJI::OSDK::Vehicle::setAccountData(const DJI::OSDK::Vehicle::ActivateData&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[644]"></a>DJI::OSDK::Vehicle::setVersion(const unsigned&)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dji_vehicle.o(.text), UNUSED)

<P><STRONG><a name="[30e]"></a>DJI::OSDK::Vehicle::getHwVersion() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::emergencyBrake()
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::angularRateAndVertPosCtrl(float, float, float, float)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::flightCtrl(DJI::OSDK::Control::AdvancedCtrlData)
</UL>

<P><STRONG><a name="[645]"></a>DJI::OSDK::Vehicle::getHwSerialNum() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_vehicle.o(.text), UNUSED)

<P><STRONG><a name="[2bb]"></a>DJI::OSDK::Vehicle::isM100()</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::takeoff(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::land(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getStatus()
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getVelocity()
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::armMotors(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::disArmMotors(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::land(int)
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::goHome(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::goHome(int)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::takeoff(int)
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::disArmMotors(int)
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::armMotors(int)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, int)
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setVersionDefaults(unsigned char*)
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getBatteryInfo()
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getVelocityInfo()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getSyncStamp()
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getTimeStamp()
</UL>

<P><STRONG><a name="[2bc]"></a>DJI::OSDK::Vehicle::setLastReceivedFrame(DJI::OSDK::RecvContainer)</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[2bd]"></a>DJI::OSDK::Vehicle::getLastReceivedFrame()</STRONG> (Thumb, 70 bytes, Stack size 336 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[2be]"></a>DJI::OSDK::Vehicle::PushDataHandler(void*)</STRONG> (Thumb, 1548 bytes, Stack size 656 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = DJI::OSDK::Vehicle::PushDataHandler(void*) &rArr; DJI::OSDK::CircularBuffer::cbPush(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler, DJI::OSDK::RecvContainer) &rArr; DJI::OSDK::CircularBuffer::cbPop(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler*, DJI::OSDK::RecvContainer*) &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::cbPush(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler, DJI::OSDK::RecvContainer)
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::processReceivedData(DJI::OSDK::RecvContainer*)
</UL>

<P><STRONG><a name="[2c0]"></a>DJI::OSDK::Vehicle::ACKHandler(void*)</STRONG> (Thumb, 520 bytes, Stack size 40 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DJI::OSDK::Vehicle::ACKHandler(void*) &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::processReceivedData(DJI::OSDK::RecvContainer*)
</UL>

<P><STRONG><a name="[236]"></a>DJI::OSDK::Vehicle::processReceivedData(DJI::OSDK::RecvContainer*)</STRONG> (Thumb, 602 bytes, Stack size 656 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1472<LI>Call Chain = DJI::OSDK::Vehicle::processReceivedData(DJI::OSDK::RecvContainer*) &rArr; DJI::OSDK::Vehicle::PushDataHandler(void*) &rArr; DJI::OSDK::CircularBuffer::cbPush(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler, DJI::OSDK::RecvContainer) &rArr; DJI::OSDK::CircularBuffer::cbPop(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler*, DJI::OSDK::RecvContainer*) &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::cbPush(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler, DJI::OSDK::RecvContainer)
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::ACKHandler(void*)
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::PushDataHandler(void*)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[2c1]"></a>DJI::OSDK::Vehicle::callbackPoll()</STRONG> (Thumb, 116 bytes, Stack size 656 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::cbPop(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler*, DJI::OSDK::RecvContainer*)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[646]"></a>DJI::OSDK::Vehicle::getSerialReadThread() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_vehicle.o(.text), UNUSED)

<P><STRONG><a name="[647]"></a>DJI::OSDK::Vehicle::getCallbackThread() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_vehicle.o(.text), UNUSED)

<P><STRONG><a name="[648]"></a>DJI::OSDK::Vehicle::getUSBReadThread() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_vehicle.o(.text), UNUSED)

<P><STRONG><a name="[649]"></a>DJI::OSDK::Vehicle::isUSBThreadReady()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_vehicle.o(.text), UNUSED)

<P><STRONG><a name="[64a]"></a>DJI::OSDK::Vehicle::getRawVersionAck()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_vehicle.o(.text), UNUSED)

<P><STRONG><a name="[2c3]"></a>DJI::OSDK::Vehicle::initFullPlatformSupport()</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::PlatformManager::addThread(DJI::OSDK::Vehicle*, unsigned char)
</UL>

<P><STRONG><a name="[2c4]"></a>DJI::OSDK::Vehicle::isCmdSetSupported(unsigned char)</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initVirtualRC()
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initHardSync()
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMFIO()
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initControl()
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initBroadcast()
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initSubscriber()
</UL>

<P><STRONG><a name="[2c5]"></a>DJI::OSDK::Vehicle::initSubscriber()</STRONG> (Thumb, 238 bytes, Stack size 40 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::DataSubscription(DJI::OSDK::Vehicle*)
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removeLeftOverPackages()
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::PlatformManager::millisecSleep(int)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isCmdSetSupported(unsigned char)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>

<P><STRONG><a name="[2c8]"></a>DJI::OSDK::Vehicle::initBroadcast()</STRONG> (Thumb, 594 bytes, Stack size 32 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::DataBroadcast(DJI::OSDK::Vehicle*)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isCmdSetSupported(unsigned char)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned, const std::nothrow_t&)
</UL>

<P><STRONG><a name="[2ca]"></a>DJI::OSDK::Vehicle::initControl()</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::Control(DJI::OSDK::Vehicle*)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isCmdSetSupported(unsigned char)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned, const std::nothrow_t&)
</UL>

<P><STRONG><a name="[2cc]"></a>DJI::OSDK::Vehicle::initCamera()</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Camera::Camera(DJI::OSDK::Vehicle*)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned, const std::nothrow_t&)
</UL>

<P><STRONG><a name="[2ce]"></a>DJI::OSDK::Vehicle::initMFIO()</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::MFIO(DJI::OSDK::Vehicle*)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isCmdSetSupported(unsigned char)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned, const std::nothrow_t&)
</UL>

<P><STRONG><a name="[2d0]"></a>DJI::OSDK::Vehicle::initMOC()</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileCommunication::MobileCommunication(DJI::OSDK::Vehicle*)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned, const std::nothrow_t&)
</UL>

<P><STRONG><a name="[2d2]"></a>DJI::OSDK::Vehicle::initMobileDevice()</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileDevice::MobileDevice(DJI::OSDK::Vehicle*)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned, const std::nothrow_t&)
</UL>

<P><STRONG><a name="[2d4]"></a>DJI::OSDK::Vehicle::initMissionManager()</STRONG> (Thumb, 758 bytes, Stack size 32 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::MissionManager(DJI::OSDK::Vehicle*)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned, const std::nothrow_t&)
</UL>

<P><STRONG><a name="[2d6]"></a>DJI::OSDK::Vehicle::initHardSync()</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HardwareSync::HardwareSync(DJI::OSDK::Vehicle*)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isCmdSetSupported(unsigned char)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned, const std::nothrow_t&)
</UL>

<P><STRONG><a name="[2d8]"></a>DJI::OSDK::Vehicle::initVirtualRC()</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::VirtualRC::VirtualRC(DJI::OSDK::Vehicle*)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isCmdSetSupported(unsigned char)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned, const std::nothrow_t&)
</UL>

<P><STRONG><a name="[2da]"></a>DJI::OSDK::Vehicle::initVersion()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dji_vehicle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersion(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::PlatformManager::millisecSleep(int)
</UL>

<P><STRONG><a name="[64b]"></a>DJI::OSDK::Vehicle::getPlatformManager() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_vehicle.o(.text), UNUSED)

<P><STRONG><a name="[64c]"></a>DJI::OSDK::Vehicle::setEncryption(bool)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_vehicle.o(.text), UNUSED)

<P><STRONG><a name="[2dd]"></a>DJI::OSDK::OpenProtocol::setupSession()</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DJI::OSDK::OpenProtocol::setupSession()
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::setup()
</UL>

<P><STRONG><a name="[2db]"></a>DJI::OSDK::OpenProtocol::setup()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DJI::OSDK::OpenProtocol::setup() &rArr; DJI::OSDK::OpenProtocol::setupSession()
</UL>
<BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MMU::setupMMU()
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::setupSession()
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::init(DJI::OSDK::HardDriver*, DJI::OSDK::MMU*, bool)
</UL>

<P><STRONG><a name="[bd]"></a>DJI::OSDK::OpenProtocol::init(DJI::OSDK::HardDriver*, DJI::OSDK::MMU*, bool)</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = DJI::OSDK::OpenProtocol::init(DJI::OSDK::HardDriver*, DJI::OSDK::MMU*, bool) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::setup()
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::OpenProtocol(DJI::OSDK::PlatformManager*, const char*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
</UL>
<P><STRONG><a name="[282]"></a>DJI::OSDK::OpenProtocol::OpenProtocol(DJI::OSDK::PlatformManager*, const char*, unsigned)</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DJI::OSDK::OpenProtocol::OpenProtocol(DJI::OSDK::PlatformManager*, const char*, unsigned) &rArr; DJI::OSDK::OpenProtocol::init(DJI::OSDK::HardDriver*, DJI::OSDK::MMU*, bool) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::PlatformManager::addThreadHandle()
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::PlatformManager::addHardDriver(unsigned char, const char*, unsigned)
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::ProtocolBase__sub_object()
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::setMaxRecvLength(int)
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::setHeaderLength(unsigned char)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::init(DJI::OSDK::HardDriver*, DJI::OSDK::MMU*, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initOpenProtocol()
</UL>

<P><STRONG><a name="[64d]"></a>DJI::OSDK::OpenProtocol::OpenProtocol__sub_object(DJI::OSDK::PlatformManager*, const char*, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, dji_open_protocol.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>DJI::OSDK::OpenProtocol::~OpenProtocol()</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DJI::OSDK::OpenProtocol::~OpenProtocol() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::~ProtocolBase__sub_object()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::~OpenProtocol__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
</UL>
<P><STRONG><a name="[64e]"></a>DJI::OSDK::OpenProtocol::~OpenProtocol__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dji_open_protocol.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>DJI::OSDK::OpenProtocol::~OpenProtocol__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DJI::OSDK::OpenProtocol::~OpenProtocol__deallocating() &rArr; DJI::OSDK::OpenProtocol::~OpenProtocol() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::~OpenProtocol()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
</UL>
<P><STRONG><a name="[2e5]"></a>DJI::OSDK::OpenProtocol::freeACK(DJI::OSDK::ACKSession*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, dji_open_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MMU::freeMemory(DJI::OSDK::MMU_Tab*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::allocACK(unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[2e7]"></a>DJI::OSDK::OpenProtocol::allocACK(unsigned short, unsigned short)</STRONG> (Thumb, 192 bytes, Stack size 48 bytes, dji_open_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MMU::allocMemory(unsigned short)
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::freeACK(DJI::OSDK::ACKSession*)
</UL>

<P><STRONG><a name="[2e9]"></a>DJI::OSDK::OpenProtocol::allocSession(unsigned short, unsigned short)</STRONG> (Thumb, 324 bytes, Stack size 48 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DJI::OSDK::OpenProtocol::allocSession(unsigned short, unsigned short) &rArr; DJI::OSDK::MMU::allocMemory(unsigned short) &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MMU::allocMemory(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::sendInterface(void*)
</UL>

<P><STRONG><a name="[2ea]"></a>DJI::OSDK::OpenProtocol::freeSession(DJI::OSDK::CMDSession*)</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DJI::OSDK::OpenProtocol::freeSession(DJI::OSDK::CMDSession*) &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MMU::freeMemory(DJI::OSDK::MMU_Tab*)
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::appHandler(void*)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::sendInterface(void*)
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::sendPoll()
</UL>

<P><STRONG><a name="[298]"></a>DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::obtainCtrlAuthority(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verify()
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexData(DJI::OSDK::WayPointSettings*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::updateYawRate(DJI::OSDK::HotpointMission::YawRate&, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::updateRadius(float, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int)
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setBroadcastFreq(unsigned char*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersion(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::releaseCtrlAuthority(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileCommunication::sendDataToMSDK(unsigned char*, unsigned char)
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Gimbal::setSpeed(DJI::OSDK::Gimbal::SpeedData*)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Gimbal::setAngle(DJI::OSDK::Gimbal::AngleData*)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verify(int)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::reset(int)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int, int)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int, int)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersion(int)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, int)
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::releaseCtrlAuthority(int)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::obtainCtrlAuthority(int)
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::getValue(DJI::OSDK::MFIO::CHANNEL, int)
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::setValue(DJI::OSDK::MFIO::CHANNEL, unsigned, int)
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::config(DJI::OSDK::MFIO::MODE, DJI::OSDK::MFIO::CHANNEL, unsigned, unsigned short, int)
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::getValue(DJI::OSDK::MFIO::CHANNEL, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::setValue(DJI::OSDK::MFIO::CHANNEL, unsigned, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::config(DJI::OSDK::MFIO::MODE, DJI::OSDK::MFIO::CHANNEL, unsigned, unsigned short, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::getHotpointSettings(int)
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::getHotpointSettings(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::resetYaw(int)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::resetYaw(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::updateRadius(float, int)
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::updateYawRate(DJI::OSDK::HotpointMission::YawRate&, int)
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::resume(int)
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::resume(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::pause(int)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::pause(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::stop(int)
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::stop(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::start(int)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::start(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::killSwitch(DJI::OSDK::Control::KillSwitch, char*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::killSwitch(DJI::OSDK::Control::KillSwitch, int, char*)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::flightCtrl(DJI::OSDK::Control::AdvancedCtrlData)
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::flightCtrl(DJI::OSDK::Control::CtrlData)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::setArm(bool, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::setArm(bool, int)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, int)
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Camera::action(const unsigned char*)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::reset()
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HardwareSync::startSync(DJI::OSDK::HardwareSync::SyncSettings&)
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::init(DJI::OSDK::WayPointInitSettings*, int)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::init(DJI::OSDK::WayPointInitSettings*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileDevice::sendDataToMSDK(unsigned char*, unsigned char)
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::VirtualRC::neutralVRCSticks()
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::VirtualRC::sendData(DJI::OSDK::VirtualRCData)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::VirtualRC::setControl(bool, DJI::OSDK::VirtualRC::CutOff)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setBroadcastFreq(unsigned char*, int)
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::updateIdleVelocity(float, int)
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::updateIdleVelocity(float, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::readIdleVelocity(int)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::readIdleVelocity(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexData(DJI::OSDK::WayPointSettings*, int)
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getIndex(unsigned char, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getIndex(unsigned char, int)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getWaypointSettings(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getWaypointSettings(int)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::resume(int)
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::resume(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::pause(int)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::pause(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::stop(int)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::stop(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::start(int)
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::start(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>

<P><STRONG><a name="[64f]"></a>DJI::OSDK::OpenProtocol::send(DJI::OSDK::Command*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dji_open_protocol.o(.text), UNUSED)

<P><STRONG><a name="[2eb]"></a>DJI::OSDK::OpenProtocol::sendPoll()</STRONG> (Thumb, 748 bytes, Stack size 40 bytes, dji_open_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::freeSession(DJI::OSDK::CMDSession*)
</UL>

<P><STRONG><a name="[2ed]"></a>DJI::OSDK::OpenProtocol::crc32Update(unsigned, unsigned char)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DJI::OSDK::OpenProtocol::crc32Update(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::crc32Calc(const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[2ec]"></a>DJI::OSDK::OpenProtocol::crc32Calc(const unsigned char*, unsigned)</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DJI::OSDK::OpenProtocol::crc32Calc(const unsigned char*, unsigned) &rArr; DJI::OSDK::OpenProtocol::crc32Update(unsigned, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::crc32Update(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::crcTailCheck(unsigned char*, unsigned)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::calculateCRC(void*)
</UL>

<P><STRONG><a name="[2ef]"></a>DJI::OSDK::OpenProtocol::crc16Update(unsigned short, unsigned char)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DJI::OSDK::OpenProtocol::crc16Update(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::crc16Calc(const unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[2ee]"></a>DJI::OSDK::OpenProtocol::crc16Calc(const unsigned char*, unsigned)</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DJI::OSDK::OpenProtocol::crc16Calc(const unsigned char*, unsigned) &rArr; DJI::OSDK::OpenProtocol::crc16Update(unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::crc16Update(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::crcHeadCheck(unsigned char*, unsigned)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::calculateCRC(void*)
</UL>

<P><STRONG><a name="[2f0]"></a>DJI::OSDK::OpenProtocol::calculateCRC(void*)</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DJI::OSDK::OpenProtocol::calculateCRC(void*) &rArr; DJI::OSDK::OpenProtocol::crc16Calc(const unsigned char*, unsigned) &rArr; DJI::OSDK::OpenProtocol::crc16Update(unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::crc16Calc(const unsigned char*, unsigned)
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::crc32Calc(const unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[2f4]"></a>DJI::OSDK::OpenProtocol::setRawFrame(unsigned char*)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_open_protocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::encodeData(DJI::OSDK::OpenHeader*, void(*)(tagAES256Context*, unsigned char*))
</UL>

<P><STRONG><a name="[2f1]"></a>DJI::OSDK::OpenProtocol::encodeData(DJI::OSDK::OpenHeader*, void(*)(tagAES256Context*, unsigned char*))</STRONG> (Thumb, 142 bytes, Stack size 136 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = DJI::OSDK::OpenProtocol::encodeData(DJI::OSDK::OpenHeader*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_init(tagAES256Context*, unsigned char*)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_done(tagAES256Context*)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::setRawFrame(unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::callApp()
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[2f5]"></a>DJI::OSDK::OpenProtocol::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short)</STRONG> (Thumb, 526 bytes, Stack size 64 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = DJI::OSDK::OpenProtocol::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; DJI::OSDK::OpenProtocol::encodeData(DJI::OSDK::OpenHeader*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::encodeData(DJI::OSDK::OpenHeader*, void(*)(tagAES256Context*, unsigned char*))
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::calculateCRC(void*)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::sendInterface(void*)
</UL>

<P><STRONG><a name="[2f6]"></a>DJI::OSDK::OpenProtocol::calculateLength(unsigned short, unsigned short)</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DJI::OSDK::OpenProtocol::calculateLength(unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::sendInterface(void*)
</UL>

<P><STRONG><a name="[be]"></a>DJI::OSDK::OpenProtocol::sendInterface(void*)</STRONG> (Thumb, 1926 bytes, Stack size 64 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = DJI::OSDK::OpenProtocol::sendInterface(void*) &rArr; DJI::OSDK::OpenProtocol::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short) &rArr; DJI::OSDK::OpenProtocol::encodeData(DJI::OSDK::OpenHeader*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::calculateLength(unsigned short, unsigned short)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short)
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::freeSession(DJI::OSDK::CMDSession*)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::allocSession(unsigned short, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
</UL>
<P><STRONG><a name="[bf]"></a>DJI::OSDK::OpenProtocol::sendData(unsigned char*)</STRONG> (Thumb, 390 bytes, Stack size 40 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DJI::OSDK::OpenProtocol::sendData(unsigned char*) &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
</UL>
<P><STRONG><a name="[c5]"></a>DJI::OSDK::OpenProtocol::checkStream()</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DJI::OSDK::OpenProtocol::checkStream()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
</UL>
<P><STRONG><a name="[c6]"></a>DJI::OSDK::OpenProtocol::verifyHead()</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DJI::OSDK::OpenProtocol::verifyHead() &rArr; DJI::OSDK::ProtocolBase::shiftDataStream() &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::shiftDataStream()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
</UL>
<P><STRONG><a name="[c7]"></a>DJI::OSDK::OpenProtocol::verifyData()</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DJI::OSDK::OpenProtocol::verifyData() &rArr; DJI::OSDK::ProtocolBase::reuseDataStream() &rArr; DJI::OSDK::ProtocolBase::shiftDataStream() &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::reuseDataStream()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
</UL>
<P><STRONG><a name="[c8]"></a>DJI::OSDK::OpenProtocol::callApp()</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = DJI::OSDK::OpenProtocol::callApp() &rArr; DJI::OSDK::OpenProtocol::encodeData(DJI::OSDK::OpenHeader*, void(*)(tagAES256Context*, unsigned char*)) &rArr; aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::prepareDataStream()
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::encodeData(DJI::OSDK::OpenHeader*, void(*)(tagAES256Context*, unsigned char*))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
</UL>
<P><STRONG><a name="[2fc]"></a>DJI::OSDK::OpenProtocol::getCmdCode(DJI::OSDK::OpenHeader*)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dji_open_protocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::recvReqData(DJI::OSDK::OpenHeader*)
</UL>

<P><STRONG><a name="[2fb]"></a>DJI::OSDK::OpenProtocol::getCmdSet(DJI::OSDK::OpenHeader*)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dji_open_protocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::recvReqData(DJI::OSDK::OpenHeader*)
</UL>

<P><STRONG><a name="[2fa]"></a>DJI::OSDK::OpenProtocol::recvReqData(DJI::OSDK::OpenHeader*)</STRONG> (Thumb, 104 bytes, Stack size 120 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = DJI::OSDK::OpenProtocol::recvReqData(DJI::OSDK::OpenHeader*) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::getCmdSet(DJI::OSDK::OpenHeader*)
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::getCmdCode(DJI::OSDK::OpenHeader*)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::appHandler(void*)
</UL>

<P><STRONG><a name="[2fe]"></a>DJI::OSDK::OpenProtocol::setACKFrameStatus(unsigned)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_open_protocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::appHandler(void*)
</UL>

<P><STRONG><a name="[2fd]"></a>DJI::OSDK::OpenProtocol::allocateACK(DJI::OSDK::OpenHeader*)</STRONG> (Thumb, 56 bytes, Stack size 320 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = DJI::OSDK::OpenProtocol::allocateACK(DJI::OSDK::OpenHeader*) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::appHandler(void*)
</UL>

<P><STRONG><a name="[c9]"></a>DJI::OSDK::OpenProtocol::appHandler(void*)</STRONG> (Thumb, 1134 bytes, Stack size 336 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = DJI::OSDK::OpenProtocol::appHandler(void*) &rArr; DJI::OSDK::OpenProtocol::allocateACK(DJI::OSDK::OpenHeader*) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::allocateACK(DJI::OSDK::OpenHeader*)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::setACKFrameStatus(unsigned)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::recvReqData(DJI::OSDK::OpenHeader*)
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::freeSession(DJI::OSDK::CMDSession*)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
</UL>
<P><STRONG><a name="[ca]"></a>DJI::OSDK::OpenProtocol::crcHeadCheck(unsigned char*, unsigned)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DJI::OSDK::OpenProtocol::crcHeadCheck(unsigned char*, unsigned) &rArr; DJI::OSDK::OpenProtocol::crc16Calc(const unsigned char*, unsigned) &rArr; DJI::OSDK::OpenProtocol::crc16Update(unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::crc16Calc(const unsigned char*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
</UL>
<P><STRONG><a name="[cb]"></a>DJI::OSDK::OpenProtocol::crcTailCheck(unsigned char*, unsigned)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DJI::OSDK::OpenProtocol::crcTailCheck(unsigned char*, unsigned) &rArr; DJI::OSDK::OpenProtocol::crc32Calc(const unsigned char*, unsigned) &rArr; DJI::OSDK::OpenProtocol::crc32Update(unsigned, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::crc32Calc(const unsigned char*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
</UL>
<P><STRONG><a name="[2ff]"></a>DJI::OSDK::OpenProtocol::transformTwoByte(const char*, unsigned char*)</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = DJI::OSDK::OpenProtocol::transformTwoByte(const char*, unsigned char*) &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::setKey(const char*)
</UL>

<P><STRONG><a name="[2b2]"></a>DJI::OSDK::OpenProtocol::setKey(const char*)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = DJI::OSDK::OpenProtocol::setKey(const char*) &rArr; DJI::OSDK::OpenProtocol::transformTwoByte(const char*, unsigned char*) &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::transformTwoByte(const char*, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activateCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, int)
</UL>

<P><STRONG><a name="[650]"></a>DJI::OSDK::OpenProtocol::getRawFrame()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_open_protocol.o(.text), UNUSED)

<P><STRONG><a name="[2cd]"></a>DJI::OSDK::Camera::Camera(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dji_camera.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initCamera()
</UL>

<P><STRONG><a name="[651]"></a>DJI::OSDK::Camera::Camera__sub_object(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_camera.o(.text), UNUSED)

<P><STRONG><a name="[28b]"></a>DJI::OSDK::Camera::~Camera()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_camera.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::~Vehicle()
</UL>

<P><STRONG><a name="[652]"></a>DJI::OSDK::Camera::~Camera__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_camera.o(.text), UNUSED)

<P><STRONG><a name="[301]"></a>DJI::OSDK::Camera::action(const unsigned char*)</STRONG> (Thumb, 56 bytes, Stack size 48 bytes, dji_camera.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Camera::videoStop()
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Camera::videoStart()
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Camera::shootPhoto()
</UL>

<P><STRONG><a name="[1d9]"></a>DJI::OSDK::Camera::shootPhoto()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dji_camera.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Camera::action(const unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gimbalCameraControl()
</UL>

<P><STRONG><a name="[1da]"></a>DJI::OSDK::Camera::videoStart()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dji_camera.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Camera::action(const unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gimbalCameraControl()
</UL>

<P><STRONG><a name="[1dc]"></a>DJI::OSDK::Camera::videoStop()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dji_camera.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Camera::action(const unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gimbalCameraControl()
</UL>

<P><STRONG><a name="[2cb]"></a>DJI::OSDK::Control::Control(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initControl()
</UL>

<P><STRONG><a name="[653]"></a>DJI::OSDK::Control::Control__sub_object(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_control.o(.text), UNUSED)

<P><STRONG><a name="[28d]"></a>DJI::OSDK::Control::~Control()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_control.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::~Vehicle()
</UL>

<P><STRONG><a name="[654]"></a>DJI::OSDK::Control::~Control__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_control.o(.text), UNUSED)

<P><STRONG><a name="[302]"></a>DJI::OSDK::Control::actionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 148 bytes, Stack size 80 bytes, dji_control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1520<LI>Call Chain = DJI::OSDK::Control::actionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*) &rArr; DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_control.o(.text)
</UL>
<P><STRONG><a name="[1e9]"></a>DJI::OSDK::Control::action(int, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 252 bytes, Stack size 56 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::takeoff(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::land(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::armMotors(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::disArmMotors(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseFromMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::goHome(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>

<P><STRONG><a name="[303]"></a>DJI::OSDK::Control::action(int, int)</STRONG> (Thumb, 236 bytes, Stack size 72 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::land(int)
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::goHome(int)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::takeoff(int)
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::disArmMotors(int)
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::armMotors(int)
</UL>

<P><STRONG><a name="[304]"></a>DJI::OSDK::Control::setArm(bool, int)</STRONG> (Thumb, 98 bytes, Stack size 72 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::disArmMotors(int)
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::armMotors(int)
</UL>

<P><STRONG><a name="[305]"></a>DJI::OSDK::Control::armMotors(int)</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::setArm(bool, int)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, int)
</UL>

<P><STRONG><a name="[306]"></a>DJI::OSDK::Control::setArm(bool, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::armMotors(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::disArmMotors(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>

<P><STRONG><a name="[1ea]"></a>DJI::OSDK::Control::armMotors(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::setArm(bool, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseFromMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
</UL>

<P><STRONG><a name="[307]"></a>DJI::OSDK::Control::disArmMotors(int)</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::setArm(bool, int)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, int)
</UL>

<P><STRONG><a name="[1eb]"></a>DJI::OSDK::Control::disArmMotors(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::setArm(bool, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseFromMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
</UL>

<P><STRONG><a name="[308]"></a>DJI::OSDK::Control::takeoff(int)</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, int)
</UL>

<P><STRONG><a name="[198]"></a>DJI::OSDK::Control::takeoff(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredTakeOff()
</UL>

<P><STRONG><a name="[309]"></a>DJI::OSDK::Control::goHome(int)</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, int)
</UL>

<P><STRONG><a name="[30a]"></a>DJI::OSDK::Control::goHome(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
</UL>

<P><STRONG><a name="[30b]"></a>DJI::OSDK::Control::land(int)</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, int)
</UL>

<P><STRONG><a name="[1a2]"></a>DJI::OSDK::Control::land(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredLanding()
</UL>

<P><STRONG><a name="[30c]"></a>DJI::OSDK::Control::flightCtrl(DJI::OSDK::Control::CtrlData)</STRONG> (Thumb, 64 bytes, Stack size 56 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::positionAndYawCtrl(float, float, float, float)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::angularRateAndVertPosCtrl(float, float, float, float)
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::attitudeAndVertPosCtrl(float, float, float, float)
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::velocityAndYawRateCtrl(float, float, float, float)
</UL>

<P><STRONG><a name="[30d]"></a>DJI::OSDK::Control::flightCtrl(DJI::OSDK::Control::AdvancedCtrlData)</STRONG> (Thumb, 204 bytes, Stack size 64 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getHwVersion() const
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::emergencyBrake()
</UL>

<P><STRONG><a name="[30f]"></a>DJI::OSDK::Control::CtrlData::CtrlData(unsigned char, float, float, float, float)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::positionAndYawCtrl(float, float, float, float)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::angularRateAndVertPosCtrl(float, float, float, float)
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::attitudeAndVertPosCtrl(float, float, float, float)
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::velocityAndYawRateCtrl(float, float, float, float)
</UL>

<P><STRONG><a name="[655]"></a>DJI::OSDK::Control::CtrlData::CtrlData__sub_object(unsigned char, float, float, float, float)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_control.o(.text), UNUSED)

<P><STRONG><a name="[1b5]"></a>DJI::OSDK::Control::positionAndYawCtrl(float, float, float, float)</STRONG> (Thumb, 82 bytes, Stack size 56 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::CtrlData::CtrlData(unsigned char, float, float, float, float)
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::flightCtrl(DJI::OSDK::Control::CtrlData)
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
</UL>

<P><STRONG><a name="[310]"></a>DJI::OSDK::Control::velocityAndYawRateCtrl(float, float, float, float)</STRONG> (Thumb, 82 bytes, Stack size 56 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::CtrlData::CtrlData(unsigned char, float, float, float, float)
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::flightCtrl(DJI::OSDK::Control::CtrlData)
</UL>

<P><STRONG><a name="[311]"></a>DJI::OSDK::Control::attitudeAndVertPosCtrl(float, float, float, float)</STRONG> (Thumb, 82 bytes, Stack size 56 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::CtrlData::CtrlData(unsigned char, float, float, float, float)
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::flightCtrl(DJI::OSDK::Control::CtrlData)
</UL>

<P><STRONG><a name="[312]"></a>DJI::OSDK::Control::angularRateAndVertPosCtrl(float, float, float, float)</STRONG> (Thumb, 222 bytes, Stack size 72 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getHwVersion() const
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::CtrlData::CtrlData(unsigned char, float, float, float, float)
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::flightCtrl(DJI::OSDK::Control::CtrlData)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>

<P><STRONG><a name="[313]"></a>DJI::OSDK::Control::AdvancedCtrlData::AdvancedCtrlData(unsigned char, float, float, float, float, float, float)</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::emergencyBrake()
</UL>

<P><STRONG><a name="[656]"></a>DJI::OSDK::Control::AdvancedCtrlData::AdvancedCtrlData__sub_object(unsigned char, float, float, float, float, float, float)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_control.o(.text), UNUSED)

<P><STRONG><a name="[1b8]"></a>DJI::OSDK::Control::emergencyBrake()</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getHwVersion() const
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::AdvancedCtrlData::AdvancedCtrlData(unsigned char, float, float, float, float, float, float)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::flightCtrl(DJI::OSDK::Control::AdvancedCtrlData)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
</UL>

<P><STRONG><a name="[314]"></a>DJI::OSDK::Control::killSwitch(DJI::OSDK::Control::KillSwitch, int, char*)</STRONG> (Thumb, 542 bytes, Stack size 96 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[315]"></a>DJI::OSDK::Control::killSwitch(DJI::OSDK::Control::KillSwitch, char*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 250 bytes, Stack size 80 bytes, dji_control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>

<P><STRONG><a name="[316]"></a>DJI::OSDK::HardDriver::HardDriver__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dji_hard_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DJI::OSDK::HardDriver::HardDriver__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MMU::MMU()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::PlatformManager::addHardDriver(unsigned char, const char*, unsigned)
</UL>

<P><STRONG><a name="[b1]"></a>DJI::OSDK::HardDriver::~HardDriver__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_hard_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HardDriver::~HardDriver__deallocating()
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4::~STM32F4()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hard_driver.o(.constdata__ZTVN3DJI4OSDK10HardDriverE)
</UL>
<P><STRONG><a name="[b2]"></a>DJI::OSDK::HardDriver::~HardDriver__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dji_hard_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DJI::OSDK::HardDriver::~HardDriver__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HardDriver::~HardDriver__sub_object()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hard_driver.o(.constdata__ZTVN3DJI4OSDK10HardDriverE)
</UL>
<P><STRONG><a name="[b0]"></a>DJI::OSDK::HardDriver::displayLog(const char*)</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, dji_hard_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DJI::OSDK::HardDriver::displayLog(const char*) &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> dji_hard_driver.o(.constdata__ZTVN3DJI4OSDK10HardDriverE)
<LI> stm32f4serialdriver.o(.constdata__ZTV7STM32F4)
</UL>
<P><STRONG><a name="[319]"></a>DJI::OSDK::HotpointMission::initData()</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, dji_hotpoint.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::HotpointMission(DJI::OSDK::Vehicle*)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::initHotptMission(int, void*)
</UL>

<P><STRONG><a name="[318]"></a>DJI::OSDK::HotpointMission::HotpointMission(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, dji_hotpoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::initData()
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::initHotptMission(int, void*)
</UL>

<P><STRONG><a name="[657]"></a>DJI::OSDK::HotpointMission::HotpointMission__sub_object(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dji_hotpoint.o(.text), UNUSED)

<P><STRONG><a name="[da]"></a>DJI::OSDK::HotpointMission::~HotpointMission()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, dji_hotpoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DJI::OSDK::HotpointMission::~HotpointMission()
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionBase::~MissionBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::~HotpointMission__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
</UL>
<P><STRONG><a name="[658]"></a>DJI::OSDK::HotpointMission::~HotpointMission__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dji_hotpoint.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>DJI::OSDK::HotpointMission::~HotpointMission__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dji_hotpoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DJI::OSDK::HotpointMission::~HotpointMission__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::~HotpointMission()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
</UL>
<P><STRONG><a name="[31a]"></a>DJI::OSDK::HotpointMission::getData() const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, dji_hotpoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[dc]"></a>DJI::OSDK::HotpointMission::start(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, dji_hotpoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DJI::OSDK::HotpointMission::start(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*) &rArr; DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
</UL>
<P><STRONG><a name="[dd]"></a>DJI::OSDK::HotpointMission::start(int)</STRONG> (Thumb, 94 bytes, Stack size 64 bytes, dji_hotpoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = DJI::OSDK::HotpointMission::start(int) &rArr; DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
</UL>
<P><STRONG><a name="[de]"></a>DJI::OSDK::HotpointMission::stop(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 118 bytes, Stack size 56 bytes, dji_hotpoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DJI::OSDK::HotpointMission::stop(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*) &rArr; DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
</UL>
<P><STRONG><a name="[df]"></a>DJI::OSDK::HotpointMission::stop(int)</STRONG> (Thumb, 96 bytes, Stack size 72 bytes, dji_hotpoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DJI::OSDK::HotpointMission::stop(int) &rArr; DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
</UL>
<P><STRONG><a name="[e0]"></a>DJI::OSDK::HotpointMission::pause(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 118 bytes, Stack size 56 bytes, dji_hotpoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DJI::OSDK::HotpointMission::pause(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*) &rArr; DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
</UL>
<P><STRONG><a name="[e1]"></a>DJI::OSDK::HotpointMission::pause(int)</STRONG> (Thumb, 96 bytes, Stack size 72 bytes, dji_hotpoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DJI::OSDK::HotpointMission::pause(int) &rArr; DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
</UL>
<P><STRONG><a name="[e2]"></a>DJI::OSDK::HotpointMission::resume(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 118 bytes, Stack size 56 bytes, dji_hotpoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DJI::OSDK::HotpointMission::resume(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*) &rArr; DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
</UL>
<P><STRONG><a name="[e3]"></a>DJI::OSDK::HotpointMission::resume(int)</STRONG> (Thumb, 128 bytes, Stack size 72 bytes, dji_hotpoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DJI::OSDK::HotpointMission::resume(int) &rArr; DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK15HotpointMissionE)
</UL>
<P><STRONG><a name="[1d0]"></a>DJI::OSDK::HotpointMission::updateYawRate(DJI::OSDK::HotpointMission::YawRate&, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 138 bytes, Stack size 56 bytes, dji_hotpoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runHotpointMission(int)
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::updateYawRate(float, bool, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>

<P><STRONG><a name="[31b]"></a>DJI::OSDK::HotpointMission::updateYawRate(DJI::OSDK::HotpointMission::YawRate&, int)</STRONG> (Thumb, 118 bytes, Stack size 72 bytes, dji_hotpoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[31c]"></a>DJI::OSDK::HotpointMission::updateYawRate(float, bool, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, dji_hotpoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::updateYawRate(DJI::OSDK::HotpointMission::YawRate&, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>

<P><STRONG><a name="[1cf]"></a>DJI::OSDK::HotpointMission::updateRadius(float, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 120 bytes, Stack size 72 bytes, dji_hotpoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runHotpointMission(int)
</UL>

<P><STRONG><a name="[31d]"></a>DJI::OSDK::HotpointMission::updateRadius(float, int)</STRONG> (Thumb, 96 bytes, Stack size 88 bytes, dji_hotpoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[31e]"></a>DJI::OSDK::HotpointMission::resetYaw(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 118 bytes, Stack size 56 bytes, dji_hotpoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>

<P><STRONG><a name="[31f]"></a>DJI::OSDK::HotpointMission::resetYaw(int)</STRONG> (Thumb, 96 bytes, Stack size 72 bytes, dji_hotpoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[320]"></a>DJI::OSDK::HotpointMission::getHotpointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 214 bytes, Stack size 136 bytes, dji_hotpoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1576<LI>Call Chain = DJI::OSDK::HotpointMission::getHotpointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*) &rArr; DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hotpoint.o(.text)
</UL>
<P><STRONG><a name="[321]"></a>DJI::OSDK::HotpointMission::getHotpointSettings(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 212 bytes, Stack size 56 bytes, dji_hotpoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>

<P><STRONG><a name="[322]"></a>DJI::OSDK::HotpointMission::getHotpointSettings(int)</STRONG> (Thumb, 96 bytes, Stack size 120 bytes, dji_hotpoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[323]"></a>DJI::OSDK::HotpointMission::startCallback(DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 186 bytes, Stack size 64 bytes, dji_hotpoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
</UL>

<P><STRONG><a name="[659]"></a>DJI::OSDK::HotpointMission::setHotpointCallback(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, dji_hotpoint.o(.text), UNUSED)

<P><STRONG><a name="[324]"></a>DJI::OSDK::HotpointMission::setData(DJI::OSDK::HotPointSettings*)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dji_hotpoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::initHotptMission(int, void*)
</UL>

<P><STRONG><a name="[1ce]"></a>DJI::OSDK::HotpointMission::setHotPoint(double, double, double)</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, dji_hotpoint.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runHotpointMission(int)
</UL>

<P><STRONG><a name="[325]"></a>DJI::OSDK::HotpointMission::setHotPoint(DJI::OSDK::Telemetry::GlobalPosition)</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, dji_hotpoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>

<P><STRONG><a name="[65a]"></a>DJI::OSDK::HotpointMission::setRadius(double)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, dji_hotpoint.o(.text), UNUSED)

<P><STRONG><a name="[65b]"></a>DJI::OSDK::HotpointMission::setYawRate(float)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dji_hotpoint.o(.text), UNUSED)

<P><STRONG><a name="[65c]"></a>DJI::OSDK::HotpointMission::setClockwise(bool)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_hotpoint.o(.text), UNUSED)

<P><STRONG><a name="[65d]"></a>DJI::OSDK::HotpointMission::setCameraView(DJI::OSDK::HotpointMission::View)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_hotpoint.o(.text), UNUSED)

<P><STRONG><a name="[65e]"></a>DJI::OSDK::HotpointMission::setYawMode(DJI::OSDK::HotpointMission::YawMode)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_hotpoint.o(.text), UNUSED)

<P><STRONG><a name="[2cf]"></a>DJI::OSDK::MFIO::MFIO(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_mfio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMFIO()
</UL>

<P><STRONG><a name="[65f]"></a>DJI::OSDK::MFIO::MFIO__sub_object(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_mfio.o(.text), UNUSED)

<P><STRONG><a name="[28e]"></a>DJI::OSDK::MFIO::~MFIO()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_mfio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::~Vehicle()
</UL>

<P><STRONG><a name="[660]"></a>DJI::OSDK::MFIO::~MFIO__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_mfio.o(.text), UNUSED)

<P><STRONG><a name="[327]"></a>DJI::OSDK::MFIO::initCallback(DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 28 bytes, Stack size 28 bytes, dji_mfio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DJI::OSDK::MFIO::initCallback(DJI::OSDK::RecvContainer, void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_mfio.o(.text)
</UL>
<P><STRONG><a name="[326]"></a>DJI::OSDK::MFIO::config(DJI::OSDK::MFIO::MODE, DJI::OSDK::MFIO::CHANNEL, unsigned, unsigned short, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 210 bytes, Stack size 72 bytes, dji_mfio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
</UL>

<P><STRONG><a name="[329]"></a>DJI::OSDK::MFIO::setValueCallback(DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 28 bytes, Stack size 28 bytes, dji_mfio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DJI::OSDK::MFIO::setValueCallback(DJI::OSDK::RecvContainer, void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_mfio.o(.text)
</UL>
<P><STRONG><a name="[328]"></a>DJI::OSDK::MFIO::setValue(DJI::OSDK::MFIO::CHANNEL, unsigned, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 124 bytes, Stack size 64 bytes, dji_mfio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
</UL>

<P><STRONG><a name="[32a]"></a>DJI::OSDK::MFIO::getValueCallback(DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 138 bytes, Stack size 64 bytes, dji_mfio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = DJI::OSDK::MFIO::getValueCallback(DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_mfio.o(.text)
</UL>
<P><STRONG><a name="[32b]"></a>DJI::OSDK::MFIO::getValue(DJI::OSDK::MFIO::CHANNEL, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 114 bytes, Stack size 56 bytes, dji_mfio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
</UL>

<P><STRONG><a name="[32c]"></a>DJI::OSDK::MFIO::config(DJI::OSDK::MFIO::MODE, DJI::OSDK::MFIO::CHANNEL, unsigned, unsigned short, int)</STRONG> (Thumb, 250 bytes, Stack size 88 bytes, dji_mfio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[32d]"></a>DJI::OSDK::MFIO::setValue(DJI::OSDK::MFIO::CHANNEL, unsigned, int)</STRONG> (Thumb, 102 bytes, Stack size 80 bytes, dji_mfio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[32e]"></a>DJI::OSDK::MFIO::getValue(DJI::OSDK::MFIO::CHANNEL, int)</STRONG> (Thumb, 92 bytes, Stack size 80 bytes, dji_mfio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[2d5]"></a>DJI::OSDK::MissionManager::MissionManager(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dji_mission_manager.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMissionManager()
</UL>

<P><STRONG><a name="[661]"></a>DJI::OSDK::MissionManager::MissionManager__sub_object(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_mission_manager.o(.text), UNUSED)

<P><STRONG><a name="[293]"></a>DJI::OSDK::MissionManager::~MissionManager()</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, dji_mission_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DJI::OSDK::MissionManager::~MissionManager()
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::~Vehicle()
</UL>

<P><STRONG><a name="[662]"></a>DJI::OSDK::MissionManager::~MissionManager__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dji_mission_manager.o(.text), UNUSED)

<P><STRONG><a name="[32f]"></a>DJI::OSDK::MissionManager::initHotptMission(int, void*)</STRONG> (Thumb, 124 bytes, Stack size 72 bytes, dji_mission_manager.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::setData(DJI::OSDK::HotPointSettings*)
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::HotpointMission(DJI::OSDK::Vehicle*)
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::initData()
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::init(DJI::OSDK::DJI_MISSION_TYPE, int, void*)
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::init(DJI::OSDK::DJI_MISSION_TYPE, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>

<P><STRONG><a name="[330]"></a>DJI::OSDK::MissionManager::initWayptMission(int, void*)</STRONG> (Thumb, 104 bytes, Stack size 72 bytes, dji_mission_manager.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::WaypointMission(DJI::OSDK::Vehicle*)
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::init(DJI::OSDK::WayPointInitSettings*, int)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::init(DJI::OSDK::DJI_MISSION_TYPE, int, void*)
</UL>

<P><STRONG><a name="[1ca]"></a>DJI::OSDK::MissionManager::init(DJI::OSDK::DJI_MISSION_TYPE, int, void*)</STRONG> (Thumb, 130 bytes, Stack size 64 bytes, dji_mission_manager.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::initWayptMission(int, void*)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::initHotptMission(int, void*)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runHotpointMission(int)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runWaypointMission(unsigned char)
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::uploadInfo(UartWayPointInit*)
</UL>

<P><STRONG><a name="[333]"></a>DJI::OSDK::MissionManager::initWayptMission(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, dji_mission_manager.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::WaypointMission(DJI::OSDK::Vehicle*)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::init(DJI::OSDK::WayPointInitSettings*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::init(DJI::OSDK::DJI_MISSION_TYPE, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>

<P><STRONG><a name="[335]"></a>DJI::OSDK::MissionManager::init(DJI::OSDK::DJI_MISSION_TYPE, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 100 bytes, Stack size 56 bytes, dji_mission_manager.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::initWayptMission(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::initHotptMission(int, void*)
</UL>

<P><STRONG><a name="[7c]"></a>DJI::OSDK::MissionManager::missionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 142 bytes, Stack size 128 bytes, dji_mission_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1568<LI>Call Chain = DJI::OSDK::MissionManager::missionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*) &rArr; DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 2]<UL><LI> dji_hotpoint.o(.text)
<LI> dji_waypoint.o(.text)
</UL>
<P><STRONG><a name="[663]"></a>DJI::OSDK::MissionManager::initHotptMission(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_mission_manager.o(.text), UNUSED)

<P><STRONG><a name="[336]"></a>DJI::OSDK::MissionManager::getWaypt(int)</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, dji_mission_manager.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
</UL>

<P><STRONG><a name="[337]"></a>DJI::OSDK::MissionManager::getHotpt(int)</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, dji_mission_manager.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
</UL>

<P><STRONG><a name="[1cb]"></a>DJI::OSDK::MissionManager::printInfo()</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, dji_mission_manager.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runHotpointMission(int)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runWaypointMission(unsigned char)
</UL>

<P><STRONG><a name="[338]"></a>DJI::OSDK::MobileCommunication::getDataFromMSDKCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 80 bytes, Stack size 48 bytes, dji_mobile_communication.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DJI::OSDK::MobileCommunication::getDataFromMSDKCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_mobile_communication.o(.text)
</UL>
<P><STRONG><a name="[2d1]"></a>DJI::OSDK::MobileCommunication::MobileCommunication(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dji_mobile_communication.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMOC()
</UL>

<P><STRONG><a name="[664]"></a>DJI::OSDK::MobileCommunication::MobileCommunication__sub_object(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_mobile_communication.o(.text), UNUSED)

<P><STRONG><a name="[28f]"></a>DJI::OSDK::MobileCommunication::~MobileCommunication()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_mobile_communication.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::~Vehicle()
</UL>

<P><STRONG><a name="[665]"></a>DJI::OSDK::MobileCommunication::~MobileCommunication__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_mobile_communication.o(.text), UNUSED)

<P><STRONG><a name="[666]"></a>DJI::OSDK::MobileCommunication::getVehicle() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_mobile_communication.o(.text), UNUSED)

<P><STRONG><a name="[667]"></a>DJI::OSDK::MobileCommunication::setVehicle(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dji_mobile_communication.o(.text), UNUSED)

<P><STRONG><a name="[1e1]"></a>DJI::OSDK::MobileCommunication::sendDataToMSDK(unsigned char*, unsigned char)</STRONG> (Thumb, 114 bytes, Stack size 56 bytes, dji_mobile_communication.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DJI::OSDK::MobileCommunication::sendDataToMSDK(unsigned char*, unsigned char) &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlAuthorityMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actionMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
</UL>

<P><STRONG><a name="[668]"></a>DJI::OSDK::MobileCommunication::setFromMSDKCallback(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_mobile_communication.o(.text), UNUSED)

<P><STRONG><a name="[2d7]"></a>DJI::OSDK::HardwareSync::HardwareSync(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dji_hardware_sync.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initHardSync()
</UL>

<P><STRONG><a name="[669]"></a>DJI::OSDK::HardwareSync::HardwareSync__sub_object(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_hardware_sync.o(.text), UNUSED)

<P><STRONG><a name="[339]"></a>DJI::OSDK::HardwareSync::startSync(DJI::OSDK::HardwareSync::SyncSettings&)</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, dji_hardware_sync.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HardwareSync::setSyncFreq(unsigned, unsigned short)
</UL>

<P><STRONG><a name="[33a]"></a>DJI::OSDK::HardwareSync::setSyncFreq(unsigned, unsigned short)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, dji_hardware_sync.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HardwareSync::startSync(DJI::OSDK::HardwareSync::SyncSettings&)
</UL>

<P><STRONG><a name="[34d]"></a>DJI::OSDK::SubscriptionPackage::SubscriptionPackage()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, dji_subscription.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dji_subscription.o(.text)
</UL>
<P><STRONG><a name="[66a]"></a>DJI::OSDK::SubscriptionPackage::SubscriptionPackage__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_subscription.o(.text), UNUSED)

<P><STRONG><a name="[33b]"></a>DJI::OSDK::SubscriptionPackage::clearDataBuffer()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dji_subscription.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DJI::OSDK::SubscriptionPackage::clearDataBuffer() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::cleanUpPackage()
</UL>

<P><STRONG><a name="[33c]"></a>DJI::OSDK::SubscriptionPackage::cleanUpPackage()</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, dji_subscription.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DJI::OSDK::SubscriptionPackage::cleanUpPackage() &rArr; DJI::OSDK::SubscriptionPackage::clearDataBuffer() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::clearDataBuffer()
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::packageRemoveSuccessHandler()
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::~SubscriptionPackage()
</UL>

<P><STRONG><a name="[8a]"></a>DJI::OSDK::SubscriptionPackage::~SubscriptionPackage()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dji_subscription.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DJI::OSDK::SubscriptionPackage::~SubscriptionPackage() &rArr; DJI::OSDK::SubscriptionPackage::cleanUpPackage() &rArr; DJI::OSDK::SubscriptionPackage::clearDataBuffer() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::cleanUpPackage()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> dji_subscription.o(.text.clean)
<LI> dji_subscription.o(.text)
</UL>
<P><STRONG><a name="[66b]"></a>DJI::OSDK::SubscriptionPackage::~SubscriptionPackage__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dji_subscription.o(.text), UNUSED)

<P><STRONG><a name="[34f]"></a>DJI::OSDK::SubscriptionPackage::setPackageID(unsigned char)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dji_subscription.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::DataSubscription(DJI::OSDK::Vehicle*)
</UL>

<P><STRONG><a name="[351]"></a>DJI::OSDK::SubscriptionPackage::setConfig(unsigned char)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dji_subscription.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::initPackageFromTopicList(int, int, DJI::OSDK::Telemetry::TopicName*, bool, unsigned short)
</UL>

<P><STRONG><a name="[33f]"></a>DJI::OSDK::SubscriptionPackage::isOccupied()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_subscription.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::initPackageFromTopicList(int, int, DJI::OSDK::Telemetry::TopicName*, bool, unsigned short)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int, int)
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removeAllExistingPackages()
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::setTopicList(DJI::OSDK::Telemetry::TopicName*, int, unsigned short)
</UL>

<P><STRONG><a name="[33e]"></a>DJI::OSDK::SubscriptionPackage::setTopicList(DJI::OSDK::Telemetry::TopicName*, int, unsigned short)</STRONG> (Thumb, 334 bytes, Stack size 48 bytes, dji_subscription.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::isOccupied()
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::initPackageFromTopicList(int, int, DJI::OSDK::Telemetry::TopicName*, bool, unsigned short)
</UL>

<P><STRONG><a name="[340]"></a>DJI::OSDK::SubscriptionPackage::allocateDataBuffer()</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, dji_subscription.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int, int)
</UL>

<P><STRONG><a name="[341]"></a>DJI::OSDK::SubscriptionPackage::serializePackageInfo(unsigned char*)</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, dji_subscription.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int, int)
</UL>

<P><STRONG><a name="[35a]"></a>DJI::OSDK::SubscriptionPackage::setUserUnpackCallback(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dji_subscription.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::registerUserPackageUnpackCallback(int, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>

<P><STRONG><a name="[343]"></a>DJI::OSDK::SubscriptionPackage::setOccupied(bool)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dji_subscription.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::packageRemoveSuccessHandler()
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::packageAddSuccessHandler()
</UL>

<P><STRONG><a name="[348]"></a>DJI::OSDK::SubscriptionPackage::hasLeftOverData()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_subscription.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removeLeftOverPackages()
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int, int)
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removeAllExistingPackages()
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::extractOnePackage(DJI::OSDK::RecvContainer*, DJI::OSDK::SubscriptionPackage*)
</UL>

<P><STRONG><a name="[349]"></a>DJI::OSDK::SubscriptionPackage::setLeftOverDataFlag(bool)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dji_subscription.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int, int)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::extractOnePackage(DJI::OSDK::RecvContainer*, DJI::OSDK::SubscriptionPackage*)
</UL>

<P><STRONG><a name="[34a]"></a>DJI::OSDK::SubscriptionPackage::getInfo()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dji_subscription.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int, int)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::addPackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::extractOnePackage(DJI::OSDK::RecvContainer*, DJI::OSDK::SubscriptionPackage*)
</UL>

<P><STRONG><a name="[66c]"></a>DJI::OSDK::SubscriptionPackage::getUidList()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_subscription.o(.text), UNUSED)

<P><STRONG><a name="[66d]"></a>DJI::OSDK::SubscriptionPackage::getTopicList()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_subscription.o(.text), UNUSED)

<P><STRONG><a name="[66e]"></a>DJI::OSDK::SubscriptionPackage::getOffsetList()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_subscription.o(.text), UNUSED)

<P><STRONG><a name="[346]"></a>DJI::OSDK::SubscriptionPackage::getDataBuffer()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_subscription.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::extractOnePackage(DJI::OSDK::RecvContainer*, DJI::OSDK::SubscriptionPackage*)
</UL>

<P><STRONG><a name="[347]"></a>DJI::OSDK::SubscriptionPackage::getBufferSize()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_subscription.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::extractOnePackage(DJI::OSDK::RecvContainer*, DJI::OSDK::SubscriptionPackage*)
</UL>

<P><STRONG><a name="[34c]"></a>DJI::OSDK::SubscriptionPackage::getUnpackHandler()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dji_subscription.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::decodeCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
</UL>

<P><STRONG><a name="[342]"></a>DJI::OSDK::SubscriptionPackage::packageAddSuccessHandler()</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, dji_subscription.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DJI::OSDK::SubscriptionPackage::packageAddSuccessHandler()
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::setOccupied(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int, int)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::addPackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
</UL>

<P><STRONG><a name="[344]"></a>DJI::OSDK::SubscriptionPackage::packageRemoveSuccessHandler()</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, dji_subscription.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DJI::OSDK::SubscriptionPackage::packageRemoveSuccessHandler() &rArr; DJI::OSDK::SubscriptionPackage::cleanUpPackage() &rArr; DJI::OSDK::SubscriptionPackage::clearDataBuffer() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::setOccupied(bool)
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::cleanUpPackage()
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int, int)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
</UL>

<P><STRONG><a name="[345]"></a>DJI::OSDK::DataSubscription::extractOnePackage(DJI::OSDK::RecvContainer*, DJI::OSDK::SubscriptionPackage*)</STRONG> (Thumb, 234 bytes, Stack size 64 bytes, dji_subscription.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = DJI::OSDK::DataSubscription::extractOnePackage(DJI::OSDK::RecvContainer*, DJI::OSDK::SubscriptionPackage*) &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getDebugLogState()
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::getBufferSize()
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::getDataBuffer()
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::getInfo()
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::setLeftOverDataFlag(bool)
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::hasLeftOverData()
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::decodeCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
</UL>

<P><STRONG><a name="[34b]"></a>DJI::OSDK::DataSubscription::decodeCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 340 bytes, Stack size 368 bytes, dji_subscription.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = DJI::OSDK::DataSubscription::decodeCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::DataSubscription::extractOnePackage(DJI::OSDK::RecvContainer*, DJI::OSDK::SubscriptionPackage*) &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::extractOnePackage(DJI::OSDK::RecvContainer*, DJI::OSDK::SubscriptionPackage*)
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::getUnpackHandler()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_subscription.o(.text)
</UL>
<P><STRONG><a name="[2c6]"></a>DJI::OSDK::DataSubscription::DataSubscription(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, dji_subscription.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::setPackageID(unsigned char)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_vec_ctor
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initSubscriber()
</UL>

<P><STRONG><a name="[66f]"></a>DJI::OSDK::DataSubscription::DataSubscription__sub_object(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, dji_subscription.o(.text), UNUSED)

<P><STRONG><a name="[292]"></a>DJI::OSDK::DataSubscription::~DataSubscription()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, dji_subscription.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = DJI::OSDK::DataSubscription::~DataSubscription() &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::~Vehicle()
</UL>

<P><STRONG><a name="[670]"></a>DJI::OSDK::DataSubscription::~DataSubscription__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dji_subscription.o(.text), UNUSED)

<P><STRONG><a name="[353]"></a>DJI::OSDK::DataSubscription::getVehicle()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_subscription.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verify(int)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::reset(int)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int, int)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int, int)
</UL>

<P><STRONG><a name="[196]"></a>DJI::OSDK::DataSubscription::initPackageFromTopicList(int, int, DJI::OSDK::Telemetry::TopicName*, bool, unsigned short)</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, dji_subscription.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::setTopicList(DJI::OSDK::Telemetry::TopicName*, int, unsigned short)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::isOccupied()
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::setConfig(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gimbalCameraControl()
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUpSubscription(DJI::OSDK::Vehicle*)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredLanding()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredTakeOff()
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subscribeToData()
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initGimbal()
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeFLIGHT()
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeGIMBAL_ANGLES()
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeGPS_FUSED()
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeBATTERY()
</UL>

<P><STRONG><a name="[352]"></a>DJI::OSDK::DataSubscription::verifyCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 126 bytes, Stack size 72 bytes, dji_subscription.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1512<LI>Call Chain = DJI::OSDK::DataSubscription::verifyCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*) &rArr; DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_subscription.o(.text)
</UL>
<P><STRONG><a name="[191]"></a>DJI::OSDK::DataSubscription::verify()</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, dji_subscription.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::droneInit()
</UL>

<P><STRONG><a name="[2a1]"></a>DJI::OSDK::DataSubscription::verify(int)</STRONG> (Thumb, 192 bytes, Stack size 80 bytes, dji_subscription.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::getVehicle()
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initGimbal()
</UL>

<P><STRONG><a name="[354]"></a>DJI::OSDK::DataSubscription::addPackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 272 bytes, Stack size 128 bytes, dji_subscription.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1568<LI>Call Chain = DJI::OSDK::DataSubscription::addPackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*) &rArr; DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::packageAddSuccessHandler()
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::getInfo()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_subscription.o(.text)
</UL>
<P><STRONG><a name="[197]"></a>DJI::OSDK::DataSubscription::startPackage(int)</STRONG> (Thumb, 208 bytes, Stack size 264 bytes, dji_subscription.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::serializePackageInfo(unsigned char*)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::allocateDataBuffer()
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::isOccupied()
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gimbalCameraControl()
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUpSubscription(DJI::OSDK::Vehicle*)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredLanding()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredTakeOff()
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subscribeToData()
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeFLIGHT()
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeGIMBAL_ANGLES()
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeGPS_FUSED()
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeBATTERY()
</UL>

<P><STRONG><a name="[2a3]"></a>DJI::OSDK::DataSubscription::startPackage(int, int)</STRONG> (Thumb, 706 bytes, Stack size 328 bytes, dji_subscription.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::getVehicle()
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::packageAddSuccessHandler()
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::getInfo()
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::serializePackageInfo(unsigned char*)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::allocateDataBuffer()
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::isOccupied()
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initGimbal()
</UL>

<P><STRONG><a name="[355]"></a>DJI::OSDK::DataSubscription::removePackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 178 bytes, Stack size 88 bytes, dji_subscription.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1528<LI>Call Chain = DJI::OSDK::DataSubscription::removePackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*) &rArr; DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::packageRemoveSuccessHandler()
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::getInfo()
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::setLeftOverDataFlag(bool)
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::hasLeftOverData()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_subscription.o(.text)
</UL>
<P><STRONG><a name="[19c]"></a>DJI::OSDK::DataSubscription::removePackage(int)</STRONG> (Thumb, 98 bytes, Stack size 48 bytes, dji_subscription.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gimbalCameraControl()
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runHotpointMission(int)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runWaypointMission(unsigned char)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredLanding()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredTakeOff()
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subscribeToData()
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::~Get_Data()
</UL>

<P><STRONG><a name="[2a6]"></a>DJI::OSDK::DataSubscription::removePackage(int, int)</STRONG> (Thumb, 350 bytes, Stack size 88 bytes, dji_subscription.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::getVehicle()
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::packageRemoveSuccessHandler()
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::setLeftOverDataFlag(bool)
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::hasLeftOverData()
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removeLeftOverPackages()
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initGimbal()
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removeAllExistingPackages()
</UL>

<P><STRONG><a name="[2c7]"></a>DJI::OSDK::DataSubscription::removeLeftOverPackages()</STRONG> (Thumb, 206 bytes, Stack size 72 bytes, dji_subscription.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int, int)
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::hasLeftOverData()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initSubscriber()
</UL>

<P><STRONG><a name="[356]"></a>DJI::OSDK::DataSubscription::removeAllExistingPackages()</STRONG> (Thumb, 156 bytes, Stack size 72 bytes, dji_subscription.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int, int)
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::hasLeftOverData()
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::isOccupied()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[357]"></a>DJI::OSDK::DataSubscription::resetCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 130 bytes, Stack size 72 bytes, dji_subscription.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1512<LI>Call Chain = DJI::OSDK::DataSubscription::resetCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*) &rArr; DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_subscription.o(.text)
</UL>
<P><STRONG><a name="[358]"></a>DJI::OSDK::DataSubscription::reset()</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, dji_subscription.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>

<P><STRONG><a name="[289]"></a>DJI::OSDK::DataSubscription::reset(int)</STRONG> (Thumb, 190 bytes, Stack size 80 bytes, dji_subscription.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1520<LI>Call Chain = DJI::OSDK::DataSubscription::reset(int) &rArr; DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*) &rArr; DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::getVehicle()
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::~Vehicle()
</UL>

<P><STRONG><a name="[359]"></a>DJI::OSDK::DataSubscription::registerUserPackageUnpackCallback(int, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, dji_subscription.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::setUserUnpackCallback(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>

<P><STRONG><a name="[317]"></a>DJI::OSDK::MMU::MMU()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HardDriver::HardDriver__sub_object()
</UL>

<P><STRONG><a name="[671]"></a>DJI::OSDK::MMU::MMU__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_memory.o(.text), UNUSED)

<P><STRONG><a name="[2dc]"></a>DJI::OSDK::MMU::setupMMU()</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, dji_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::setup()
</UL>

<P><STRONG><a name="[2e6]"></a>DJI::OSDK::MMU::freeMemory(DJI::OSDK::MMU_Tab*)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, dji_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::freeSession(DJI::OSDK::CMDSession*)
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::freeACK(DJI::OSDK::ACKSession*)
</UL>

<P><STRONG><a name="[2e8]"></a>DJI::OSDK::MMU::allocMemory(unsigned short)</STRONG> (Thumb, 702 bytes, Stack size 80 bytes, dji_memory.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DJI::OSDK::MMU::allocMemory(unsigned short) &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::allocSession(unsigned short, unsigned short)
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::allocACK(unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[1de]"></a>DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)</STRONG> (Thumb, 486 bytes, Stack size 24 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actionMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verify(int)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::reset(int)
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removeLeftOverPackages()
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int, int)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int, int)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activateCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersion(int)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initGimbal()
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::missionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::getHotpointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::actionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::resetCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removeAllExistingPackages()
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::addPackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verifyCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setFrequencyCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::idleVelocityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexDataCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getIndexCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getWaypointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
</UL>

<P><STRONG><a name="[35c]"></a>DJI::OSDK::ACK::createCommonErrorCodeMap()</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;::allocator()
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[35f]"></a>DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode)</STRONG> (Thumb, 164 bytes, Stack size 80 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&) const
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end() const
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator -&rang;() const
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool __rw::operator !=&lang;std::pair&lang;const unsigned, const char*&rang;, int, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~map()
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createCommonErrorCodeMap()
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetActivationMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetArmMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[365]"></a>DJI::OSDK::ACK::createSubscribeErrorCodeMap()</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = DJI::OSDK::ACK::createSubscribeErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;::allocator()
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetSubscribeMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[366]"></a>DJI::OSDK::ACK::getCMDSetSubscribeMSG(DJI::OSDK::ACK::ErrorCode)</STRONG> (Thumb, 168 bytes, Stack size 80 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = DJI::OSDK::ACK::getCMDSetSubscribeMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createSubscribeErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&) const
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end() const
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator -&rang;() const
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool __rw::operator !=&lang;std::pair&lang;const unsigned, const char*&rang;, int, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~map()
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createSubscribeErrorCodeMap()
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
</UL>

<P><STRONG><a name="[367]"></a>DJI::OSDK::ACK::createMFIOErrorCodeMap()</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = DJI::OSDK::ACK::createMFIOErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;::allocator()
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMFIOMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[368]"></a>DJI::OSDK::ACK::getCMDSetMFIOMSG(DJI::OSDK::ACK::ErrorCode)</STRONG> (Thumb, 348 bytes, Stack size 80 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = DJI::OSDK::ACK::getCMDSetMFIOMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createMFIOErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&) const
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end() const
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator -&rang;() const
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool __rw::operator !=&lang;std::pair&lang;const unsigned, const char*&rang;, int, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~map()
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createMFIOErrorCodeMap()
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
</UL>

<P><STRONG><a name="[380]"></a>DJI::OSDK::ACK::getCMDSetVirtualRCMSG(DJI::OSDK::ACK::ErrorCode)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_ack.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
</UL>

<P><STRONG><a name="[37f]"></a>DJI::OSDK::ACK::getCMDSetSyncMSG(DJI::OSDK::ACK::ErrorCode)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_ack.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
</UL>

<P><STRONG><a name="[369]"></a>DJI::OSDK::ACK::createMissionErrorCodeMap()</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = DJI::OSDK::ACK::createMissionErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;::allocator()
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMissionMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[36a]"></a>DJI::OSDK::ACK::getCMDSetMissionMSG(DJI::OSDK::ACK::ErrorCode)</STRONG> (Thumb, 168 bytes, Stack size 80 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = DJI::OSDK::ACK::getCMDSetMissionMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createMissionErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&) const
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end() const
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator -&rang;() const
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool __rw::operator !=&lang;std::pair&lang;const unsigned, const char*&rang;, int, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~map()
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createMissionErrorCodeMap()
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
</UL>

<P><STRONG><a name="[37e]"></a>DJI::OSDK::ACK::getSetBroadcastMSG(DJI::OSDK::ACK::ErrorCode)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_ack.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
</UL>

<P><STRONG><a name="[36b]"></a>DJI::OSDK::ACK::createSetArmErrorCodeMap()</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = DJI::OSDK::ACK::createSetArmErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;::allocator()
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetArmMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[36c]"></a>DJI::OSDK::ACK::getCMDIDSetArmMSG(DJI::OSDK::ACK::ErrorCode)</STRONG> (Thumb, 132 bytes, Stack size 80 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = DJI::OSDK::ACK::getCMDIDSetArmMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&) const
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end() const
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator -&rang;() const
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool __rw::operator !=&lang;std::pair&lang;const unsigned, const char*&rang;, int, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~map()
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createSetArmErrorCodeMap()
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode)
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[36d]"></a>DJI::OSDK::ACK::createTaskErrorCodeMap()</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = DJI::OSDK::ACK::createTaskErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;::allocator()
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[36e]"></a>DJI::OSDK::ACK::createLegacyTaskErrorCodeMap()</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = DJI::OSDK::ACK::createLegacyTaskErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;::allocator()
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[36f]"></a>DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode)</STRONG> (Thumb, 334 bytes, Stack size 144 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1360<LI>Call Chain = DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::operator =(const std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&)
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map(const std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;::allocator()
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;::allocator(const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool __rw::operator !=&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_init()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end()
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_value()
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~map()
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createLegacyTaskErrorCodeMap()
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createTaskErrorCodeMap()
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode)
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[37b]"></a>DJI::OSDK::ACK::getCMDIDControlMSG(DJI::OSDK::ACK::ErrorCode)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_ack.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[378]"></a>DJI::OSDK::ACK::createSetControlErrorCodeMap()</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = DJI::OSDK::ACK::createSetControlErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;::allocator()
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetControlMSG(unsigned char, unsigned)
</UL>

<P><STRONG><a name="[379]"></a>DJI::OSDK::ACK::getCMDIDSetControlMSG(unsigned char, unsigned)</STRONG> (Thumb, 430 bytes, Stack size 80 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = DJI::OSDK::ACK::getCMDIDSetControlMSG(unsigned char, unsigned) &rArr; DJI::OSDK::ACK::createSetControlErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&) const
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end() const
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator -&rang;() const
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool __rw::operator !=&lang;std::pair&lang;const unsigned, const char*&rang;, int, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~map()
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createSetControlErrorCodeMap()
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[37a]"></a>DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode)</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1392<LI>Call Chain = DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetControlMSG(unsigned char, unsigned)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDControlMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetArmMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
</UL>

<P><STRONG><a name="[37c]"></a>DJI::OSDK::ACK::createActivateErrorCodeMap()</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = DJI::OSDK::ACK::createActivateErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;::allocator()
</UL>
<BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetActivationMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[37d]"></a>DJI::OSDK::ACK::getCMDSetActivationMSG(DJI::OSDK::ACK::ErrorCode)</STRONG> (Thumb, 132 bytes, Stack size 80 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = DJI::OSDK::ACK::getCMDSetActivationMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&) const
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end() const
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator -&rang;() const
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool __rw::operator !=&lang;std::pair&lang;const unsigned, const char*&rang;, int, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~map()
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createActivateErrorCodeMap()
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode)
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
</UL>

<P><STRONG><a name="[1df]"></a>DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)</STRONG> (Thumb, 256 bytes, Stack size 48 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1440<LI>Call Chain = DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*) &rArr; DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetActivationMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getSetBroadcastMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMissionMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetSyncMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetVirtualRCMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMFIOMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetSubscribeMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode)
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actionMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verify(int)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::reset(int)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int, int)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int, int)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activateCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, int)
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::controlAuthorityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::missionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::getHotpointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::actionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::resetCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::addPackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verifyCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setFrequencyCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::idleVelocityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexDataCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getIndexCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getWaypointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
</UL>

<P><STRONG><a name="[331]"></a>DJI::OSDK::WaypointMission::WaypointMission(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, dji_waypoint.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::initWayptMission(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::initWayptMission(int, void*)
</UL>

<P><STRONG><a name="[672]"></a>DJI::OSDK::WaypointMission::WaypointMission__sub_object(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_waypoint.o(.text), UNUSED)

<P><STRONG><a name="[e4]"></a>DJI::OSDK::WaypointMission::~WaypointMission()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, dji_waypoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DJI::OSDK::WaypointMission::~WaypointMission() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionBase::~MissionBase__sub_object()
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::~WaypointMission__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
</UL>
<P><STRONG><a name="[673]"></a>DJI::OSDK::WaypointMission::~WaypointMission__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dji_waypoint.o(.text), UNUSED)

<P><STRONG><a name="[e5]"></a>DJI::OSDK::WaypointMission::~WaypointMission__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dji_waypoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DJI::OSDK::WaypointMission::~WaypointMission__deallocating() &rArr; DJI::OSDK::WaypointMission::~WaypointMission() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::~WaypointMission()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
</UL>
<P><STRONG><a name="[385]"></a>DJI::OSDK::WaypointMission::setInfo(const DJI::OSDK::WayPointInitSettings&)</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, dji_waypoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::init(DJI::OSDK::WayPointInitSettings*, int)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::init(DJI::OSDK::WayPointInitSettings*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>

<P><STRONG><a name="[334]"></a>DJI::OSDK::WaypointMission::init(DJI::OSDK::WayPointInitSettings*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 130 bytes, Stack size 56 bytes, dji_waypoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::setInfo(const DJI::OSDK::WayPointInitSettings&)
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::initWayptMission(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>

<P><STRONG><a name="[332]"></a>DJI::OSDK::WaypointMission::init(DJI::OSDK::WayPointInitSettings*, int)</STRONG> (Thumb, 110 bytes, Stack size 72 bytes, dji_waypoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::setInfo(const DJI::OSDK::WayPointInitSettings&)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::initWayptMission(int, void*)
</UL>

<P><STRONG><a name="[e6]"></a>DJI::OSDK::WaypointMission::start(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 118 bytes, Stack size 56 bytes, dji_waypoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DJI::OSDK::WaypointMission::start(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*) &rArr; DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
</UL>
<P><STRONG><a name="[e7]"></a>DJI::OSDK::WaypointMission::start(int)</STRONG> (Thumb, 96 bytes, Stack size 72 bytes, dji_waypoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DJI::OSDK::WaypointMission::start(int) &rArr; DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
</UL>
<P><STRONG><a name="[e8]"></a>DJI::OSDK::WaypointMission::stop(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 118 bytes, Stack size 56 bytes, dji_waypoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DJI::OSDK::WaypointMission::stop(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*) &rArr; DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
</UL>
<P><STRONG><a name="[e9]"></a>DJI::OSDK::WaypointMission::stop(int)</STRONG> (Thumb, 96 bytes, Stack size 72 bytes, dji_waypoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DJI::OSDK::WaypointMission::stop(int) &rArr; DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
</UL>
<P><STRONG><a name="[ea]"></a>DJI::OSDK::WaypointMission::pause(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 118 bytes, Stack size 56 bytes, dji_waypoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DJI::OSDK::WaypointMission::pause(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*) &rArr; DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
</UL>
<P><STRONG><a name="[eb]"></a>DJI::OSDK::WaypointMission::pause(int)</STRONG> (Thumb, 120 bytes, Stack size 72 bytes, dji_waypoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DJI::OSDK::WaypointMission::pause(int) &rArr; DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
</UL>
<P><STRONG><a name="[ec]"></a>DJI::OSDK::WaypointMission::resume(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 118 bytes, Stack size 56 bytes, dji_waypoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DJI::OSDK::WaypointMission::resume(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*) &rArr; DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
</UL>
<P><STRONG><a name="[ed]"></a>DJI::OSDK::WaypointMission::resume(int)</STRONG> (Thumb, 96 bytes, Stack size 72 bytes, dji_waypoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DJI::OSDK::WaypointMission::resume(int) &rArr; DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_waypoint.o(.constdata__ZTVN3DJI4OSDK15WaypointMissionE)
</UL>
<P><STRONG><a name="[386]"></a>DJI::OSDK::WaypointMission::getWaypointSettings(int)</STRONG> (Thumb, 96 bytes, Stack size 120 bytes, dji_waypoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[387]"></a>DJI::OSDK::WaypointMission::getWaypointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 234 bytes, Stack size 128 bytes, dji_waypoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1568<LI>Call Chain = DJI::OSDK::WaypointMission::getWaypointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*) &rArr; DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_waypoint.o(.text)
</UL>
<P><STRONG><a name="[388]"></a>DJI::OSDK::WaypointMission::getWaypointSettings(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 120 bytes, Stack size 56 bytes, dji_waypoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>

<P><STRONG><a name="[389]"></a>DJI::OSDK::WaypointMission::getIndex(unsigned char, int)</STRONG> (Thumb, 92 bytes, Stack size 168 bytes, dji_waypoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[38a]"></a>DJI::OSDK::WaypointMission::getIndexCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 228 bytes, Stack size 168 bytes, dji_waypoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1608<LI>Call Chain = DJI::OSDK::WaypointMission::getIndexCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*) &rArr; DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_waypoint.o(.text)
</UL>
<P><STRONG><a name="[38b]"></a>DJI::OSDK::WaypointMission::getIndex(unsigned char, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 214 bytes, Stack size 64 bytes, dji_waypoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>

<P><STRONG><a name="[38c]"></a>DJI::OSDK::WaypointMission::setIndex(DJI::OSDK::WayPointSettings*, unsigned)</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, dji_waypoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexData(DJI::OSDK::WayPointSettings*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexData(DJI::OSDK::WayPointSettings*, int)
</UL>

<P><STRONG><a name="[38d]"></a>DJI::OSDK::WaypointMission::uploadIndexDataCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 212 bytes, Stack size 80 bytes, dji_waypoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1520<LI>Call Chain = DJI::OSDK::WaypointMission::uploadIndexDataCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*) &rArr; DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_waypoint.o(.text)
</UL>
<P><STRONG><a name="[1bf]"></a>DJI::OSDK::WaypointMission::uploadIndexData(DJI::OSDK::WayPointSettings*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 170 bytes, Stack size 144 bytes, dji_waypoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::setIndex(DJI::OSDK::WayPointSettings*, unsigned)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uploadWaypoints(std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;&)
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::uploadingWaypoint(DJI::OSDK::WayPointSettings*)
</UL>

<P><STRONG><a name="[38e]"></a>DJI::OSDK::WaypointMission::uploadIndexData(DJI::OSDK::WayPointSettings*, int)</STRONG> (Thumb, 196 bytes, Stack size 264 bytes, dji_waypoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::setIndex(DJI::OSDK::WayPointSettings*, unsigned)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[38f]"></a>DJI::OSDK::WaypointMission::idleVelocityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 346 bytes, Stack size 96 bytes, dji_waypoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1536<LI>Call Chain = DJI::OSDK::WaypointMission::idleVelocityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*) &rArr; DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_waypoint.o(.text)
</UL>
<P><STRONG><a name="[390]"></a>DJI::OSDK::WaypointMission::readIdleVelocity(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 120 bytes, Stack size 56 bytes, dji_waypoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>

<P><STRONG><a name="[391]"></a>DJI::OSDK::WaypointMission::readIdleVelocity(int)</STRONG> (Thumb, 96 bytes, Stack size 72 bytes, dji_waypoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[392]"></a>DJI::OSDK::WaypointMission::updateIdleVelocity(float, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 122 bytes, Stack size 72 bytes, dji_waypoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>

<P><STRONG><a name="[393]"></a>DJI::OSDK::WaypointMission::updateIdleVelocity(float, int)</STRONG> (Thumb, 96 bytes, Stack size 88 bytes, dji_waypoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[674]"></a>DJI::OSDK::WaypointMission::setWaypointEventCallback(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_waypoint.o(.text), UNUSED)

<P><STRONG><a name="[675]"></a>DJI::OSDK::WaypointMission::setWaypointCallback(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, dji_waypoint.o(.text), UNUSED)

<P><STRONG><a name="[394]"></a>DJI::OSDK::DataBroadcast::unpackM100Data(DJI::OSDK::RecvContainer*)</STRONG> (Thumb, 290 bytes, Stack size 32 bytes, dji_broadcast.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DJI::OSDK::DataBroadcast::unpackM100Data(DJI::OSDK::RecvContainer*) &rArr; DJI::OSDK::DataBroadcast::unpackOne(DJI::OSDK::DataBroadcast::FLAG, void*, unsigned char*&, unsigned) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackOne(DJI::OSDK::DataBroadcast::FLAG, void*, unsigned char*&, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
</UL>

<P><STRONG><a name="[396]"></a>DJI::OSDK::DataBroadcast::unpackData(DJI::OSDK::RecvContainer*)</STRONG> (Thumb, 386 bytes, Stack size 32 bytes, dji_broadcast.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DJI::OSDK::DataBroadcast::unpackData(DJI::OSDK::RecvContainer*) &rArr; DJI::OSDK::DataBroadcast::unpackOne(DJI::OSDK::DataBroadcast::FLAG, void*, unsigned char*&, unsigned) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackOne(DJI::OSDK::DataBroadcast::FLAG, void*, unsigned char*&, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
</UL>

<P><STRONG><a name="[399]"></a>DJI::OSDK::DataBroadcast::getVehicle() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_broadcast.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setBroadcastFreq(unsigned char*, int)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
</UL>

<P><STRONG><a name="[397]"></a>DJI::OSDK::DataBroadcast::unpackOldM600Data(DJI::OSDK::RecvContainer*)</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, dji_broadcast.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DJI::OSDK::DataBroadcast::unpackOldM600Data(DJI::OSDK::RecvContainer*) &rArr; DJI::OSDK::DataBroadcast::unpackOne(DJI::OSDK::DataBroadcast::FLAG, void*, unsigned char*&, unsigned) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackOne(DJI::OSDK::DataBroadcast::FLAG, void*, unsigned char*&, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
</UL>

<P><STRONG><a name="[398]"></a>DJI::OSDK::DataBroadcast::unpackCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 118 bytes, Stack size 344 bytes, dji_broadcast.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = DJI::OSDK::DataBroadcast::unpackCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::DataBroadcast::unpackOldM600Data(DJI::OSDK::RecvContainer*) &rArr; DJI::OSDK::DataBroadcast::unpackOne(DJI::OSDK::DataBroadcast::FLAG, void*, unsigned char*&, unsigned) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackOldM600Data(DJI::OSDK::RecvContainer*)
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getVehicle() const
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackData(DJI::OSDK::RecvContainer*)
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackM100Data(DJI::OSDK::RecvContainer*)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_broadcast.o(.text)
</UL>
<P><STRONG><a name="[39a]"></a>DJI::OSDK::DataBroadcast::setVehicle(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::DataBroadcast(DJI::OSDK::Vehicle*)
</UL>

<P><STRONG><a name="[2c9]"></a>DJI::OSDK::DataBroadcast::DataBroadcast(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setVehicle(DJI::OSDK::Vehicle*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initBroadcast()
</UL>

<P><STRONG><a name="[676]"></a>DJI::OSDK::DataBroadcast::DataBroadcast__sub_object(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, dji_broadcast.o(.text), UNUSED)

<P><STRONG><a name="[39b]"></a>DJI::OSDK::DataBroadcast::setUserBroadcastCallback(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dji_broadcast.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::~DataBroadcast()
</UL>

<P><STRONG><a name="[291]"></a>DJI::OSDK::DataBroadcast::~DataBroadcast()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dji_broadcast.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DJI::OSDK::DataBroadcast::~DataBroadcast()
</UL>
<BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setUserBroadcastCallback(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::~Vehicle()
</UL>

<P><STRONG><a name="[677]"></a>DJI::OSDK::DataBroadcast::~DataBroadcast__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dji_broadcast.o(.text), UNUSED)

<P><STRONG><a name="[39c]"></a>DJI::OSDK::DataBroadcast::getTimeStamp()</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
</UL>

<P><STRONG><a name="[39d]"></a>DJI::OSDK::DataBroadcast::getSyncStamp()</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
</UL>

<P><STRONG><a name="[1b4]"></a>DJI::OSDK::DataBroadcast::getQuaternion()</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBroadcastData()
</UL>

<P><STRONG><a name="[39e]"></a>DJI::OSDK::DataBroadcast::getAcceleration()</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
</UL>

<P><STRONG><a name="[1ef]"></a>DJI::OSDK::DataBroadcast::getVelocity()</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBroadcastData()
</UL>

<P><STRONG><a name="[39f]"></a>DJI::OSDK::DataBroadcast::getAngularRate()</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
</UL>

<P><STRONG><a name="[3a0]"></a>DJI::OSDK::DataBroadcast::getVelocityInfo()</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
</UL>

<P><STRONG><a name="[19d]"></a>DJI::OSDK::DataBroadcast::getGlobalPosition()</STRONG> (Thumb, 74 bytes, Stack size 48 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runHotpointMission(int)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createWaypoints(int, double, float)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredLanding()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredTakeOff()
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBroadcastData()
</UL>

<P><STRONG><a name="[3a1]"></a>DJI::OSDK::DataBroadcast::getRelativePosition()</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[3a2]"></a>DJI::OSDK::DataBroadcast::getGPSInfo()</STRONG> (Thumb, 138 bytes, Stack size 88 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[3a3]"></a>DJI::OSDK::DataBroadcast::getRTKInfo()</STRONG> (Thumb, 74 bytes, Stack size 64 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[3a4]"></a>DJI::OSDK::DataBroadcast::getMag()</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
</UL>

<P><STRONG><a name="[1ee]"></a>DJI::OSDK::DataBroadcast::getRC()</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBroadcastData()
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::VirtualRC::getRCData() const
</UL>

<P><STRONG><a name="[1d8]"></a>DJI::OSDK::DataBroadcast::getGimbal()</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gimbalCameraControl()
</UL>

<P><STRONG><a name="[19b]"></a>DJI::OSDK::DataBroadcast::getStatus()</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredLanding()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredTakeOff()
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBroadcastData()
</UL>

<P><STRONG><a name="[3a5]"></a>DJI::OSDK::DataBroadcast::getBatteryInfo()</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[3a6]"></a>DJI::OSDK::DataBroadcast::getSDKInfo()</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::VirtualRC::isVirtualRC() const
</UL>

<P><STRONG><a name="[3a7]"></a>DJI::OSDK::DataBroadcast::setFrequencyCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, dji_broadcast.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1496<LI>Call Chain = DJI::OSDK::DataBroadcast::setFrequencyCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*) &rArr; DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode) &rArr; DJI::OSDK::ACK::createCommonErrorCodeMap() &rArr; std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_broadcast.o(.text)
</UL>
<P><STRONG><a name="[1ae]"></a>DJI::OSDK::DataBroadcast::setBroadcastFreq(unsigned char*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 158 bytes, Stack size 64 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackIdIndex()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startGlobalPositionBroadcast(DJI::OSDK::Vehicle*)
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setBroadcastFreqToZero()
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setBroadcastFreqDefaults()
</UL>

<P><STRONG><a name="[3a8]"></a>DJI::OSDK::DataBroadcast::setBroadcastFreq(unsigned char*, int)</STRONG> (Thumb, 128 bytes, Stack size 72 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getVehicle() const
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setBroadcastFreqDefaults(int)
</UL>

<P><STRONG><a name="[3ab]"></a>DJI::OSDK::DataBroadcast::setFreqDefaultsM100_31(unsigned char*)</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setVersionDefaults(unsigned char*)
</UL>

<P><STRONG><a name="[3aa]"></a>DJI::OSDK::DataBroadcast::setFreqDefaults(unsigned char*)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setVersionDefaults(unsigned char*)
</UL>

<P><STRONG><a name="[3a9]"></a>DJI::OSDK::DataBroadcast::setVersionDefaults(unsigned char*)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setFreqDefaults(unsigned char*)
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setFreqDefaultsM100_31(unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setBroadcastFreqDefaults(int)
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setBroadcastFreqDefaults()
</UL>

<P><STRONG><a name="[3ac]"></a>DJI::OSDK::DataBroadcast::setBroadcastFreqDefaults()</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setBroadcastFreq(unsigned char*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setVersionDefaults(unsigned char*)
</UL>

<P><STRONG><a name="[1ed]"></a>DJI::OSDK::DataBroadcast::setBroadcastFreqDefaults(int)</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setVersionDefaults(unsigned char*)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setBroadcastFreq(unsigned char*, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBroadcastData()
</UL>

<P><STRONG><a name="[3ad]"></a>DJI::OSDK::DataBroadcast::setBroadcastFreqToZero()</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, dji_broadcast.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setBroadcastFreq(unsigned char*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
</UL>

<P><STRONG><a name="[678]"></a>DJI::OSDK::DataBroadcast::getPassFlag()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_broadcast.o(.text), UNUSED)

<P><STRONG><a name="[679]"></a>DJI::OSDK::DataBroadcast::setBroadcastLength(unsigned short)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_broadcast.o(.text), UNUSED)

<P><STRONG><a name="[67a]"></a>DJI::OSDK::DataBroadcast::getBroadcastLength()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_broadcast.o(.text), UNUSED)

<P><STRONG><a name="[3af]"></a>rj_xtime(unsigned char)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, dji_aes.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_mixColumns_inv(unsigned char*)
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_mixColumns(unsigned char*)
</UL>

<P><STRONG><a name="[3b3]"></a>aes_subBytes(unsigned char*)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dji_aes.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_encrypt_ecb(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[3b7]"></a>aes_subBytes_inv(unsigned char*)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dji_aes.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_decrypt_ecb(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[3b5]"></a>aes_addRoundKey(unsigned char*, unsigned char*)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dji_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = aes_addRoundKey(unsigned char*, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_encrypt_ecb(tagAES256Context*, unsigned char*)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_decrypt_ecb(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[3b2]"></a>aes_addRoundKey_cpy(unsigned char*, unsigned char*, unsigned char*)</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, dji_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = aes_addRoundKey_cpy(unsigned char*, unsigned char*, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_encrypt_ecb(tagAES256Context*, unsigned char*)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_decrypt_ecb(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[3b4]"></a>aes_shiftRows(unsigned char*)</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, dji_aes.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_encrypt_ecb(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[3b6]"></a>aes_shiftRows_inv(unsigned char*)</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, dji_aes.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_decrypt_ecb(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[3ae]"></a>aes_mixColumns(unsigned char*)</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, dji_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = aes_mixColumns(unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rj_xtime(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_encrypt_ecb(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[3b0]"></a>aes_mixColumns_inv(unsigned char*)</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, dji_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = aes_mixColumns_inv(unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rj_xtime(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_decrypt_ecb(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[3b1]"></a>aes_expandEncKey(unsigned char*, unsigned char*)</STRONG> (Thumb, 244 bytes, Stack size 12 bytes, dji_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_encrypt_ecb(tagAES256Context*, unsigned char*)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_init(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[3b8]"></a>aes_expandDecKey(unsigned char*, unsigned char*)</STRONG> (Thumb, 254 bytes, Stack size 12 bytes, dji_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = aes_expandDecKey(unsigned char*, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_decrypt_ecb(tagAES256Context*, unsigned char*)
</UL>

<P><STRONG><a name="[2f2]"></a>aes256_init(tagAES256Context*, unsigned char*)</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, dji_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = aes256_init(tagAES256Context*, unsigned char*) &rArr; aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_expandEncKey(unsigned char*, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::encodeData(DJI::OSDK::OpenHeader*, void(*)(tagAES256Context*, unsigned char*))
</UL>

<P><STRONG><a name="[2f3]"></a>aes256_done(tagAES256Context*)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, dji_aes.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::encodeData(DJI::OSDK::OpenHeader*, void(*)(tagAES256Context*, unsigned char*))
</UL>

<P><STRONG><a name="[7b]"></a>aes256_encrypt_ecb(tagAES256Context*, unsigned char*)</STRONG> (Thumb, 116 bytes, Stack size 20 bytes, dji_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = aes256_encrypt_ecb(tagAES256Context*, unsigned char*) &rArr; aes_mixColumns(unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_expandEncKey(unsigned char*, unsigned char*)
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_mixColumns(unsigned char*)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_shiftRows(unsigned char*)
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_addRoundKey_cpy(unsigned char*, unsigned char*, unsigned char*)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_addRoundKey(unsigned char*, unsigned char*)
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_subBytes(unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_open_protocol.o(.text)
</UL>
<P><STRONG><a name="[7a]"></a>aes256_decrypt_ecb(tagAES256Context*, unsigned char*)</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, dji_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = aes256_decrypt_ecb(tagAES256Context*, unsigned char*) &rArr; aes_mixColumns_inv(unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_expandDecKey(unsigned char*, unsigned char*)
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_mixColumns_inv(unsigned char*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_shiftRows_inv(unsigned char*)
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_addRoundKey_cpy(unsigned char*, unsigned char*, unsigned char*)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_addRoundKey(unsigned char*, unsigned char*)
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_subBytes_inv(unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_open_protocol.o(.text)
</UL>
<P><STRONG><a name="[2a0]"></a>DJI::OSDK::Gimbal::Gimbal(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dji_gimbal.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initGimbal()
</UL>

<P><STRONG><a name="[67b]"></a>DJI::OSDK::Gimbal::Gimbal__sub_object(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_gimbal.o(.text), UNUSED)

<P><STRONG><a name="[28c]"></a>DJI::OSDK::Gimbal::~Gimbal()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_gimbal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::~Vehicle()
</UL>

<P><STRONG><a name="[67c]"></a>DJI::OSDK::Gimbal::~Gimbal__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_gimbal.o(.text), UNUSED)

<P><STRONG><a name="[1d3]"></a>DJI::OSDK::Gimbal::setAngle(DJI::OSDK::Gimbal::AngleData*)</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, dji_gimbal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSetGimbalAngle(GimbalContainer*)
</UL>

<P><STRONG><a name="[1db]"></a>DJI::OSDK::Gimbal::setSpeed(DJI::OSDK::Gimbal::SpeedData*)</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, dji_gimbal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gimbalCameraControl()
</UL>

<P><STRONG><a name="[3b9]"></a>DJI::OSDK::VirtualRC::resetVRCData()</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, dji_virtual_rc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::VirtualRC::VirtualRC(DJI::OSDK::Vehicle*)
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::VirtualRC::neutralVRCSticks()
</UL>

<P><STRONG><a name="[2d9]"></a>DJI::OSDK::VirtualRC::VirtualRC(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, dji_virtual_rc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::VirtualRC::resetVRCData()
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initVirtualRC()
</UL>

<P><STRONG><a name="[67d]"></a>DJI::OSDK::VirtualRC::VirtualRC__sub_object(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dji_virtual_rc.o(.text), UNUSED)

<P><STRONG><a name="[3ba]"></a>DJI::OSDK::VirtualRC::setControl(bool, DJI::OSDK::VirtualRC::CutOff)</STRONG> (Thumb, 74 bytes, Stack size 48 bytes, dji_virtual_rc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>

<P><STRONG><a name="[3bb]"></a>DJI::OSDK::VirtualRC::sendData(DJI::OSDK::VirtualRCData)</STRONG> (Thumb, 68 bytes, Stack size 56 bytes, dji_virtual_rc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[3bc]"></a>DJI::OSDK::VirtualRC::neutralVRCSticks()</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, dji_virtual_rc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::VirtualRC::resetVRCData()
</UL>

<P><STRONG><a name="[3bd]"></a>DJI::OSDK::VirtualRC::getRCData() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dji_virtual_rc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getRC()
</UL>

<P><STRONG><a name="[3be]"></a>DJI::OSDK::VirtualRC::getVRCData() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dji_virtual_rc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[3bf]"></a>DJI::OSDK::VirtualRC::setVRCData(const DJI::OSDK::VirtualRCData&)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dji_virtual_rc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[3c0]"></a>DJI::OSDK::VirtualRC::isVirtualRC() const</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dji_virtual_rc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getSDKInfo()
</UL>

<P><STRONG><a name="[67e]"></a>DJI::OSDK::VirtualRC::toRCData(DJI::OSDK::VirtualRCData&)</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, dji_virtual_rc.o(.text), UNUSED)

<P><STRONG><a name="[3c1]"></a>DJI::OSDK::VirtualRC::toVirtualRCData(DJI::OSDK::Telemetry::RC&)</STRONG> (Thumb, 192 bytes, Stack size 80 bytes, dji_virtual_rc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[67f]"></a>DJI::OSDK::VirtualRC::getVehicle() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_virtual_rc.o(.text), UNUSED)

<P><STRONG><a name="[680]"></a>DJI::OSDK::VirtualRC::setVehicle(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dji_virtual_rc.o(.text), UNUSED)

<P><STRONG><a name="[16e]"></a>DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, dji_version.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___23_FlightControlSample_cpp_8e9053dd
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_078b5881
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___15_cppforstm32_cpp_2d9dc738
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___22_CameraGimbalSample_cpp_2ed0a8e0
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___17_MissionSample_cpp_105bd650
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___7_bsp_cpp_eb441081
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___9_timer_cpp_tick
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___12_BspUsart_cpp_353bec44
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___11_Receive_cpp_88bc3a46
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___12_Activate_cpp_c609511d
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_TelemetrySample_cpp_d62fb3f4
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_MobileSample_cpp_0cb23d9d
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___7_rtc_cpp_8afd6a98
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::parseDroneVersionInfo(DJI::OSDK::Version::VersionData&, unsigned char*)
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___15_dji_vehicle_cpp_8f4cafc0
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___23_dji_mission_manager_cpp_d61cd15c
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___12_dji_mfio_cpp_c2ebea95
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_dji_hotpoint_cpp_f4e83e9b
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___15_dji_control_cpp_aae34645
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___14_dji_camera_cpp_cdfdda64
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_dji_open_protocol_cpp_81b2a1ff
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___11_dji_ack_cpp_0a38b940
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___20_dji_subscription_cpp_e3250e60
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_dji_hardware_sync_cpp_571dc58a
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___28_dji_mobile_communication_cpp_a0253467
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___11_GetData_cpp_8f60a30d
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_list_cpp_dc6bb2e0
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_buffer_cpp_a556aa1b
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_dji_mobile_device_cpp_a8636f60
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___24_dji_platform_manager_cpp_4a190e86
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_dji_protocol_base_cpp_246ea02c
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___23_dji_circular_buffer_cpp_bdb94397
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___15_dji_version_cpp_06fb57c7
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___18_dji_virtual_rc_cpp_fcc8de67
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___14_dji_gimbal_cpp_d619892c
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___17_dji_broadcast_cpp_d9fe0773
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_dji_waypoint_cpp_16ca33f4
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___17_basicFunction_cpp_2da18785
</UL>

<P><STRONG><a name="[ad]"></a>STM32F4::send(const unsigned char*, unsigned)</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, stm32f4serialdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = STM32F4::send(const unsigned char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4serialdriver.o(.constdata__ZTV7STM32F4)
</UL>
<P><STRONG><a name="[ac]"></a>STM32F4::getTimeStamp()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4serialdriver.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4serialdriver.o(.constdata__ZTV7STM32F4)
</UL>
<P><STRONG><a name="[3ca]"></a>STM32F4::delay_nms(unsigned short)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4serialdriver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::PlatformManager::millisecSleep(int)
</UL>

<P><STRONG><a name="[3c2]"></a>DJI::OSDK::STM32F4DataGuard::STM32F4DataGuard()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f4dataguard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DJI::OSDK::STM32F4DataGuard::STM32F4DataGuard()
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ThreadAbstract::ThreadAbstract__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::PlatformManager::addThreadHandle()
</UL>

<P><STRONG><a name="[681]"></a>DJI::OSDK::STM32F4DataGuard::STM32F4DataGuard__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, stm32f4dataguard.o(.text), UNUSED)

<P><STRONG><a name="[ee]"></a>DJI::OSDK::STM32F4DataGuard::~STM32F4DataGuard()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4dataguard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DJI::OSDK::STM32F4DataGuard::~STM32F4DataGuard()
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ThreadAbstract::~ThreadAbstract__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::STM32F4DataGuard::~STM32F4DataGuard__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[682]"></a>DJI::OSDK::STM32F4DataGuard::~STM32F4DataGuard__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, stm32f4dataguard.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>DJI::OSDK::STM32F4DataGuard::~STM32F4DataGuard__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, stm32f4dataguard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DJI::OSDK::STM32F4DataGuard::~STM32F4DataGuard__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::STM32F4DataGuard::~STM32F4DataGuard()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[102]"></a>DJI::OSDK::STM32F4DataGuard::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4dataguard.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[f0]"></a>DJI::OSDK::STM32F4DataGuard::lockRecvContainer()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4dataguard.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[f1]"></a>DJI::OSDK::STM32F4DataGuard::freeRecvContainer()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4dataguard.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[f2]"></a>DJI::OSDK::STM32F4DataGuard::lockMSG()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4dataguard.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[f3]"></a>DJI::OSDK::STM32F4DataGuard::freeMSG()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4dataguard.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[f4]"></a>DJI::OSDK::STM32F4DataGuard::lockACK()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4dataguard.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[f5]"></a>DJI::OSDK::STM32F4DataGuard::freeACK()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4dataguard.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[f6]"></a>DJI::OSDK::STM32F4DataGuard::lockProtocolHeader()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4dataguard.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[f7]"></a>DJI::OSDK::STM32F4DataGuard::freeProtocolHeader()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4dataguard.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[f8]"></a>DJI::OSDK::STM32F4DataGuard::lockNonBlockCBAck()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4dataguard.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[f9]"></a>DJI::OSDK::STM32F4DataGuard::freeNonBlockCBAck()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4dataguard.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[fc]"></a>DJI::OSDK::STM32F4DataGuard::lockStopCond()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4dataguard.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[fd]"></a>DJI::OSDK::STM32F4DataGuard::freeStopCond()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4dataguard.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[fe]"></a>DJI::OSDK::STM32F4DataGuard::lockFrame()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4dataguard.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[ff]"></a>DJI::OSDK::STM32F4DataGuard::freeFrame()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4dataguard.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[100]"></a>DJI::OSDK::STM32F4DataGuard::notify()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4dataguard.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[fa]"></a>DJI::OSDK::STM32F4DataGuard::notifyNonBlockCBAckRecv()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4dataguard.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[101]"></a>DJI::OSDK::STM32F4DataGuard::wait(int)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4dataguard.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[fb]"></a>DJI::OSDK::STM32F4DataGuard::nonBlockWait()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4dataguard.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4dataguard.o(.constdata__ZTVN3DJI4OSDK16STM32F4DataGuardE)
</UL>
<P><STRONG><a name="[3cd]"></a>DJI::OSDK::Mutex::Mutex__sub_object()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_thread_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MutexDefault::MutexDefault()
</UL>

<P><STRONG><a name="[106]"></a>DJI::OSDK::Mutex::~Mutex__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_thread_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MutexDefault::~MutexDefault()
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Mutex::~Mutex__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK5MutexE)
</UL>
<P><STRONG><a name="[107]"></a>DJI::OSDK::Mutex::~Mutex__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dji_thread_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DJI::OSDK::Mutex::~Mutex__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Mutex::~Mutex__sub_object()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK5MutexE)
</UL>
<P><STRONG><a name="[3c3]"></a>DJI::OSDK::ThreadAbstract::ThreadAbstract__sub_object()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_thread_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::STM32F4DataGuard::STM32F4DataGuard()
</UL>

<P><STRONG><a name="[ce]"></a>DJI::OSDK::ThreadAbstract::~ThreadAbstract__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_thread_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ThreadAbstract::~ThreadAbstract__deallocating()
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::STM32F4DataGuard::~STM32F4DataGuard()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
</UL>
<P><STRONG><a name="[cf]"></a>DJI::OSDK::ThreadAbstract::~ThreadAbstract__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dji_thread_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DJI::OSDK::ThreadAbstract::~ThreadAbstract__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ThreadAbstract::~ThreadAbstract__sub_object()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
</UL>
<P><STRONG><a name="[d0]"></a>DJI::OSDK::ThreadAbstract::lockProtocolHeader()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_thread_manager.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
</UL>
<P><STRONG><a name="[d1]"></a>DJI::OSDK::ThreadAbstract::freeProtocolHeader()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_thread_manager.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
</UL>
<P><STRONG><a name="[d2]"></a>DJI::OSDK::ThreadAbstract::lockNonBlockCBAck()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_thread_manager.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
</UL>
<P><STRONG><a name="[d3]"></a>DJI::OSDK::ThreadAbstract::freeNonBlockCBAck()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_thread_manager.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
</UL>
<P><STRONG><a name="[d4]"></a>DJI::OSDK::ThreadAbstract::notifyNonBlockCBAckRecv()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_thread_manager.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
</UL>
<P><STRONG><a name="[d5]"></a>DJI::OSDK::ThreadAbstract::nonBlockWait()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_thread_manager.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
</UL>
<P><STRONG><a name="[d6]"></a>DJI::OSDK::ThreadAbstract::lockStopCond()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_thread_manager.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
</UL>
<P><STRONG><a name="[d7]"></a>DJI::OSDK::ThreadAbstract::freeStopCond()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_thread_manager.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
</UL>
<P><STRONG><a name="[d8]"></a>DJI::OSDK::ThreadAbstract::lockFrame()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_thread_manager.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
</UL>
<P><STRONG><a name="[d9]"></a>DJI::OSDK::ThreadAbstract::freeFrame()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_thread_manager.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
</UL>
<P><STRONG><a name="[683]"></a>DJI::OSDK::Thread::Thread__sub_object()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_thread_manager.o(.text), UNUSED)

<P><STRONG><a name="[108]"></a>DJI::OSDK::Thread::~Thread__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_thread_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Thread::~Thread__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK6ThreadE)
</UL>
<P><STRONG><a name="[109]"></a>DJI::OSDK::Thread::~Thread__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dji_thread_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DJI::OSDK::Thread::~Thread__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Thread::~Thread__sub_object()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK6ThreadE)
</UL>
<P><STRONG><a name="[684]"></a>DJI::OSDK::Thread::getStopCondition()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_thread_manager.o(.text), UNUSED)

<P><STRONG><a name="[685]"></a>DJI::OSDK::Thread::setStopCondition(bool)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dji_thread_manager.o(.text), UNUSED)

<P><STRONG><a name="[2c2]"></a>DJI::OSDK::CircularBuffer::cbPop(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler*, DJI::OSDK::RecvContainer*)</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, dji_circular_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DJI::OSDK::CircularBuffer::cbPop(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler*, DJI::OSDK::RecvContainer*) &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::cbPush(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler, DJI::OSDK::RecvContainer)
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackPoll()
</UL>

<P><STRONG><a name="[2bf]"></a>DJI::OSDK::CircularBuffer::cbPush(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler, DJI::OSDK::RecvContainer)</STRONG> (Thumb, 138 bytes, Stack size 56 bytes, dji_circular_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = DJI::OSDK::CircularBuffer::cbPush(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler, DJI::OSDK::RecvContainer) &rArr; DJI::OSDK::CircularBuffer::cbPop(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler*, DJI::OSDK::RecvContainer*) &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::cbPop(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler*, DJI::OSDK::RecvContainer*)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::processReceivedData(DJI::OSDK::RecvContainer*)
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::PushDataHandler(void*)
</UL>

<P><STRONG><a name="[285]"></a>DJI::OSDK::CircularBuffer::CircularBuffer()</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, dji_circular_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DJI::OSDK::CircularBuffer::CircularBuffer() &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::mandatorySetUp()
</UL>

<P><STRONG><a name="[686]"></a>DJI::OSDK::CircularBuffer::CircularBuffer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dji_circular_buffer.o(.text), UNUSED)

<P><STRONG><a name="[28a]"></a>DJI::OSDK::CircularBuffer::~CircularBuffer()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dji_circular_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DJI::OSDK::CircularBuffer::~CircularBuffer() &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::~Vehicle()
</UL>

<P><STRONG><a name="[687]"></a>DJI::OSDK::CircularBuffer::~CircularBuffer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dji_circular_buffer.o(.text), UNUSED)

<P><STRONG><a name="[1bb]"></a>DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, dji_log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MutexDefault::MutexDefault()
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::Singleton()
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___23_FlightControlSample_cpp_8e9053dd
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___22_CameraGimbalSample_cpp_2ed0a8e0
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___17_MissionSample_cpp_105bd650
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_TelemetrySample_cpp_d62fb3f4
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_MobileSample_cpp_0cb23d9d
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___15_dji_vehicle_cpp_8f4cafc0
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___23_dji_mission_manager_cpp_d61cd15c
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___12_dji_mfio_cpp_c2ebea95
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_dji_hotpoint_cpp_f4e83e9b
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_dji_hard_driver_cpp_df62f7f1
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___15_dji_control_cpp_aae34645
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_dji_open_protocol_cpp_81b2a1ff
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___11_dji_ack_cpp_0a38b940
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___20_dji_subscription_cpp_e3250e60
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___28_dji_mobile_communication_cpp_a0253467
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___11_GetData_cpp_8f60a30d
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_dji_mobile_device_cpp_a8636f60
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_dji_protocol_base_cpp_246ea02c
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___23_dji_circular_buffer_cpp_bdb94397
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_dji_waypoint_cpp_16ca33f4
</UL>

<P><STRONG><a name="[688]"></a>DJI::OSDK::Log::Log__sub_object(DJI::OSDK::Mutex*)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[103]"></a>DJI::OSDK::Log::~Log()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, dji_log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DJI::OSDK::Log::~Log()
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::~Singleton()
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::~Log__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_log.o(.constdata__ZTVN3DJI4OSDK3LogE)
</UL>
<P><STRONG><a name="[689]"></a>DJI::OSDK::Log::~Log__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[104]"></a>DJI::OSDK::Log::~Log__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dji_log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DJI::OSDK::Log::~Log__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::~Log()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_log.o(.constdata__ZTVN3DJI4OSDK3LogE)
</UL>
<P><STRONG><a name="[1e4]"></a>DJI::OSDK::Log::title(int, const char*, const char*, int)</STRONG> (Thumb, 68 bytes, Stack size 56 bytes, dji_log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::functionalSetUp()
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)24&rang;()
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::printInfo()
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::init(DJI::OSDK::DJI_MISSION_TYPE, int, void*)
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::emergencyBrake()
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::initPackageFromTopicList(int, int, DJI::OSDK::Telemetry::TopicName*, bool, unsigned short)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int)
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)27&rang;()
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)26&rang;()
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)11&rang;()
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)0&rang;()
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::processReceivedData(DJI::OSDK::RecvContainer*)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)4&rang;()
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)23&rang;()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileCommunication::sendDataToMSDK(unsigned char*, unsigned char)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlAuthorityMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actionMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verify(int)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::reset(int)
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removeLeftOverPackages()
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int, int)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int, int)
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::CircularBuffer()
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::cbPush(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler, DJI::OSDK::RecvContainer)
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::cbPop(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler*, DJI::OSDK::RecvContainer*)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)25&rang;()
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initVirtualRC()
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initHardSync()
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMissionManager()
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMobileDevice()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMOC()
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMFIO()
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initCamera()
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initControl()
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initBroadcast()
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initSubscriber()
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initFullPlatformSupport()
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::ACKHandler(void*)
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::PushDataHandler(void*)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activateCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersion(int)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::parseDroneVersionInfo(DJI::OSDK::Version::VersionData&, unsigned char*)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, int)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initGimbal()
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::controlAuthorityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::Vehicle(const char*, unsigned, bool, bool)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::mandatorySetUp()
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMainReadThread()
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::config(DJI::OSDK::MFIO::MODE, DJI::OSDK::MFIO::CHANNEL, unsigned, unsigned short, int)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::getValueCallback(DJI::OSDK::RecvContainer, void*)
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::config(DJI::OSDK::MFIO::MODE, DJI::OSDK::MFIO::CHANNEL, unsigned, unsigned short, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::missionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::startCallback(DJI::OSDK::RecvContainer, void*)
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::getHotpointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HardDriver::displayLog(const char*)
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::killSwitch(DJI::OSDK::Control::KillSwitch, char*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::killSwitch(DJI::OSDK::Control::KillSwitch, int, char*)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::angularRateAndVertPosCtrl(float, float, float, float)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::flightCtrl(DJI::OSDK::Control::AdvancedCtrlData)
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::actionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::storeData(unsigned char)
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::appHandler(void*)
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::sendData(unsigned char*)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::sendInterface(void*)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short)
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::sendPoll()
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::freeSession(DJI::OSDK::CMDSession*)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::allocSession(unsigned short, unsigned short)
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::allocACK(unsigned short, unsigned short)
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::resetCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removeAllExistingPackages()
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::addPackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verifyCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::decodeCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::extractOnePackage(DJI::OSDK::RecvContainer*, DJI::OSDK::SubscriptionPackage*)
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::setTopicList(DJI::OSDK::Telemetry::TopicName*, int, unsigned short)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileCommunication::getDataFromMSDKCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::getHotpt(int)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::getWaypt(int)
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::init(DJI::OSDK::DJI_MISSION_TYPE, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileDevice::sendDataToMSDK(unsigned char*, unsigned char)
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileDevice::getDataFromMSDKCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::idleVelocityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexData(DJI::OSDK::WayPointSettings*, int)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexDataCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::setIndex(DJI::OSDK::WayPointSettings*, unsigned)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getIndexCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getWaypointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetActivationMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetControlMSG(unsigned char, unsigned)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetArmMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMissionMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMFIOMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetSubscribeMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)30&rang;()
</UL>

<P><STRONG><a name="[68a]"></a>DJI::OSDK::Log::title(int, const char*)</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[68b]"></a>DJI::OSDK::Log::print()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[68c]"></a>DJI::OSDK::Log::enableStatusLogging()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[68d]"></a>DJI::OSDK::Log::disableStatusLogging()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[68e]"></a>DJI::OSDK::Log::enableDebugLogging()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[68f]"></a>DJI::OSDK::Log::disableDebugLogging()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[690]"></a>DJI::OSDK::Log::enableErrorLogging()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[691]"></a>DJI::OSDK::Log::disableErrorLogging()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[2a2]"></a>DJI::OSDK::Log::getStatusLogState()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_log.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::printInfo()
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verify(int)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::reset(int)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int, int)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int, int)
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::cbPush(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler, DJI::OSDK::RecvContainer)
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::cbPop(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler*, DJI::OSDK::RecvContainer*)
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initHardSync()
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMFIO()
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initControl()
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initBroadcast()
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initSubscriber()
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::parseDroneVersionInfo(DJI::OSDK::Version::VersionData&, unsigned char*)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, int)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initGimbal()
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::config(DJI::OSDK::MFIO::MODE, DJI::OSDK::MFIO::CHANNEL, unsigned, unsigned short, int)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::getValueCallback(DJI::OSDK::RecvContainer, void*)
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::startCallback(DJI::OSDK::RecvContainer, void*)
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::appHandler(void*)
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::sendData(unsigned char*)
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::sendPoll()
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::resetCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::addPackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verifyCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileCommunication::getDataFromMSDKCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileDevice::getDataFromMSDKCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::idleVelocityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexDataCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getIndexCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getWaypointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetActivationMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetControlMSG(unsigned char, unsigned)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetArmMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMissionMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMFIOMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetSubscribeMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[2b0]"></a>DJI::OSDK::Log::getDebugLogState()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_log.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::processReceivedData(DJI::OSDK::RecvContainer*)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initVirtualRC()
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initHardSync()
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMissionManager()
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMobileDevice()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMOC()
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMFIO()
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initCamera()
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initControl()
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initBroadcast()
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initSubscriber()
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initFullPlatformSupport()
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::PushDataHandler(void*)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, int)
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HardDriver::displayLog(const char*)
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::appHandler(void*)
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::sendData(unsigned char*)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::sendInterface(void*)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short)
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::sendPoll()
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::freeSession(DJI::OSDK::CMDSession*)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::allocSession(unsigned short, unsigned short)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::extractOnePackage(DJI::OSDK::RecvContainer*, DJI::OSDK::SubscriptionPackage*)
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::setTopicList(DJI::OSDK::Telemetry::TopicName*, int, unsigned short)
</UL>

<P><STRONG><a name="[1e3]"></a>DJI::OSDK::Log::getErrorLogState()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_log.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::functionalSetUp()
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)24&rang;()
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::init(DJI::OSDK::DJI_MISSION_TYPE, int, void*)
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::emergencyBrake()
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::initPackageFromTopicList(int, int, DJI::OSDK::Telemetry::TopicName*, bool, unsigned short)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int)
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)27&rang;()
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)26&rang;()
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)11&rang;()
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)0&rang;()
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)4&rang;()
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)23&rang;()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileCommunication::sendDataToMSDK(unsigned char*, unsigned char)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlAuthorityMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actionMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removeLeftOverPackages()
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int, int)
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::CircularBuffer()
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)25&rang;()
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initVirtualRC()
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMobileDevice()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMOC()
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMFIO()
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initCamera()
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initControl()
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initBroadcast()
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initSubscriber()
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initFullPlatformSupport()
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::ACKHandler(void*)
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::PushDataHandler(void*)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activateCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersion(int)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, int)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initGimbal()
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::controlAuthorityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::Vehicle(const char*, unsigned, bool, bool)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::mandatorySetUp()
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMainReadThread()
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::config(DJI::OSDK::MFIO::MODE, DJI::OSDK::MFIO::CHANNEL, unsigned, unsigned short, int)
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::config(DJI::OSDK::MFIO::MODE, DJI::OSDK::MFIO::CHANNEL, unsigned, unsigned short, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::missionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::startCallback(DJI::OSDK::RecvContainer, void*)
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::getHotpointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::killSwitch(DJI::OSDK::Control::KillSwitch, char*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::killSwitch(DJI::OSDK::Control::KillSwitch, int, char*)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::angularRateAndVertPosCtrl(float, float, float, float)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::flightCtrl(DJI::OSDK::Control::AdvancedCtrlData)
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::actionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::storeData(unsigned char)
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::sendData(unsigned char*)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::sendInterface(void*)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::allocSession(unsigned short, unsigned short)
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::allocACK(unsigned short, unsigned short)
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removeAllExistingPackages()
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::decodeCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::getHotpt(int)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::getWaypt(int)
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::init(DJI::OSDK::DJI_MISSION_TYPE, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileDevice::sendDataToMSDK(unsigned char*, unsigned char)
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::idleVelocityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexData(DJI::OSDK::WayPointSettings*, int)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexDataCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::setIndex(DJI::OSDK::WayPointSettings*, unsigned)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getIndexCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getWaypointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)30&rang;()
</UL>

<P><STRONG><a name="[105]"></a>DJI::OSDK::Log::print(const char*, ...)</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, dji_log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DJI::OSDK::Log::print(const char*, ...)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_log.o(.constdata__ZTVN3DJI4OSDK3LogE)
</UL>
<P><STRONG><a name="[692]"></a>DJI::OSDK::Log::operator &lang;&lang;(bool)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[693]"></a>DJI::OSDK::Log::operator &lang;&lang;(short)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[694]"></a>DJI::OSDK::Log::operator &lang;&lang;(unsigned short)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[695]"></a>DJI::OSDK::Log::operator &lang;&lang;(int)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[696]"></a>DJI::OSDK::Log::operator &lang;&lang;(unsigned)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[697]"></a>DJI::OSDK::Log::operator &lang;&lang;(long)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[698]"></a>DJI::OSDK::Log::operator &lang;&lang;(unsigned long)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[699]"></a>DJI::OSDK::Log::operator &lang;&lang;(long long)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[69a]"></a>DJI::OSDK::Log::operator &lang;&lang;(unsigned long long)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[3c9]"></a>DJI::OSDK::Log::operator &lang;&lang;(float)</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, dji_log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>

<P><STRONG><a name="[69b]"></a>DJI::OSDK::Log::operator &lang;&lang;(double)</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[69c]"></a>DJI::OSDK::Log::operator &lang;&lang;(long double)</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[69d]"></a>DJI::OSDK::Log::operator &lang;&lang;(void*)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[69e]"></a>DJI::OSDK::Log::operator &lang;&lang;(char)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[69f]"></a>DJI::OSDK::Log::operator &lang;&lang;(unsigned char)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[6a0]"></a>DJI::OSDK::Log::operator &lang;&lang;(signed char)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[6a1]"></a>DJI::OSDK::Log::operator &lang;&lang;(const char*)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, dji_log.o(.text), UNUSED)

<P><STRONG><a name="[2e0]"></a>DJI::OSDK::ProtocolBase::ProtocolBase__sub_object()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dji_protocol_base.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::OpenProtocol(DJI::OSDK::PlatformManager*, const char*, unsigned)
</UL>

<P><STRONG><a name="[cc]"></a>DJI::OSDK::ProtocolBase::~ProtocolBase__sub_object()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dji_protocol_base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DJI::OSDK::ProtocolBase::~ProtocolBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::~OpenProtocol()
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::~ProtocolBase__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_protocol_base.o(.constdata__ZTVN3DJI4OSDK12ProtocolBaseE)
</UL>
<P><STRONG><a name="[cd]"></a>DJI::OSDK::ProtocolBase::~ProtocolBase__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dji_protocol_base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DJI::OSDK::ProtocolBase::~ProtocolBase__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::~ProtocolBase__sub_object()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_protocol_base.o(.constdata__ZTVN3DJI4OSDK12ProtocolBaseE)
</UL>
<P><STRONG><a name="[c0]"></a>DJI::OSDK::ProtocolBase::receive()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, dji_protocol_base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DJI::OSDK::ProtocolBase::receive()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
<LI> dji_protocol_base.o(.constdata__ZTVN3DJI4OSDK12ProtocolBaseE)
</UL>
<P><STRONG><a name="[c1]"></a>DJI::OSDK::ProtocolBase::readPoll()</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, dji_protocol_base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DJI::OSDK::ProtocolBase::readPoll() &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 2]<UL><LI> dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
<LI> dji_protocol_base.o(.constdata__ZTVN3DJI4OSDK12ProtocolBaseE)
</UL>
<P><STRONG><a name="[c2]"></a>DJI::OSDK::ProtocolBase::byteHandler(unsigned char)</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, dji_protocol_base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DJI::OSDK::ProtocolBase::byteHandler(unsigned char)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
<LI> dji_protocol_base.o(.constdata__ZTVN3DJI4OSDK12ProtocolBaseE)
</UL>
<P><STRONG><a name="[c3]"></a>DJI::OSDK::ProtocolBase::streamHandler(unsigned char)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, dji_protocol_base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DJI::OSDK::ProtocolBase::streamHandler(unsigned char)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
<LI> dji_protocol_base.o(.constdata__ZTVN3DJI4OSDK12ProtocolBaseE)
</UL>
<P><STRONG><a name="[c4]"></a>DJI::OSDK::ProtocolBase::storeData(unsigned char)</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, dji_protocol_base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DJI::OSDK::ProtocolBase::storeData(unsigned char) &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 2]<UL><LI> dji_open_protocol.o(.constdata__ZTVN3DJI4OSDK12OpenProtocolE)
<LI> dji_protocol_base.o(.constdata__ZTVN3DJI4OSDK12ProtocolBaseE)
</UL>
<P><STRONG><a name="[2f9]"></a>DJI::OSDK::ProtocolBase::prepareDataStream()</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, dji_protocol_base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DJI::OSDK::ProtocolBase::prepareDataStream() &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::callApp()
</UL>

<P><STRONG><a name="[2f7]"></a>DJI::OSDK::ProtocolBase::shiftDataStream()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dji_protocol_base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DJI::OSDK::ProtocolBase::shiftDataStream() &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::reuseDataStream()
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::verifyHead()
</UL>

<P><STRONG><a name="[2f8]"></a>DJI::OSDK::ProtocolBase::reuseDataStream()</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, dji_protocol_base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DJI::OSDK::ProtocolBase::reuseDataStream() &rArr; DJI::OSDK::ProtocolBase::shiftDataStream() &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::shiftDataStream()
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::verifyData()
</UL>

<P><STRONG><a name="[18d]"></a>DJI::OSDK::ProtocolBase::getDriver() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_protocol_base.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::droneInit()
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredLanding()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredTakeOff()
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subscribeToData()
</UL>

<P><STRONG><a name="[29b]"></a>DJI::OSDK::ProtocolBase::getThreadHandle() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_protocol_base.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getGimbal()
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)24&rang;()
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getStatus()
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getGlobalPosition()
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getQuaternion()
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)27&rang;()
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)26&rang;()
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)11&rang;()
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)0&rang;()
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::processReceivedData(DJI::OSDK::RecvContainer*)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getRC()
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getVelocity()
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)4&rang;()
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)23&rang;()
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)25&rang;()
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackPoll()
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::PushDataHandler(void*)
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getLastReceivedFrame()
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::setLastReceivedFrame(DJI::OSDK::RecvContainer)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::extractOnePackage(DJI::OSDK::RecvContainer*, DJI::OSDK::SubscriptionPackage*)
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getSDKInfo()
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getBatteryInfo()
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getMag()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getRTKInfo()
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getGPSInfo()
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getRelativePosition()
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getVelocityInfo()
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getAngularRate()
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getAcceleration()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getSyncStamp()
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getTimeStamp()
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackOldM600Data(DJI::OSDK::RecvContainer*)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackData(DJI::OSDK::RecvContainer*)
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackM100Data(DJI::OSDK::RecvContainer*)
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)30&rang;()
</UL>

<P><STRONG><a name="[6a2]"></a>DJI::OSDK::ProtocolBase::setDriver(DJI::OSDK::HardDriver*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dji_protocol_base.o(.text), UNUSED)

<P><STRONG><a name="[6a3]"></a>DJI::OSDK::ProtocolBase::setThreadHandle(DJI::OSDK::ThreadAbstract*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dji_protocol_base.o(.text), UNUSED)

<P><STRONG><a name="[2e3]"></a>DJI::OSDK::ProtocolBase::setHeaderLength(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_protocol_base.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::OpenProtocol(DJI::OSDK::PlatformManager*, const char*, unsigned)
</UL>

<P><STRONG><a name="[2e4]"></a>DJI::OSDK::ProtocolBase::setMaxRecvLength(int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dji_protocol_base.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::OpenProtocol(DJI::OSDK::PlatformManager*, const char*, unsigned)
</UL>

<P><STRONG><a name="[6a4]"></a>DJI::OSDK::ProtocolBase::getBufReadPos()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_protocol_base.o(.text), UNUSED)

<P><STRONG><a name="[6a5]"></a>DJI::OSDK::ProtocolBase::getReadLen()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_protocol_base.o(.text), UNUSED)

<P><STRONG><a name="[235]"></a>DJI::OSDK::ProtocolBase::getReceivedFrame()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_protocol_base.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[280]"></a>DJI::OSDK::PlatformManager::PlatformManager()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_platform_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initOpenProtocol()
</UL>

<P><STRONG><a name="[6a6]"></a>DJI::OSDK::PlatformManager::PlatformManager__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_platform_manager.o(.text), UNUSED)

<P><STRONG><a name="[294]"></a>DJI::OSDK::PlatformManager::~PlatformManager()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_platform_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::~Vehicle()
</UL>

<P><STRONG><a name="[6a7]"></a>DJI::OSDK::PlatformManager::~PlatformManager__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_platform_manager.o(.text), UNUSED)

<P><STRONG><a name="[27e]"></a>DJI::OSDK::PlatformManager::addThread(DJI::OSDK::Vehicle*, unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_platform_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initFullPlatformSupport()
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMainReadThread()
</UL>

<P><STRONG><a name="[2e1]"></a>DJI::OSDK::PlatformManager::addHardDriver(unsigned char, const char*, unsigned)</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, dji_platform_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = DJI::OSDK::PlatformManager::addHardDriver(unsigned char, const char*, unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HardDriver::HardDriver__sub_object()
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::OpenProtocol(DJI::OSDK::PlatformManager*, const char*, unsigned)
</UL>

<P><STRONG><a name="[2e2]"></a>DJI::OSDK::PlatformManager::addThreadHandle()</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, dji_platform_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = DJI::OSDK::PlatformManager::addThreadHandle() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::STM32F4DataGuard::STM32F4DataGuard()
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::OpenProtocol(DJI::OSDK::PlatformManager*, const char*, unsigned)
</UL>

<P><STRONG><a name="[2a4]"></a>DJI::OSDK::PlatformManager::millisecSleep(int)</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, dji_platform_manager.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4::delay_nms(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initVersion()
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initSubscriber()
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initGimbal()
</UL>

<P><STRONG><a name="[3cb]"></a>DJI::OSDK::MobileDevice::getDataFromMSDKCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)</STRONG> (Thumb, 80 bytes, Stack size 48 bytes, dji_mobile_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DJI::OSDK::MobileDevice::getDataFromMSDKCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*) &rArr; DJI::OSDK::Log::title(int, const char*, const char*, int) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getStatusLogState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_mobile_device.o(.text)
</UL>
<P><STRONG><a name="[2d3]"></a>DJI::OSDK::MobileDevice::MobileDevice(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dji_mobile_device.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMobileDevice()
</UL>

<P><STRONG><a name="[6a8]"></a>DJI::OSDK::MobileDevice::MobileDevice__sub_object(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_mobile_device.o(.text), UNUSED)

<P><STRONG><a name="[290]"></a>DJI::OSDK::MobileDevice::~MobileDevice()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dji_mobile_device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::~Vehicle()
</UL>

<P><STRONG><a name="[6a9]"></a>DJI::OSDK::MobileDevice::~MobileDevice__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_mobile_device.o(.text), UNUSED)

<P><STRONG><a name="[6aa]"></a>DJI::OSDK::MobileDevice::getVehicle() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_mobile_device.o(.text), UNUSED)

<P><STRONG><a name="[6ab]"></a>DJI::OSDK::MobileDevice::setVehicle(DJI::OSDK::Vehicle*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dji_mobile_device.o(.text), UNUSED)

<P><STRONG><a name="[3cc]"></a>DJI::OSDK::MobileDevice::sendDataToMSDK(unsigned char*, unsigned char)</STRONG> (Thumb, 114 bytes, Stack size 56 bytes, dji_mobile_device.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getEncryption()
</UL>

<P><STRONG><a name="[6ac]"></a>DJI::OSDK::MobileDevice::setFromMSDKCallback(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_mobile_device.o(.text), UNUSED)

<P><STRONG><a name="[3c7]"></a>DJI::OSDK::MutexDefault::MutexDefault()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, dji_memory_default.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Mutex::Mutex__sub_object()
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
</UL>

<P><STRONG><a name="[6ad]"></a>DJI::OSDK::MutexDefault::MutexDefault__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dji_memory_default.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>DJI::OSDK::MutexDefault::~MutexDefault()</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, dji_memory_default.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DJI::OSDK::MutexDefault::~MutexDefault() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MutexPrivate::~MutexPrivate()
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Mutex::~Mutex__sub_object()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MutexDefault::~MutexDefault__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_memory_default.o(.constdata__ZTVN3DJI4OSDK12MutexDefaultE)
</UL>
<P><STRONG><a name="[6ae]"></a>DJI::OSDK::MutexDefault::~MutexDefault__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dji_memory_default.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>DJI::OSDK::MutexDefault::~MutexDefault__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dji_memory_default.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DJI::OSDK::MutexDefault::~MutexDefault__deallocating() &rArr; DJI::OSDK::MutexDefault::~MutexDefault() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MutexDefault::~MutexDefault()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_memory_default.o(.constdata__ZTVN3DJI4OSDK12MutexDefaultE)
</UL>
<P><STRONG><a name="[b9]"></a>DJI::OSDK::MutexDefault::lock()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_memory_default.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dji_memory_default.o(.constdata__ZTVN3DJI4OSDK12MutexDefaultE)
</UL>
<P><STRONG><a name="[ba]"></a>DJI::OSDK::MutexDefault::unlock()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_memory_default.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dji_memory_default.o(.constdata__ZTVN3DJI4OSDK12MutexDefaultE)
</UL>
<P><STRONG><a name="[3cf]"></a>disk_initialize</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = disk_initialize &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[3f8]"></a>disk_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, diskio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[3d0]"></a>disk_read</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = disk_read &rArr; SD_ReadDisk &rArr; SD_ReadMultiBlocks &rArr; SD_DMA_Config &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadDisk
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[3d1]"></a>disk_write</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteDisk
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
</UL>

<P><STRONG><a name="[3d2]"></a>disk_ioctl</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = disk_ioctl &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
</UL>

<P><STRONG><a name="[3d4]"></a>get_fattime</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_fattime &rArr; RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[3d5]"></a>ff_memalloc</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ff_memalloc &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>

<P><STRONG><a name="[3d6]"></a>ff_memfree</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ff_memfree &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>

<P><STRONG><a name="[3e0]"></a>clust2sect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[3db]"></a>get_fat</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
</UL>

<P><STRONG><a name="[3dc]"></a>put_fat</STRONG> (Thumb, 310 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
</UL>

<P><STRONG><a name="[3df]"></a>dir_sdi</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = dir_sdi &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getlabel
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>

<P><STRONG><a name="[185]"></a>f_mount</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = f_mount &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::initFatfs()
</UL>

<P><STRONG><a name="[175]"></a>f_open</STRONG> (Thumb, 384 bytes, Stack size 96 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memfree
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memalloc
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::initFatfs()
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::renewFatfs()
</UL>

<P><STRONG><a name="[3fb]"></a>f_read</STRONG> (Thumb, 448 bytes, Stack size 64 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clmt_clust
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_gets
</UL>

<P><STRONG><a name="[183]"></a>f_write</STRONG> (Thumb, 490 bytes, Stack size 64 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clmt_clust
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::saveAriToSd()
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_putc
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>

<P><STRONG><a name="[3fd]"></a>f_sync</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = f_sync &rArr; sync_fs &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[179]"></a>f_close</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = f_close &rArr; f_sync &rArr; sync_fs &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::waypointUploading()
</UL>

<P><STRONG><a name="[177]"></a>f_lseek</STRONG> (Thumb, 654 bytes, Stack size 48 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clmt_clust
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::renewFatfs()
</UL>

<P><STRONG><a name="[3fe]"></a>f_opendir</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memfree
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memalloc
</UL>

<P><STRONG><a name="[3ff]"></a>f_closedir</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
</UL>

<P><STRONG><a name="[400]"></a>f_readdir</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memfree
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memalloc
</UL>

<P><STRONG><a name="[401]"></a>f_stat</STRONG> (Thumb, 84 bytes, Stack size 72 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memfree
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memalloc
</UL>

<P><STRONG><a name="[402]"></a>f_getfree</STRONG> (Thumb, 258 bytes, Stack size 56 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[403]"></a>f_truncate</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[404]"></a>f_unlink</STRONG> (Thumb, 194 bytes, Stack size 112 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memfree
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memalloc
</UL>

<P><STRONG><a name="[405]"></a>f_mkdir</STRONG> (Thumb, 380 bytes, Stack size 88 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memfree
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memalloc
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>

<P><STRONG><a name="[406]"></a>f_chmod</STRONG> (Thumb, 112 bytes, Stack size 88 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memfree
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memalloc
</UL>

<P><STRONG><a name="[407]"></a>f_utime</STRONG> (Thumb, 110 bytes, Stack size 80 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memfree
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memalloc
</UL>

<P><STRONG><a name="[408]"></a>f_rename</STRONG> (Thumb, 314 bytes, Stack size 144 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memfree
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memalloc
</UL>

<P><STRONG><a name="[409]"></a>f_getlabel</STRONG> (Thumb, 190 bytes, Stack size 72 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>

<P><STRONG><a name="[40a]"></a>f_setlabel</STRONG> (Thumb, 470 bytes, Stack size 88 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>

<P><STRONG><a name="[40b]"></a>f_mkfs</STRONG> (Thumb, 1570 bytes, Stack size 112 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[40c]"></a>f_gets</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>

<P><STRONG><a name="[40e]"></a>f_putc</STRONG> (Thumb, 64 bytes, Stack size 96 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>

<P><STRONG><a name="[40f]"></a>f_puts</STRONG> (Thumb, 74 bytes, Stack size 96 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>

<P><STRONG><a name="[410]"></a>f_printf</STRONG> (Thumb, 674 bytes, Stack size 160 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>

<P><STRONG><a name="[3f0]"></a>ff_convert</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, cc936.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
</UL>

<P><STRONG><a name="[3e4]"></a>ff_wtoupper</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, cc936.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
</UL>

<P><STRONG><a name="[411]"></a>ackTools::ackTools()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, acktool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ackTools::ackTools() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::init()
</UL>

<P><STRONG><a name="[6af]"></a>ackTools::ackTools__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, acktool.o(.text), UNUSED)

<P><STRONG><a name="[412]"></a>ackTools::~ackTools()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, acktool.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>

<P><STRONG><a name="[6b0]"></a>ackTools::~ackTools__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, acktool.o(.text), UNUSED)

<P><STRONG><a name="[427]"></a>ackTools::setAckCmd(DCommand)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, acktool.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::setPutUp(DCommand)
</UL>

<P><STRONG><a name="[41e]"></a>ackTools::setAckRep(Eresponse)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, acktool.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::clearResponse()
</UL>

<P><STRONG><a name="[43d]"></a>ackTools::verifyAck()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, acktool.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::connect()
</UL>

<P><STRONG><a name="[413]"></a>isCRC(unsigned char*, unsigned short, unsigned short)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = isCRC(unsigned char*, unsigned short, unsigned short) &rArr; getCRC(unsigned char*, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCRC(unsigned char*, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::verifyData()
</UL>

<P><STRONG><a name="[415]"></a>UartBuffer::ariInit()</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = UartBuffer::ariInit() &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::init()
</UL>

<P><STRONG><a name="[416]"></a>UartBuffer::wayInit()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = UartBuffer::wayInit() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::init()
</UL>

<P><STRONG><a name="[417]"></a>UartBuffer::headInit()</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = UartBuffer::headInit() &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::init()
</UL>

<P><STRONG><a name="[418]"></a>UartBuffer::init()</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = UartBuffer::init() &rArr; UartBuffer::headInit() &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::headInit()
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::wayInit()
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::ariInit()
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ackTools::ackTools()
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::UartBuffer()
</UL>

<P><STRONG><a name="[2ae]"></a>UartBuffer::UartBuffer()</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = UartBuffer::UartBuffer() &rArr; UartBuffer::init() &rArr; UartBuffer::headInit() &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::init()
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initUart()
</UL>

<P><STRONG><a name="[6b1]"></a>UartBuffer::UartBuffer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, buffer.o(.text), UNUSED)

<P><STRONG><a name="[295]"></a>UartBuffer::~UartBuffer()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UartBuffer::~UartBuffer() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::~Vehicle()
</UL>

<P><STRONG><a name="[6b2]"></a>UartBuffer::~UartBuffer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, buffer.o(.text), UNUSED)

<P><STRONG><a name="[41c]"></a>UartBuffer::initWapoint()</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::saveWaypoint(void*)
</UL>

<P><STRONG><a name="[41a]"></a>UartBuffer::remove_nm(char*, int, int, unsigned char*)</STRONG> (Thumb, 120 bytes, Stack size 28 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UartBuffer::remove_nm(char*, int, int, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::saveWaypoint(void*)
</UL>

<P><STRONG><a name="[419]"></a>UartBuffer::saveWaypoint(void*)</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = UartBuffer::saveWaypoint(void*) &rArr; UartBuffer::remove_nm(char*, int, int, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list::addNode(NODE*)
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::remove_nm(char*, int, int, unsigned char*)
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::initWapoint()
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::checkDataStream()
</UL>

<P><STRONG><a name="[41d]"></a>UartBuffer::clearResponse()</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UartBuffer::clearResponse()
</UL>
<BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ackTools::setAckRep(Eresponse)
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::verifyData()
</UL>

<P><STRONG><a name="[420]"></a>UartBuffer::executiveCommand()</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::verifyData()
</UL>

<P><STRONG><a name="[41f]"></a>UartBuffer::verifyData()</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = UartBuffer::verifyData() &rArr; isCRC(unsigned char*, unsigned short, unsigned short) &rArr; getCRC(unsigned char*, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::executiveCommand()
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::clearResponse()
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isCRC(unsigned char*, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::checkDataStream()
</UL>

<P><STRONG><a name="[423]"></a>UartBuffer::verifyResponse()</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::verifyHead()
</UL>

<P><STRONG><a name="[422]"></a>UartBuffer::verifyCommand()</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::verifyHead()
</UL>

<P><STRONG><a name="[421]"></a>UartBuffer::verifyHead()</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UartBuffer::verifyHead()
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::verifyCommand()
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::verifyResponse()
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::checkDataStream()
</UL>

<P><STRONG><a name="[424]"></a>UartBuffer::checkDataStream()</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = UartBuffer::checkDataStream() &rArr; UartBuffer::verifyData() &rArr; isCRC(unsigned char*, unsigned short, unsigned short) &rArr; getCRC(unsigned char*, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::verifyHead()
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::verifyData()
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::saveWaypoint(void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::storeDataBuffer(unsigned char)
</UL>

<P><STRONG><a name="[425]"></a>UartBuffer::storeDataBuffer(unsigned char)</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = UartBuffer::storeDataBuffer(unsigned char) &rArr; UartBuffer::checkDataStream() &rArr; UartBuffer::verifyData() &rArr; isCRC(unsigned char*, unsigned short, unsigned short) &rArr; getCRC(unsigned char*, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::checkDataStream()
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::byteHandler(unsigned char)
</UL>

<P><STRONG><a name="[233]"></a>UartBuffer::byteHandler(unsigned char)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = UartBuffer::byteHandler(unsigned char) &rArr; UartBuffer::storeDataBuffer(unsigned char) &rArr; UartBuffer::checkDataStream() &rArr; UartBuffer::verifyData() &rArr; isCRC(unsigned char*, unsigned short, unsigned short) &rArr; getCRC(unsigned char*, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::storeDataBuffer(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[17b]"></a>UartBuffer::getSaveWaypoint()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::waypointUploading()
</UL>

<P><STRONG><a name="[17c]"></a>UartBuffer::getInitWaypoint()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::waypointUploading()
</UL>

<P><STRONG><a name="[171]"></a>UartBuffer::send(USART_TypeDef*, const void*, unsigned char)</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UartBuffer::send(USART_TypeDef*, const void*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::startAri()
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendWaypoint(NODE*)
</UL>

<P><STRONG><a name="[426]"></a>UartBuffer::setPutUp(DCommand)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, buffer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ackTools::setAckCmd(DCommand)
</UL>
<BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::sendCmd(DCommand)
</UL>

<P><STRONG><a name="[428]"></a>UartBuffer::sendDma(void*, unsigned char)</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, buffer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::sendCmd(DCommand)
</UL>

<P><STRONG><a name="[429]"></a>UartBuffer::sendCmd(DCommand)</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, buffer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::sendDma(void*, unsigned char)
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::setPutUp(DCommand)
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::connect()
</UL>

<P><STRONG><a name="[42d]"></a>UartBuffer::saveAriData(unsigned char*)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UartBuffer::saveAriData(unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::ariHandler()
</UL>

<P><STRONG><a name="[42c]"></a>UartBuffer::verifyAri()</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UartBuffer::verifyAri()
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::ariHandler()
</UL>

<P><STRONG><a name="[42b]"></a>UartBuffer::verifyAriHead()</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::ariHandler()
</UL>

<P><STRONG><a name="[42a]"></a>UartBuffer::ariHandler()</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UartBuffer::ariHandler() &rArr; UartBuffer::saveAriData(unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::verifyAriHead()
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::verifyAri()
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::saveAriData(unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::receAir(unsigned char)
</UL>

<P><STRONG><a name="[234]"></a>UartBuffer::receAir(unsigned char)</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = UartBuffer::receAir(unsigned char) &rArr; UartBuffer::ariHandler() &rArr; UartBuffer::saveAriData(unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::ariHandler()
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[182]"></a>UartBuffer::getAri()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::saveAriToSd()
</UL>

<P><STRONG><a name="[188]"></a>UartBuffer::startAri()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UartBuffer::startAri() &rArr; UartBuffer::send(USART_TypeDef*, const void*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::send(USART_TypeDef*, const void*, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18b]"></a>UartBuffer::getCmdFlg()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b3]"></a>UartBuffer::clearCmdFlg()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, buffer.o(.text), UNUSED)

<P><STRONG><a name="[6b4]"></a>UartBuffer::getCommand()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, buffer.o(.text), UNUSED)

<P><STRONG><a name="[189]"></a>UartBuffer::getEError()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18a]"></a>UartBuffer::clearEError()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[43c]"></a>UartBuffer::getAck()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, buffer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::connect()
</UL>

<P><STRONG><a name="[414]"></a>getCRC(unsigned char*, int)</STRONG> (Thumb, 100 bytes, Stack size 28 bytes, crc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = getCRC(unsigned char*, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isCRC(unsigned char*, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[42e]"></a>list::initList()</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, list.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = list::initList() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list::list()
</UL>

<P><STRONG><a name="[2ac]"></a>list::list()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, list.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = list::list() &rArr; list::initList() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list::initList()
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initList()
</UL>

<P><STRONG><a name="[6b5]"></a>list::list__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, list.o(.text), UNUSED)

<P><STRONG><a name="[296]"></a>list::~list()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::~Vehicle()
</UL>

<P><STRONG><a name="[6b6]"></a>list::~list__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, list.o(.text), UNUSED)

<P><STRONG><a name="[41b]"></a>list::addNode(NODE*)</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, list.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = list::addNode(NODE*)
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::saveWaypoint(void*)
</UL>

<P><STRONG><a name="[17d]"></a>list::getNode(unsigned char)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::waypointUploading()
</UL>

<P><STRONG><a name="[42f]"></a>list::removeNode(unsigned char)</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, list.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>

<P><STRONG><a name="[17e]"></a>list::emptyList()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, list.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = list::emptyList() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::waypointUploading()
</UL>

<P><STRONG><a name="[2a8]"></a>Get_Data::Get_Data()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, getdata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMySubscribe()
</UL>

<P><STRONG><a name="[6b7]"></a>Get_Data::Get_Data__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, getdata.o(.text), UNUSED)

<P><STRONG><a name="[430]"></a>Get_Data::~Get_Data()</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, getdata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int)
</UL>

<P><STRONG><a name="[6b8]"></a>Get_Data::~Get_Data__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, getdata.o(.text), UNUSED)

<P><STRONG><a name="[431]"></a>Get_Data::SubscribeBATTERY()</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, getdata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::initPackageFromTopicList(int, int, DJI::OSDK::Telemetry::TopicName*, bool, unsigned short)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeData()
</UL>

<P><STRONG><a name="[432]"></a>Get_Data::SubscribeGPS_FUSED()</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, getdata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::initPackageFromTopicList(int, int, DJI::OSDK::Telemetry::TopicName*, bool, unsigned short)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeData()
</UL>

<P><STRONG><a name="[433]"></a>Get_Data::SubscribeGIMBAL_ANGLES()</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, getdata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::initPackageFromTopicList(int, int, DJI::OSDK::Telemetry::TopicName*, bool, unsigned short)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeData()
</UL>

<P><STRONG><a name="[434]"></a>Get_Data::SubscribeFLIGHT()</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, getdata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::initPackageFromTopicList(int, int, DJI::OSDK::Telemetry::TopicName*, bool, unsigned short)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeData()
</UL>

<P><STRONG><a name="[435]"></a>Get_Data::SubscribeData()</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, getdata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeFLIGHT()
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeGIMBAL_ANGLES()
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeGPS_FUSED()
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeBATTERY()
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[436]"></a>Get_Data::GetGpsData()</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, getdata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)11&rang;()
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[437]"></a>Get_Data::GetBATTERYData()</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, getdata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)30&rang;()
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[439]"></a>Get_Data::GetGIMBALData()</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, getdata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)24&rang;()
</UL>

<P><STRONG><a name="[43a]"></a>Get_Data::GetSTATUS_FLIGHTData()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, getdata.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)26&rang;()
</UL>

<P><STRONG><a name="[2aa]"></a>BasicFunction::BasicFunction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, basicfunction.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initTools()
</UL>

<P><STRONG><a name="[6b9]"></a>BasicFunction::BasicFunction__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basicfunction.o(.text), UNUSED)

<P><STRONG><a name="[297]"></a>BasicFunction::~BasicFunction()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, basicfunction.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::~Vehicle()
</UL>

<P><STRONG><a name="[6ba]"></a>BasicFunction::~BasicFunction__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basicfunction.o(.text), UNUSED)

<P><STRONG><a name="[43b]"></a>BasicFunction::connect()</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, basicfunction.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::getAck()
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::sendCmd(DCommand)
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ackTools::verifyAck()
</UL>

<P><STRONG><a name="[6bb]"></a>BasicFunction::ackCmdSend(DCommand, Response)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, basicfunction.o(.text), UNUSED)

<P><STRONG><a name="[6bc]"></a>BasicFunction::saveAckData(Response)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, basicfunction.o(.text), UNUSED)

<P><STRONG><a name="[440]"></a>BasicFunction::setWaypointInitParameter(UartWayPointInit*, DJI::OSDK::WayPointInitSettings*)</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, basicfunction.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::uploadInfo(UartWayPointInit*)
</UL>

<P><STRONG><a name="[43f]"></a>BasicFunction::setWaypointInitDefaults(DJI::OSDK::WayPointInitSettings*)</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, basicfunction.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::uploadInfo(UartWayPointInit*)
</UL>

<P><STRONG><a name="[43e]"></a>BasicFunction::uploadInfo(UartWayPointInit*)</STRONG> (Thumb, 50 bytes, Stack size 88 bytes, basicfunction.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::init(DJI::OSDK::DJI_MISSION_TYPE, int, void*)
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::setWaypointInitDefaults(DJI::OSDK::WayPointInitSettings*)
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::setWaypointInitParameter(UartWayPointInit*, DJI::OSDK::WayPointInitSettings*)
</UL>

<P><STRONG><a name="[441]"></a>BasicFunction::uploadingWaypoint(DJI::OSDK::WayPointSettings*)</STRONG> (Thumb, 126 bytes, Stack size 56 bytes, basicfunction.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexData(DJI::OSDK::WayPointSettings*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::uploadInfo(NODE*)
</UL>

<P><STRONG><a name="[442]"></a>BasicFunction::setWaypointParameter(NODE*, DJI::OSDK::WayPointSettings*)</STRONG> (Thumb, 398 bytes, Stack size 32 bytes, basicfunction.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
</UL>
<BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::uploadInfo(NODE*)
</UL>

<P><STRONG><a name="[445]"></a>BasicFunction::setWaypointDefaults(DJI::OSDK::WayPointSettings*)</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, basicfunction.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::uploadInfo(NODE*)
</UL>

<P><STRONG><a name="[444]"></a>BasicFunction::uploadInfo(NODE*)</STRONG> (Thumb, 38 bytes, Stack size 104 bytes, basicfunction.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::setWaypointDefaults(DJI::OSDK::WayPointSettings*)
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::setWaypointParameter(NODE*, DJI::OSDK::WayPointSettings*)
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::uploadingWaypoint(DJI::OSDK::WayPointSettings*)
</UL>

<P><STRONG><a name="[446]"></a>__cxa_rethrow</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, arm_exceptions_rethrow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_terminate
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::call_terminate_handler(_Unwind_Control_Block*)
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Activity
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::is_foreign_exception(_Unwind_Control_Block*)
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_RaiseException
</UL>
<BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2 std::uninitialized_copy&lang;DJI::OSDK::WayPointSettings*, DJI::OSDK::WayPointSettings*, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;(T1, T1, T2, T3&)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::push_back(const DJI::OSDK::WayPointSettings&)
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::_C_insert_aux(DJI::OSDK::WayPointSettings*, const DJI::OSDK::WayPointSettings&)
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&, bool)
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer()
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to arm_exceptions_c]::armcpp_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup_rethrow
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
</UL>

<P><STRONG><a name="[83]"></a>__cxa_call_unexpected</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, arm_exceptions_callunex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = __cxa_call_unexpected &rArr; __cxa_type_match &rArr; __derived_to_base_conversion &rArr; [local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) &rArr;  [local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::call_terminate_handler(_Unwind_Control_Block*)
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::unexpected()
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_type_match
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::is_foreign_exception(_Unwind_Control_Block*)
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator ==(const std::type_info&) const
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::~bad_exception()
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::bad_exception()
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::bad_exception(const std::bad_exception&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> unwind_prcommon.o(.text)
</UL>
<P><STRONG><a name="[44e]"></a>__cxa_end_catch</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, arm_exceptions_endcatch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = __cxa_end_catch &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_DeleteException
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::is_foreign_exception(_Unwind_Control_Block*)
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_free_exception
</UL>
<BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_vec_ctor
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup_rethrow
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(const char*, std::__va_list)
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catopen(const char*, int)
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catgets(__rw::__rw_cat*, int, int, const char*)
</UL>

<P><STRONG><a name="[448]"></a>__ARM::call_terminate_handler(_Unwind_Control_Block*)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, arm_exceptions_callterm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::is_foreign_exception(_Unwind_Control_Block*)
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_terminate
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
</UL>

<P><STRONG><a name="[44b]"></a>__cxa_call_terminate</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, arm_exceptions_callterm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = __cxa_call_terminate &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::call_terminate_handler(_Unwind_Control_Block*)
</UL>
<BR>[Called By]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_noexcept_landing
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
</UL>

<P><STRONG><a name="[44c]"></a>__cxa_begin_catch</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, arm_exceptions_begincatch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*)
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::is_foreign_exception(_Unwind_Control_Block*)
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Complete
</UL>
<BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2 std::uninitialized_copy&lang;DJI::OSDK::WayPointSettings*, DJI::OSDK::WayPointSettings*, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;(T1, T1, T2, T3&)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::push_back(const DJI::OSDK::WayPointSettings&)
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::_C_insert_aux(DJI::OSDK::WayPointSettings*, const DJI::OSDK::WayPointSettings&)
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&, bool)
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer()
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_terminate
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_vec_ctor
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to arm_exceptions_c]::armcpp_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup_rethrow
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(const char*, std::__va_list)
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catopen(const char*, int)
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catgets(__rw::__rw_cat*, int, int, const char*)
</UL>

<P><STRONG><a name="[45a]"></a>__cxa_begin_cleanup</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, arm_exceptions_cleanup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = __cxa_begin_cleanup &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*)
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::is_foreign_exception(_Unwind_Control_Block*)
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_cpp_prcommon
</UL>

<P><STRONG><a name="[164]"></a>__ARM_cxa_end_cleanup</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, arm_exceptions_cleanup.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::is_foreign_exception(_Unwind_Control_Block*)
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_free_exception
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_unwind_cpp_pr0</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, unwind_pr0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = __aeabi_unwind_cpp_pr0 &rArr; __ARM_unwind_cpp_prcommon &rArr; __cxa_type_match &rArr; __derived_to_base_conversion &rArr; [local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) &rArr;  [local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_cpp_prcommon
</UL>
<BR>[Address Reference Count : 1]<UL><LI> unwinder.o(.text)
</UL>
<P><STRONG><a name="[89]"></a>__aeabi_unwind_cpp_pr1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, unwind_pr1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = __aeabi_unwind_cpp_pr1 &rArr; __ARM_unwind_cpp_prcommon &rArr; __cxa_type_match &rArr; __derived_to_base_conversion &rArr; [local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) &rArr;  [local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_cpp_prcommon
</UL>
<BR>[Address Reference Count : 1]<UL><LI> unwinder.o(.text)
</UL>
<P><STRONG><a name="[3d3]"></a>__aeabi_ldivmod</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>

<P><STRONG><a name="[4d7]"></a>___aeabi_memcpy$base</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const
</UL>

<P><STRONG><a name="[6bd]"></a>___aeabi_memcpy4$base</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[6be]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[6bf]"></a>___aeabi_memcpy$move</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[6c0]"></a>___aeabi_memcpy4$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[6c1]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[559]"></a>___aeabi_memmove$base</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ___aeabi_memmove$base
</UL>
<BR>[Called By]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[6c2]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[6c3]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[33d]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)24&rang;()
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)27&rang;()
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)26&rang;()
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)11&rang;()
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)0&rang;()
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)4&rang;()
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)23&rang;()
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)25&rang;()
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::cleanUpPackage()
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)30&rang;()
</UL>

<P><STRONG><a name="[6c4]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[6c5]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2de]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::receAir(unsigned char)
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::cbPop(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler*, DJI::OSDK::RecvContainer*)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::storeData(unsigned char)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::prepareDataStream()
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::init(DJI::OSDK::HardDriver*, DJI::OSDK::MMU*, bool)
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::storeDataBuffer(unsigned char)
</UL>

<P><STRONG><a name="[2df]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::recvReqData(DJI::OSDK::OpenHeader*)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::init(DJI::OSDK::HardDriver*, DJI::OSDK::MMU*, bool)
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::cleanUpPackage()
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::saveWaypoint(void*)
</UL>

<P><STRONG><a name="[6c6]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[45d]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[2b6]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersion(int)
</UL>

<P><STRONG><a name="[16b]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u2_printf
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(const char*, std::__va_list)
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_parse_name(__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;&, const char*)
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_base::_C_get_named_init_(const char*)
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const __rw::__rw_locale_imp&, const char*, unsigned)
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
</UL>

<P><STRONG><a name="[2b4]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::emergencyBrake()
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::parseDroneVersionInfo(DJI::OSDK::Version::VersionData&, unsigned char*)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::angularRateAndVertPosCtrl(float, float, float, float)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::flightCtrl(DJI::OSDK::Control::AdvancedCtrlData)
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcoll
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const char*)
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
</UL>

<P><STRONG><a name="[1e0]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getError(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actionMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::ACKHandler(void*)
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::PushDataHandler(void*)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::waitForACK(const unsigned char(&)[2], int)
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetControlMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[29e]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isLegacyM600()
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::isM100()
</UL>

<P><STRONG><a name="[300]"></a>__0sscanf</STRONG> (Thumb, 48 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::transformTwoByte(const char*, unsigned char*)
</UL>

<P><STRONG><a name="[45f]"></a>_scanf_int</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[15d]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, cpp_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_cpp_init$empty
</UL>

<P><STRONG><a name="[194]"></a>__aeabi_atexit</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, aeabi_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_078b5881
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_rwcats_cpp_64e8068e
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>

<P><STRONG><a name="[1a9]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generateWaypointsPolygon(DJI::OSDK::WayPointSettings*, double, int)
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toEulerAngle(void*)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1a4]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localOffsetFromGpsOffset(DJI::OSDK::Vehicle*, DJI::OSDK::Telemetry::Vector3f&, void*, void*)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[466]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[1a5]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runHotpointMission(int)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generateWaypointsPolygon(DJI::OSDK::WayPointSettings*, double, int)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toEulerAngle(void*)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localOffsetFromGpsOffset(DJI::OSDK::Vehicle*, DJI::OSDK::Telemetry::Vector3f&, void*, void*)
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::uploadingWaypoint(DJI::OSDK::WayPointSettings*)
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[1b3]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generateWaypointsPolygon(DJI::OSDK::WayPointSettings*, double, int)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::setWaypointParameter(NODE*, DJI::OSDK::WayPointSettings*)
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[1b6]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runHotpointMission(int)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generateWaypointsPolygon(DJI::OSDK::WayPointSettings*, double, int)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[19f]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gimbalCameraControl()
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayResult(RotationAngle*)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createWaypoints(int, double, float)
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uploadWaypoints(std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;&)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toEulerAngle(void*)
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredTakeOff()
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subscribeToData()
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBroadcastData()
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::setHotPoint(DJI::OSDK::Telemetry::GlobalPosition)
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::startCallback(DJI::OSDK::RecvContainer, void*)
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::operator &lang;&lang;(float)
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::idleVelocityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::uploadingWaypoint(DJI::OSDK::WayPointSettings*)
</UL>

<P><STRONG><a name="[6c7]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[1aa]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toEulerAngle(void*)
</UL>

<P><STRONG><a name="[1a0]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toEulerAngle(void*)
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredTakeOff()
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1a6]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runHotpointMission(int)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toEulerAngle(void*)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localOffsetFromGpsOffset(DJI::OSDK::Vehicle*, DJI::OSDK::Telemetry::Vector3f&, void*, void*)
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[456]"></a>__cxa_free_exception</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, arm_exceptions_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = __cxa_free_exception &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_buffer_free
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_cxa_end_cleanup
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to arm_exceptions_c]::armcpp_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
</UL>

<P><STRONG><a name="[453]"></a>__cxa_allocate_exception</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, arm_exceptions_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::call_terminate_handler(_Unwind_Control_Block*)
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_buffer_allocate
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_new_handler()
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_bad_typeid
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[44f]"></a>std::terminate()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, arm_exceptions_terminate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_cxa_end_cleanup
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::call_terminate_handler(_Unwind_Control_Block*)
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::default_unexpected_handler()
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup_rethrow
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>

<P><STRONG><a name="[46a]"></a>__ARM::same_exceptions_class(const void*, const void*)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, arm_exceptions_support.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*)
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::is_foreign_exception(_Unwind_Control_Block*)
</UL>

<P><STRONG><a name="[449]"></a>__ARM::is_foreign_exception(_Unwind_Control_Block*)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, arm_exceptions_support.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM::is_foreign_exception(_Unwind_Control_Block*)
</UL>
<BR>[Calls]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::same_exceptions_class(const void*, const void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_cleanup
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_cxa_end_cleanup
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::call_terminate_handler(_Unwind_Control_Block*)
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_type_match
</UL>

<P><STRONG><a name="[455]"></a>__cxa_throw</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, arm_exceptions_throw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = __cxa_throw &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_terminate
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Activity
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_RaiseException
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_new_handler()
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_bad_typeid
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[450]"></a>__cxa_type_match</STRONG> (Thumb, 260 bytes, Stack size 48 bytes, arm_exceptions_throw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = __cxa_type_match &rArr; __derived_to_base_conversion &rArr; [local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) &rArr;  [local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_get_typeid
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::is_foreign_exception(_Unwind_Control_Block*)
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator ==(const std::type_info&) const
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator !=(const std::type_info&) const
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__derived_to_base_conversion
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_cpp_prcommon
</UL>

<P><STRONG><a name="[44d]"></a>std::unexpected()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, arm_exceptions_unexpected.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::unexpected() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[81]"></a>__ARM::default_unexpected_handler()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, arm_exceptions_unexpected.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = __ARM::default_unexpected_handler() &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_exceptions_globs.o(.text)
</UL>
<P><STRONG><a name="[458]"></a>__ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*)</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, arm_exceptions_foreign.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::same_exceptions_class(const void*, const void*)
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_cleanup
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>

<P><STRONG><a name="[447]"></a>__cxa_get_globals</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, arm_exceptions_globs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_eh_globals_addr
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_buffer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_cleanup
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_cxa_end_cleanup
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM::call_terminate_handler(_Unwind_Control_Block*)
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::unexpected()
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to arm_exceptions_c]::armcpp_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_free_exception
</UL>

<P><STRONG><a name="[457]"></a>_Unwind_DeleteException</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, unwind_delete.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
</UL>

<P><STRONG><a name="[45b]"></a>__ARM_unwind_cpp_prcommon</STRONG> (Thumb, 1474 bytes, Stack size 96 bytes, unwind_prcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = __ARM_unwind_cpp_prcommon &rArr; __cxa_type_match &rArr; __derived_to_base_conversion &rArr; [local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) &rArr;  [local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_cleanup
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Activity
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to unwind_pr_c]::next_unwind_byte(uwdata*)
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_type_match
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Pop
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Get
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_unwind_cpp_pr1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_unwind_cpp_pr0
</UL>

<P><STRONG><a name="[6c8]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[524]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[45c]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[462]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[6c9]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[463]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[6ca]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[460]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong
</UL>

<P><STRONG><a name="[45e]"></a>__vfscanf_char</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sscanf
</UL>

<P><STRONG><a name="[7e]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 3]<UL><LI> __0sscanf.o(.text)
<LI> strtod.o(.text)
<LI> sscanf.o(.text)
</UL>
<P><STRONG><a name="[7f]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 3]<UL><LI> __0sscanf.o(.text)
<LI> strtod.o(.text)
<LI> sscanf.o(.text)
</UL>
<P><STRONG><a name="[478]"></a>__strtod_int</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, strtod.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
</UL>

<P><STRONG><a name="[6cb]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[461]"></a>__rt_ddtor_pointer_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpp_dtor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[502]"></a>__rt_new_handler_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpp_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>

<P><STRONG><a name="[46e]"></a>__rt_eh_globals_addr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cpp_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>

<P><STRONG><a name="[510]"></a>__rt_SIGPVFN</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cpp_signal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
</UL>

<P><STRONG><a name="[162]"></a>__cxa_finalize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cxa_finalize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_final_cpp$nonempty
</UL>

<P><STRONG><a name="[467]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[6cc]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[465]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[464]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
</UL>

<P><STRONG><a name="[479]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[46f]"></a>__ARM_exceptions_buffer_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, arm_exceptions_mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>

<P><STRONG><a name="[469]"></a>__ARM_exceptions_buffer_allocate</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, arm_exceptions_mem.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
</UL>

<P><STRONG><a name="[468]"></a>__ARM_exceptions_buffer_free</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, arm_exceptions_mem.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_free_exception
</UL>

<P><STRONG><a name="[47a]"></a>__cxa_bad_typeid</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, arm_exceptions_bad_typeid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = __cxa_bad_typeid &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_typeid::~bad_typeid()
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_typeid::bad_typeid()
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_typeid::bad_typeid(const std::bad_typeid&)
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_get_typeid
</UL>

<P><STRONG><a name="[471]"></a>_Unwind_VRS_Set</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, unwinder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Unwind_VRS_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_cpp_prcommon
</UL>

<P><STRONG><a name="[470]"></a>_Unwind_VRS_Get</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, unwinder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Unwind_VRS_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_cpp_prcommon
</UL>

<P><STRONG><a name="[473]"></a>_Unwind_VRS_Pop</STRONG> (Thumb, 272 bytes, Stack size 288 bytes, unwinder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _Unwind_VRS_Pop
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_cpp_prcommon
</UL>

<P><STRONG><a name="[47f]"></a>__ARM_unwind_next_frame</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, unwinder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_VRS_corerestore
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_Resume
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_RaiseException
</UL>

<P><STRONG><a name="[167]"></a>__ARM_Unwind_RaiseException</STRONG> (Thumb, 206 bytes, Stack size 352 bytes, unwinder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Activity
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_next_frame
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_RaiseException
</UL>

<P><STRONG><a name="[168]"></a>__ARM_Unwind_Resume</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, unwinder.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_next_frame
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_VRS_corerestore
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
</UL>

<P><STRONG><a name="[459]"></a>_Unwind_Complete</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, unwinder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Unwind_Complete &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>

<P><STRONG><a name="[15f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[6cd]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[474]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[6ce]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[4ef]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(const char*, std::__va_list)
</UL>

<P><STRONG><a name="[4d3]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(const char*, std::__va_list)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_base::_C_get_named_init_(const char*)
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
</UL>

<P><STRONG><a name="[49d]"></a>strrchr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, strrchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[482]"></a>sscanf</STRONG> (Thumb, 48 bytes, Stack size 72 bytes, sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[475]"></a>__vfscanf</STRONG> (Thumb, 808 bytes, Stack size 88 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[477]"></a>_scanf_real</STRONG> (Thumb, 0 bytes, Stack size 104 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[487]"></a>_scanf_really_real</STRONG> (Thumb, 556 bytes, Stack size 104 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[6cf]"></a>__rt_lib_shutdown_cpp_2</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cpp_final.o(.text), UNUSED)

<P><STRONG><a name="[489]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[48a]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[48b]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[48c]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
</UL>

<P><STRONG><a name="[85]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace_o.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isspace
</UL>
<BR>[Calls]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 2]<UL><LI> scanf_char.o(.text)
<LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[47e]"></a>bsearch</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, bsearch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bsearch
</UL>
<BR>[Called By]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned)
</UL>

<P><STRONG><a name="[4d6]"></a>localeconv</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, localeconv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_base::_C_get_named_init_(const char*)
</UL>

<P><STRONG><a name="[6d0]"></a>____aeabi_memcpy8$ret$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[6d1]"></a>___aeabi_memmove4$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[6d2]"></a>___aeabi_memmove8$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[225]"></a>__aeabi_memcpy</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getGimbal()
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexData(DJI::OSDK::WayPointSettings*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::init(DJI::OSDK::DJI_MISSION_TYPE, int, void*)
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::_C_insert_aux(DJI::OSDK::WayPointSettings*, const DJI::OSDK::WayPointSettings&)
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;DJI::OSDK::WayPointSettings&rang;::construct(DJI::OSDK::WayPointSettings*, const DJI::OSDK::WayPointSettings&)
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getGlobalPosition()
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getQuaternion()
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)11&rang;()
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)0&rang;()
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::processReceivedData(DJI::OSDK::RecvContainer*)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteDisk
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadDisk
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)4&rang;()
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verify(int)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::reset(int)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int, int)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int, int)
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::cbPush(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler, DJI::OSDK::RecvContainer)
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::cbPop(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler*, DJI::OSDK::RecvContainer*)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::send(unsigned char, bool, const unsigned char*, void*, unsigned, int, int, bool, int)
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::ACKHandler(void*)
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::PushDataHandler(void*)
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getLastReceivedFrame()
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::setAccountData(const DJI::OSDK::Vehicle::ActivateData&)
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getAccountData() const
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activateCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersion(int)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::parseDroneVersionInfo(DJI::OSDK::Version::VersionData&, unsigned char*)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, int)
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::releaseCtrlAuthority(int)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::obtainCtrlAuthority(int)
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::getValue(DJI::OSDK::MFIO::CHANNEL, int)
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::setValue(DJI::OSDK::MFIO::CHANNEL, unsigned, int)
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::config(DJI::OSDK::MFIO::MODE, DJI::OSDK::MFIO::CHANNEL, unsigned, unsigned short, int)
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::setData(DJI::OSDK::HotPointSettings*)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::getHotpointSettings(int)
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::getHotpointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::resetYaw(int)
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::updateRadius(float, int)
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::updateYawRate(DJI::OSDK::HotpointMission::YawRate&, int)
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::resume(int)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::pause(int)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::stop(int)
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::start(int)
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::getData() const
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::killSwitch(DJI::OSDK::Control::KillSwitch, int, char*)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::setArm(bool, int)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::action(int, int)
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::readPoll()
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::appHandler(void*)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::allocateACK(DJI::OSDK::OpenHeader*)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::recvReqData(DJI::OSDK::OpenHeader*)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::extractOnePackage(DJI::OSDK::RecvContainer*, DJI::OSDK::SubscriptionPackage*)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::serializePackageInfo(unsigned char*)
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::init(DJI::OSDK::WayPointInitSettings*, int)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::initWayptMission(int, void*)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::initHotptMission(int, void*)
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackOne(DJI::OSDK::DataBroadcast::FLAG, void*, unsigned char*&, unsigned)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setBroadcastFreq(unsigned char*, int)
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getBatteryInfo()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getRTKInfo()
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getGPSInfo()
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getRelativePosition()
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::updateIdleVelocity(float, int)
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::readIdleVelocity(int)
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexData(DJI::OSDK::WayPointSettings*, int)
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::setIndex(DJI::OSDK::WayPointSettings*, unsigned)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getIndexCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getIndex(unsigned char, int)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getWaypointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getWaypointSettings(int)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::resume(int)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::pause(int)
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::stop(int)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::start(int)
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::setInfo(const DJI::OSDK::WayPointInitSettings&)
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)30&rang;()
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::GetBATTERYData()
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::GetGpsData()
</UL>

<P><STRONG><a name="[19e]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gimbalCameraControl()
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runHotpointMission(int)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createWaypoints(int, double, float)
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::emergencyBrake()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::getGlobalPosition()
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredLanding()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredTakeOff()
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subscribeToData()
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBroadcastData()
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlAuthorityMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actionMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removeLeftOverPackages()
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::callbackPoll()
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getLastReceivedFrame()
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::setLastReceivedFrame(DJI::OSDK::RecvContainer)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::parseDroneVersionInfo(DJI::OSDK::Version::VersionData&, unsigned char*)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initGimbal()
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::releaseCtrlAuthority(int)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::obtainCtrlAuthority(int)
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::controlAuthorityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::missionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::getHotpointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::actionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::allocateACK(DJI::OSDK::OpenHeader*)
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::resetCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removeAllExistingPackages()
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::addPackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verifyCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::decodeCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::initWayptMission(int, void*)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::initHotptMission(int, void*)
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::VirtualRC::toVirtualRCData(DJI::OSDK::Telemetry::RC&)
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::VirtualRC::setVRCData(const DJI::OSDK::VirtualRCData&)
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::VirtualRC::getVRCData() const
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::VirtualRC::sendData(DJI::OSDK::VirtualRCData)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::setFrequencyCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::idleVelocityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexDataCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getIndexCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getWaypointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Complete
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_RaiseException
</UL>

<P><STRONG><a name="[35b]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MMU::allocMemory(unsigned short)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::prepareDataStream()
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::shiftDataStream()
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::reuseDataStream()
</UL>

<P><STRONG><a name="[4ab]"></a>memcpy</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const __rw::__rw_locale_imp&, const char*, unsigned)
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[6d3]"></a>memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[4d8]"></a>strxfrm</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, strxfrm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strxfrm
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const
</UL>

<P><STRONG><a name="[48d]"></a>strcoll</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, strcoll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcoll &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const
</UL>

<P><STRONG><a name="[483]"></a>_scanf_longlong</STRONG> (Thumb, 342 bytes, Stack size 56 bytes, _scanf_longlong.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_longlong
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[484]"></a>_scanf_string</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, _scanf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[486]"></a>__aeabi_ul2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[6d4]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[6d5]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[48f]"></a>__new_nothrow(unsigned)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, new_cheapnothrow.o(i._Z13__new_nothrowj))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __new_nothrow(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned, const std::nothrow_t&)
</UL>

<P><STRONG><a name="[9e]"></a>__default_new_handler()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, newhandler.o(i._Z21__default_new_handlerv))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = __default_new_handler() &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::~bad_alloc()
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::bad_alloc()
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::bad_alloc(const std::bad_alloc&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> new.o(i._Znwj)
</UL>
<P><STRONG><a name="[492]"></a>catgets(__rw::__rw_cat*, int, int, const char*)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, rwcats.o(i._Z7catgetsPN4__rw8__rw_catEiiPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = catgets(__rw::__rw_cat*, int, int, const char*) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__catfind(__rw::__rw_cat*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_message(int, int, int) const
</UL>

<P><STRONG><a name="[494]"></a>catopen(const char*, int)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, rwcats.o(i._Z7catopenPKci))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = catopen(const char*, int) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[495]"></a>catclose(__rw::__rw_cat*)</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, rwcats.o(i._Z8catclosePN4__rw8__rw_catE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__catfind(__rw::__rw_cat*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_close(int) const
</UL>

<P><STRONG><a name="[1d5]"></a>RotationAngle::RotationAngle(float, float, float)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cameragimbalsample.o(i._ZN13RotationAngleC1Efff), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gimbalCameraControl()
</UL>

<P><STRONG><a name="[6d6]"></a>RotationAngle::RotationAngle__sub_object(float, float, float)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cameragimbalsample.o(i._ZN13RotationAngleC1Efff), UNUSED)

<P><STRONG><a name="[1d6]"></a>GimbalContainer::GimbalContainer(int, int, int, int, int, bool, bool, bool, RotationAngle, RotationAngle)</STRONG> (Thumb, 96 bytes, Stack size 72 bytes, cameragimbalsample.o(i._ZN15GimbalContainerC1Eiiiiibbb13RotationAngleS0_), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gimbalCameraControl()
</UL>

<P><STRONG><a name="[6d7]"></a>GimbalContainer::GimbalContainer__sub_object(int, int, int, int, int, bool, bool, bool, RotationAngle, RotationAngle)</STRONG> (Thumb, 0 bytes, Stack size 72 bytes, cameragimbalsample.o(i._ZN15GimbalContainerC1Eiiiiibbb13RotationAngleS0_), UNUSED)

<P><STRONG><a name="[b4]"></a>DJI::OSDK::HardDriver::getDeviceStatus()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_hard_driver.o(i._ZN3DJI4OSDK10HardDriver15getDeviceStatusEv))
<BR>[Address Reference Count : 1]<UL><LI> dji_hard_driver.o(.constdata__ZTVN3DJI4OSDK10HardDriverE)
</UL>
<P><STRONG><a name="[b6]"></a>DJI::OSDK::MissionBase::~MissionBase__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dji_hotpoint.o(i._ZN3DJI4OSDK11MissionBaseD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DJI::OSDK::MissionBase::~MissionBase__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionBase::~MissionBase__sub_object()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK11MissionBaseE)
</UL>
<P><STRONG><a name="[b5]"></a>DJI::OSDK::MissionBase::~MissionBase__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_hotpoint.o(i._ZN3DJI4OSDK11MissionBaseD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionBase::~MissionBase__deallocating()
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::~HotpointMission()
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::~WaypointMission()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK11MissionBaseE)
</UL>
<P><STRONG><a name="[3ce]"></a>DJI::OSDK::MutexPrivate::~MutexPrivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_memory_default.o(i._ZN3DJI4OSDK12MutexPrivateD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MutexDefault::~MutexDefault()
</UL>

<P><STRONG><a name="[6d8]"></a>DJI::OSDK::MutexPrivate::~MutexPrivate__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_memory_default.o(i._ZN3DJI4OSDK12MutexPrivateD1Ev), UNUSED)

<P><STRONG><a name="[395]"></a>DJI::OSDK::DataBroadcast::unpackOne(DJI::OSDK::DataBroadcast::FLAG, void*, unsigned char*&, unsigned)</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, dji_broadcast.o(i._ZN3DJI4OSDK13DataBroadcast9unpackOneENS1_4FLAGEPvRPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DJI::OSDK::DataBroadcast::unpackOne(DJI::OSDK::DataBroadcast::FLAG, void*, unsigned char*&, unsigned) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackOldM600Data(DJI::OSDK::RecvContainer*)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackData(DJI::OSDK::RecvContainer*)
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataBroadcast::unpackM100Data(DJI::OSDK::RecvContainer*)
</UL>

<P><STRONG><a name="[4a1]"></a>__rw::__rw_throw(int, ...)</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, rwstdexcept.o(i._ZN4__rw10__rw_throwEiz))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception()
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const char*, int)
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const char*)
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::global(const std::locale&)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_base::_C_get_named_init_(const char*)
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, unsigned, const std::allocator&lang;char&rang;&)
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[4a4]"></a>__rw::__rw_allocate(unsigned, int)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, rwalloc.o(i._ZN4__rw13__rw_allocateEji))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::_C_insert_aux(DJI::OSDK::WayPointSettings*, const DJI::OSDK::WayPointSettings&)
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer()
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
</UL>

<P><STRONG><a name="[4a5]"></a>__rw::__rw_deallocate(void*, unsigned, int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rwalloc.o(i._ZN4__rw15__rw_deallocateEPvji))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;DJI::OSDK::WayPointSettings&rang;::deallocate(DJI::OSDK::WayPointSettings*, unsigned)
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::deallocate(__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rb_tree_node_buffer*, unsigned)
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_deallocate_buffers()
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
</UL>

<P><STRONG><a name="[10d]"></a>__rw::__rw_facet_base::_C_initfacet(const std::locale&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, char.o(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale))
<BR>[Address Reference Count : 3]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
<LI> rwstdexcept.o(.constdata__ZTVNSt6locale5facetE)
<LI> char.o(.constdata__ZTVSt14collate_bynameIcE)
</UL>
<P><STRONG><a name="[4a6]"></a>__rw::__rw_locale_imp::_C_parse_name(__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;&, const char*)</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, vendor.o(i._ZN4__rw15__rw_locale_imp13_C_parse_nameERNS_18__rw_locale_vectorISsEEPKc), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const char*, int)
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const char*)
</UL>

<P><STRONG><a name="[4f7]"></a>__rw::__rw_locale_imp::_C_map_category(int)</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, vendor.o(i._ZN4__rw15__rw_locale_imp15_C_map_categoryEi), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const std::locale&, int)
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const char*, int)
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_remove_facets(int)
</UL>

<P><STRONG><a name="[4aa]"></a>__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_cookie
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
</UL>
<BR>[Called By]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const char*)
</UL>

<P><STRONG><a name="[6d9]"></a>__rw::__rw_locale_imp::__rw_locale_imp__sub_object(const char*, unsigned, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj), UNUSED)

<P><STRONG><a name="[4af]"></a>__rw::__rw_locale_imp::__rw_locale_imp(const __rw::__rw_locale_imp&, const char*, unsigned)</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, locale.o(i._ZN4__rw15__rw_locale_impC1ERKS0_PKcj), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_cookie
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const std::locale&, int)
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const char*, int)
</UL>

<P><STRONG><a name="[6da]"></a>__rw::__rw_locale_imp::__rw_locale_imp__sub_object(const __rw::__rw_locale_imp&, const char*, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, locale.o(i._ZN4__rw15__rw_locale_impC1ERKS0_PKcj), UNUSED)

<P><STRONG><a name="[4b0]"></a>__rw::__rw_locale_imp::~__rw_locale_imp()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, locale.o(i._ZN4__rw15__rw_locale_impD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector()
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector()
</UL>
<BR>[Called By]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const char*)
</UL>

<P><STRONG><a name="[6db]"></a>__rw::__rw_locale_imp::~__rw_locale_imp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, locale.o(i._ZN4__rw15__rw_locale_impD1Ev), UNUSED)

<P><STRONG><a name="[4b3]"></a>__rw::__rw_punct_data&lang;char&rang;::~__rw_punct_data()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, char.o(i._ZN4__rw15__rw_punct_dataIcED1Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
</UL>
<BR>[Called By]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_data&lang;char&rang;::~__rw_numpunct_impl_data()
</UL>

<P><STRONG><a name="[6dc]"></a>__rw::__rw_punct_data&lang;char&rang;::~__rw_punct_data__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, char.o(i._ZN4__rw15__rw_punct_dataIcED1Ev), UNUSED)

<P><STRONG><a name="[4b4]"></a>__rw::__rw_numpunct_impl&lang;char&rang;::~__rw_numpunct_impl()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, char.o(i._ZN4__rw18__rw_numpunct_implIcED1Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_data&lang;char&rang;::~__rw_numpunct_impl_data()
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::~numpunct()
</UL>

<P><STRONG><a name="[6dd]"></a>__rw::__rw_numpunct_impl&lang;char&rang;::~__rw_numpunct_impl__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, char.o(i._ZN4__rw18__rw_numpunct_implIcED1Ev), UNUSED)

<P><STRONG><a name="[19]"></a>__rw::__rw_throw_exception(int, char*)</STRONG> (Thumb, 742 bytes, Stack size 136 bytes, rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = __rw::__rw_throw_exception(int, char*) &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::~bad_exception()
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::bad_exception()
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::bad_exception(const std::bad_exception&)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::~bad_alloc()
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_cast::~bad_cast()
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_cast::bad_cast()
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_cast::bad_cast(const std::bad_cast&)
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::failure(const std::ios_base::failure&)
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::failure(const char*)
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failbit_set::failbit_set(const std::ios_base::failbit_set&)
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::eofbit_set::eofbit_set(const std::ios_base::eofbit_set&)
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::badbit_set::badbit_set(const std::ios_base::badbit_set&)
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::invalid_argument::invalid_argument(const std::invalid_argument&)
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::invalid_argument::invalid_argument(const char*)
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::underflow_error::underflow_error(const std::underflow_error&)
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::underflow_error::underflow_error(const char*)
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::overflow_error::overflow_error(const std::overflow_error&)
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::overflow_error::overflow_error(const char*)
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const std::runtime_error&)
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const char*)
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::out_of_range::out_of_range(const std::out_of_range&)
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::out_of_range::out_of_range(const char*)
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::length_error(const std::length_error&)
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::length_error(const char*)
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::domain_error::domain_error(const std::domain_error&)
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::domain_error::domain_error(const char*)
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::range_error::range_error(const std::range_error&)
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::range_error::range_error(const char*)
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const std::logic_error&)
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const char*)
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception()
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception(const std::exception&)
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::bad_alloc()
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::bad_alloc(const std::bad_alloc&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc.o(.data)
</UL>
<P><STRONG><a name="[4d2]"></a>__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, locale.o(i._ZN4__rw21__rw_use_c_lib_localeC1EPKci))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_base::_C_get_named_init_(const char*)
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const
</UL>

<P><STRONG><a name="[6de]"></a>__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale__sub_object(const char*, int)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, locale.o(i._ZN4__rw21__rw_use_c_lib_localeC1EPKci), UNUSED)

<P><STRONG><a name="[4d4]"></a>__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, char.o(i._ZN4__rw21__rw_use_c_lib_localeD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_base::_C_get_named_init_(const char*)
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const
</UL>

<P><STRONG><a name="[6df]"></a>__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, char.o(i._ZN4__rw21__rw_use_c_lib_localeD1Ev), UNUSED)

<P><STRONG><a name="[4d5]"></a>__rw::__rw_numpunct_impl_base::_C_get_named_init_(const char*)</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, locale.o(i._ZN4__rw23__rw_numpunct_impl_base18_C_get_named_init_EPKc), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localeconv
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
</UL>

<P><STRONG><a name="[4b5]"></a>__rw::__rw_numpunct_impl_data&lang;char&rang;::~__rw_numpunct_impl_data()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, char.o(i._ZN4__rw23__rw_numpunct_impl_dataIcED1Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_punct_data&lang;char&rang;::~__rw_punct_data()
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl&lang;char&rang;::~__rw_numpunct_impl()
</UL>

<P><STRONG><a name="[6e0]"></a>__rw::__rw_numpunct_impl_data&lang;char&rang;::~__rw_numpunct_impl_data__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, char.o(i._ZN4__rw23__rw_numpunct_impl_dataIcED1Ev), UNUSED)

<P><STRONG><a name="[493]"></a>__rw::__catfind(__rw::__rw_cat*)</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rwcats.o(i._ZN4__rw9__catfindEPNS_8__rw_catE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rw::__catfind(__rw::__rw_cat*)
</UL>
<BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catclose(__rw::__rw_cat*)
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catgets(__rw::__rw_cat*, int, int, const char*)
</UL>

<P><STRONG><a name="[af]"></a>STM32F4::getDeviceStatus()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4serialdriver.o(i._ZN7STM32F415getDeviceStatusEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4serialdriver.o(.constdata__ZTV7STM32F4)
</UL>
<P><STRONG><a name="[ab]"></a>STM32F4::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4serialdriver.o(i._ZN7STM32F44initEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4serialdriver.o(.constdata__ZTV7STM32F4)
</UL>
<P><STRONG><a name="[ae]"></a>STM32F4::readall(unsigned char*, unsigned)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4serialdriver.o(i._ZN7STM32F47readallEPhj))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4serialdriver.o(.constdata__ZTV7STM32F4)
</UL>
<P><STRONG><a name="[aa]"></a>STM32F4::~STM32F4__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, stm32f4serialdriver.o(i._ZN7STM32F4D0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = STM32F4::~STM32F4__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4::~STM32F4()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4serialdriver.o(.constdata__ZTV7STM32F4)
</UL>
<P><STRONG><a name="[a9]"></a>STM32F4::~STM32F4()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f4serialdriver.o(i._ZN7STM32F4D1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = STM32F4::~STM32F4()
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HardDriver::~HardDriver__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4::~STM32F4__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4serialdriver.o(.constdata__ZTV7STM32F4)
</UL>
<P><STRONG><a name="[6e1]"></a>STM32F4::~STM32F4__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, stm32f4serialdriver.o(i._ZN7STM32F4D1Ev), UNUSED)

<P><STRONG><a name="[10f]"></a>std::__rw_exception::what() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv))
<BR>[Address Reference Count : 14]<UL><LI> rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
<LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base7failureE)
<LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10badbit_setE)
<LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10eofbit_setE)
<LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base11failbit_setE)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt11logic_error)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt12domain_error)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt16invalid_argument)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt12length_error)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt12out_of_range)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt13runtime_error)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt11range_error)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt14overflow_error)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt15underflow_error)
</UL>
<P><STRONG><a name="[126]"></a>std::collate_byname&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const</STRONG> (Thumb, 154 bytes, Stack size 552 bytes, char.o(i._ZNKSt14collate_bynameIcE10do_compareEPKcS2_S2_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = std::collate_byname&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const &rArr; __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;___aeabi_memcpy$base
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcoll
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt14collate_bynameIcE)
</UL>
<P><STRONG><a name="[127]"></a>std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const</STRONG> (Thumb, 116 bytes, Stack size 288 bytes, char.o(i._ZNKSt14collate_bynameIcE12do_transformEPKcS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, unsigned, const std::allocator&lang;char&rang;&) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;___aeabi_memcpy$base
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strxfrm
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, unsigned, const std::allocator&lang;char&rang;&)
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::begin()
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt14collate_bynameIcE)
</UL>
<P><STRONG><a name="[4db]"></a>std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, messages.o(i._ZNKSt18__rw_messages_base11_C_cat_openERKSsRKSt6locale))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const &rArr; __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned) &rArr; std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catopen(const char*, int)
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[4df]"></a>std::__rw_messages_base::_C_cat_close(int) const</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, messages.o(i._ZNKSt18__rw_messages_base12_C_cat_closeEi), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catclose(__rw::__rw_cat*)
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>

<P><STRONG><a name="[4e1]"></a>std::__rw_messages_base::_C_get_locale(int) const</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, messages.o(i._ZNKSt18__rw_messages_base13_C_get_localeEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = std::__rw_messages_base::_C_get_locale(int) const &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
</UL>

<P><STRONG><a name="[4e2]"></a>std::__rw_messages_base::_C_get_message(int, int, int) const</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, messages.o(i._ZNKSt18__rw_messages_base14_C_get_messageEiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = std::__rw_messages_base::_C_get_message(int, int, int) const &rArr; catgets(__rw::__rw_cat*, int, int, const char*) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catgets(__rw::__rw_cat*, int, int, const char*)
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
</UL>

<P><STRONG><a name="[11a]"></a>std::ctype&lang;char&rang;::do_tolower(char*, const char*) const</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, char.o(i._ZNKSt5ctypeIcE10do_tolowerEPcPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::ctype&lang;char&rang;::do_tolower(char*, const char*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
<LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[11c]"></a>std::ctype&lang;char&rang;::do_tolower(char) const</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, char.o(i._ZNKSt5ctypeIcE10do_tolowerEc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::ctype&lang;char&rang;::do_tolower(char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
<LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[119]"></a>std::ctype&lang;char&rang;::do_toupper(char*, const char*) const</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, char.o(i._ZNKSt5ctypeIcE10do_toupperEPcPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::ctype&lang;char&rang;::do_toupper(char*, const char*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
<LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[11b]"></a>std::ctype&lang;char&rang;::do_toupper(char) const</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, char.o(i._ZNKSt5ctypeIcE10do_toupperEc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::ctype&lang;char&rang;::do_toupper(char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
<LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[4e3]"></a>std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, char.o(i._ZNKSt5ctypeIcE2isENSt10ctype_base4maskEc))
<BR><BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::do_toupper(char) const
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::do_toupper(char*, const char*) const
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::do_tolower(char) const
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::do_tolower(char*, const char*) const
</UL>

<P><STRONG><a name="[4e4]"></a>std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, locale.o(i._ZNKSt6locale13_C_make_facetERKNS_2idEbiPFPN4__rw15__rw_facet_baseEiPKcjE))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(__rw::__rw_locale_imp*)
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
</UL>

<P><STRONG><a name="[4e7]"></a>std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, locale.o(i._ZNKSt6locale16_C_install_facetEPN4__rw15__rw_facet_baseERKNS_2idE))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const &rArr; __rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
</UL>
<BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>

<P><STRONG><a name="[4e8]"></a>std::locale::name() const</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, locale.o(i._ZNKSt6locale4nameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = std::locale::name() const &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_allocate(unsigned, int) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::global(const std::locale&)
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
</UL>

<P><STRONG><a name="[451]"></a>std::type_info::operator ==(const std::type_info&) const</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, type_info_eq.o(i._ZNKSt9type_infoeqERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::type_info::operator ==(const std::type_info&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_type_match
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dynamic_cast
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__derived_to_base_conversion
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*)
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::find_base_class_at_addr(void*, void*, const std::type_info*, const std::type_info*, int*)
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::traverse_base_classes(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::tbc_post_downcast(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::tbc_downcast(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)
</UL>

<P><STRONG><a name="[46c]"></a>std::type_info::operator !=(const std::type_info&) const</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, type_info_ne.o(i._ZNKSt9type_infoneERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::type_info::operator !=(const std::type_info&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_type_match
</UL>

<P><STRONG><a name="[47c]"></a>std::bad_typeid::bad_typeid(const std::bad_typeid&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bad_typeid.o(i._ZNSt10bad_typeidC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_typeid::bad_typeid(const std::bad_typeid&)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception(const std::exception&)
</UL>
<BR>[Called By]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_bad_typeid
</UL>

<P><STRONG><a name="[6e2]"></a>std::bad_typeid::bad_typeid__sub_object(const std::bad_typeid&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_typeid.o(i._ZNSt10bad_typeidC1ERKS_), UNUSED)

<P><STRONG><a name="[47b]"></a>std::bad_typeid::bad_typeid()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bad_typeid.o(i._ZNSt10bad_typeidC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_typeid::bad_typeid()
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_bad_typeid
</UL>

<P><STRONG><a name="[6e3]"></a>std::bad_typeid::bad_typeid__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_typeid.o(i._ZNSt10bad_typeidC1Ev), UNUSED)

<P><STRONG><a name="[113]"></a>std::bad_typeid::~bad_typeid__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bad_typeid.o(i._ZNSt10bad_typeidD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::bad_typeid::~bad_typeid__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_typeid::~bad_typeid()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bad_typeid.o(.constdata__ZTVSt10bad_typeid)
</UL>
<P><STRONG><a name="[86]"></a>std::bad_typeid::~bad_typeid()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bad_typeid.o(i._ZNSt10bad_typeidD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_typeid::~bad_typeid()
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_typeid::~bad_typeid__deallocating()
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_bad_typeid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> arm_exceptions_bad_typeid.o(.text)
<LI> bad_typeid.o(.constdata__ZTVSt10bad_typeid)
</UL>
<P><STRONG><a name="[6e4]"></a>std::bad_typeid::~bad_typeid__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_typeid.o(i._ZNSt10bad_typeidD1Ev), UNUSED)

<P><STRONG><a name="[4a8]"></a>std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, char.o(i._ZNSt11char_traitsIcE4copyEPcPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;___aeabi_memcpy$base
</UL>
<BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_parse_name(__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;&, const char*)
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, unsigned, const std::allocator&lang;char&rang;&)
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::begin()
</UL>

<P><STRONG><a name="[4ba]"></a>std::logic_error::logic_error(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11logic_errorC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = std::logic_error::logic_error(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::invalid_argument::invalid_argument(const char*)
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::out_of_range::out_of_range(const char*)
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::length_error(const char*)
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::domain_error::domain_error(const char*)
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[6e5]"></a>std::logic_error::logic_error__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11logic_errorC1EPKc), UNUSED)

<P><STRONG><a name="[4bc]"></a>std::logic_error::logic_error(const std::logic_error&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11logic_errorC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = std::logic_error::logic_error(const std::logic_error&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const std::__rw_exception&)
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::invalid_argument::invalid_argument(const std::invalid_argument&)
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::out_of_range::out_of_range(const std::out_of_range&)
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::length_error(const std::length_error&)
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::domain_error::domain_error(const std::domain_error&)
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[6e6]"></a>std::logic_error::logic_error__sub_object(const std::logic_error&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11logic_errorC1ERKS_), UNUSED)

<P><STRONG><a name="[114]"></a>std::logic_error::~logic_error__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11logic_errorD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::logic_error::~logic_error__deallocating() &rArr; std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVSt11logic_error)
</UL>
<P><STRONG><a name="[8f]"></a>std::logic_error::~logic_error()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11logic_errorD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::~__rw_exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::invalid_argument::~invalid_argument()
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::out_of_range::~out_of_range()
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::~length_error()
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::domain_error::~domain_error()
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt11logic_error)
</UL>
<P><STRONG><a name="[6e7]"></a>std::logic_error::~logic_error__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11logic_errorD1Ev), UNUSED)

<P><STRONG><a name="[4c7]"></a>std::range_error::range_error(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11range_errorC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = std::range_error::range_error(const char*) &rArr; std::runtime_error::runtime_error(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[6e8]"></a>std::range_error::range_error__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11range_errorC1EPKc), UNUSED)

<P><STRONG><a name="[4c8]"></a>std::range_error::range_error(const std::range_error&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11range_errorC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = std::range_error::range_error(const std::range_error&) &rArr; std::runtime_error::runtime_error(const std::runtime_error&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const std::runtime_error&)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[6e9]"></a>std::range_error::range_error__sub_object(const std::range_error&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11range_errorC1ERKS_), UNUSED)

<P><STRONG><a name="[115]"></a>std::range_error::~range_error__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11range_errorD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::range_error::~range_error__deallocating() &rArr; std::range_error::~range_error() &rArr; std::runtime_error::~runtime_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::range_error::~range_error()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVSt11range_error)
</UL>
<P><STRONG><a name="[95]"></a>std::range_error::~range_error()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11range_errorD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::range_error::~range_error() &rArr; std::runtime_error::~runtime_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::~runtime_error()
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::range_error::~range_error__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt11range_error)
</UL>
<P><STRONG><a name="[6ea]"></a>std::range_error::~range_error__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt11range_errorD1Ev), UNUSED)

<P><STRONG><a name="[4eb]"></a>std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, char.o(i._ZNSt12ctype_bynameIcE17_C_get_mask_tableEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*) &rArr; __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
</UL>
<BR>[Called By]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
</UL>

<P><STRONG><a name="[4ec]"></a>std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, char.o(i._ZNSt12ctype_bynameIcEC1EPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned) &rArr; std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*) &rArr; __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[6eb]"></a>std::ctype_byname&lang;char&rang;::ctype_byname__sub_object(const char*, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, char.o(i._ZNSt12ctype_bynameIcEC1EPKcj), UNUSED)

<P><STRONG><a name="[117]"></a>std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, char.o(i._ZNSt12ctype_bynameIcED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating() &rArr; std::ctype_byname&lang;char&rang;::~ctype_byname() &rArr; std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::~ctype_byname()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[116]"></a>std::ctype_byname&lang;char&rang;::~ctype_byname()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, char.o(i._ZNSt12ctype_bynameIcED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::ctype_byname&lang;char&rang;::~ctype_byname() &rArr; std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype()
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[6ec]"></a>std::ctype_byname&lang;char&rang;::~ctype_byname__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, char.o(i._ZNSt12ctype_bynameIcED1Ev), UNUSED)

<P><STRONG><a name="[4bd]"></a>std::domain_error::domain_error(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12domain_errorC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = std::domain_error::domain_error(const char*) &rArr; std::logic_error::logic_error(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[6ed]"></a>std::domain_error::domain_error__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12domain_errorC1EPKc), UNUSED)

<P><STRONG><a name="[4be]"></a>std::domain_error::domain_error(const std::domain_error&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12domain_errorC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = std::domain_error::domain_error(const std::domain_error&) &rArr; std::logic_error::logic_error(const std::logic_error&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const std::logic_error&)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[6ee]"></a>std::domain_error::domain_error__sub_object(const std::domain_error&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12domain_errorC1ERKS_), UNUSED)

<P><STRONG><a name="[11d]"></a>std::domain_error::~domain_error__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12domain_errorD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::domain_error::~domain_error__deallocating() &rArr; std::domain_error::~domain_error() &rArr; std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::domain_error::~domain_error()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVSt12domain_error)
</UL>
<P><STRONG><a name="[90]"></a>std::domain_error::~domain_error()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12domain_errorD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::domain_error::~domain_error() &rArr; std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error()
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::domain_error::~domain_error__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt12domain_error)
</UL>
<P><STRONG><a name="[6ef]"></a>std::domain_error::~domain_error__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12domain_errorD1Ev), UNUSED)

<P><STRONG><a name="[4c1]"></a>std::length_error::length_error(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12length_errorC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = std::length_error::length_error(const char*) &rArr; std::logic_error::logic_error(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[6f0]"></a>std::length_error::length_error__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12length_errorC1EPKc), UNUSED)

<P><STRONG><a name="[4c2]"></a>std::length_error::length_error(const std::length_error&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12length_errorC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = std::length_error::length_error(const std::length_error&) &rArr; std::logic_error::logic_error(const std::logic_error&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const std::logic_error&)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[6f1]"></a>std::length_error::length_error__sub_object(const std::length_error&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12length_errorC1ERKS_), UNUSED)

<P><STRONG><a name="[11e]"></a>std::length_error::~length_error__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12length_errorD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::length_error::~length_error__deallocating() &rArr; std::length_error::~length_error() &rArr; std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::~length_error()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVSt12length_error)
</UL>
<P><STRONG><a name="[92]"></a>std::length_error::~length_error()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12length_errorD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::length_error::~length_error() &rArr; std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error()
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::~length_error__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt12length_error)
</UL>
<P><STRONG><a name="[6f2]"></a>std::length_error::~length_error__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12length_errorD1Ev), UNUSED)

<P><STRONG><a name="[4c3]"></a>std::out_of_range::out_of_range(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12out_of_rangeC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = std::out_of_range::out_of_range(const char*) &rArr; std::logic_error::logic_error(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[6f3]"></a>std::out_of_range::out_of_range__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12out_of_rangeC1EPKc), UNUSED)

<P><STRONG><a name="[4c4]"></a>std::out_of_range::out_of_range(const std::out_of_range&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12out_of_rangeC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = std::out_of_range::out_of_range(const std::out_of_range&) &rArr; std::logic_error::logic_error(const std::logic_error&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const std::logic_error&)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[6f4]"></a>std::out_of_range::out_of_range__sub_object(const std::out_of_range&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12out_of_rangeC1ERKS_), UNUSED)

<P><STRONG><a name="[11f]"></a>std::out_of_range::~out_of_range__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12out_of_rangeD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::out_of_range::~out_of_range__deallocating() &rArr; std::out_of_range::~out_of_range() &rArr; std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::out_of_range::~out_of_range()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVSt12out_of_range)
</UL>
<P><STRONG><a name="[93]"></a>std::out_of_range::~out_of_range()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12out_of_rangeD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::out_of_range::~out_of_range() &rArr; std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error()
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::out_of_range::~out_of_range__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt12out_of_range)
</UL>
<P><STRONG><a name="[6f5]"></a>std::out_of_range::~out_of_range__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt12out_of_rangeD1Ev), UNUSED)

<P><STRONG><a name="[454]"></a>std::bad_exception::bad_exception(const std::bad_exception&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bad_exception_cctor.o(i._ZNSt13bad_exceptionC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_exception::bad_exception(const std::bad_exception&)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception(const std::exception&)
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[6f6]"></a>std::bad_exception::bad_exception__sub_object(const std::bad_exception&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_exception_cctor.o(i._ZNSt13bad_exceptionC1ERKS_), UNUSED)

<P><STRONG><a name="[452]"></a>std::bad_exception::bad_exception()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bad_exception_ctor.o(i._ZNSt13bad_exceptionC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_exception::bad_exception()
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[6f7]"></a>std::bad_exception::bad_exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_exception_ctor.o(i._ZNSt13bad_exceptionC1Ev), UNUSED)

<P><STRONG><a name="[120]"></a>std::bad_exception::~bad_exception__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bad_exception_dtor.o(i._ZNSt13bad_exceptionD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::bad_exception::~bad_exception__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::~bad_exception()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bad_exception_dtor.o(.constdata__ZTVSt13bad_exception)
</UL>
<P><STRONG><a name="[7d]"></a>std::bad_exception::~bad_exception()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bad_exception_dtor.o(i._ZNSt13bad_exceptionD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_exception::~bad_exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::~bad_exception__deallocating()
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> arm_exceptions_callunex.o(.text)
<LI> bad_exception_dtor.o(.constdata__ZTVSt13bad_exception)
<LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
</UL>
<P><STRONG><a name="[6f8]"></a>std::bad_exception::~bad_exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_exception_dtor.o(i._ZNSt13bad_exceptionD1Ev), UNUSED)

<P><STRONG><a name="[4c5]"></a>std::runtime_error::runtime_error(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt13runtime_errorC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = std::runtime_error::runtime_error(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::underflow_error::underflow_error(const char*)
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::overflow_error::overflow_error(const char*)
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::range_error::range_error(const char*)
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[6f9]"></a>std::runtime_error::runtime_error__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt13runtime_errorC1EPKc), UNUSED)

<P><STRONG><a name="[4c6]"></a>std::runtime_error::runtime_error(const std::runtime_error&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt13runtime_errorC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = std::runtime_error::runtime_error(const std::runtime_error&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const std::__rw_exception&)
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::underflow_error::underflow_error(const std::underflow_error&)
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::overflow_error::overflow_error(const std::overflow_error&)
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::range_error::range_error(const std::range_error&)
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[6fa]"></a>std::runtime_error::runtime_error__sub_object(const std::runtime_error&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt13runtime_errorC1ERKS_), UNUSED)

<P><STRONG><a name="[121]"></a>std::runtime_error::~runtime_error__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt13runtime_errorD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::runtime_error::~runtime_error__deallocating() &rArr; std::runtime_error::~runtime_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::~runtime_error()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVSt13runtime_error)
</UL>
<P><STRONG><a name="[94]"></a>std::runtime_error::~runtime_error()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt13runtime_errorD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::runtime_error::~runtime_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::~__rw_exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::underflow_error::~underflow_error()
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::overflow_error::~overflow_error()
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::~runtime_error__deallocating()
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::range_error::~range_error()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt13runtime_error)
</UL>
<P><STRONG><a name="[6fb]"></a>std::runtime_error::~runtime_error__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt13runtime_errorD1Ev), UNUSED)

<P><STRONG><a name="[4ee]"></a>std::__rw_exception::_C_vformat(const char*, std::__va_list)</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, rwstdexcept.o(i._ZNSt14__rw_exception10_C_vformatEPKcSt9__va_list), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>

<P><STRONG><a name="[4a3]"></a>std::__rw_exception::_C_vformat(int, std::__va_list)</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, rwstdexcept.o(i._ZNSt14__rw_exception10_C_vformatEiSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>

<P><STRONG><a name="[4bb]"></a>std::__rw_exception::_C_assign(const char*, unsigned)</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, rwstdexcept.o(i._ZNSt14__rw_exception9_C_assignEPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const std::__rw_exception&)
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const char*)
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[4e9]"></a>std::__rw_exception::__rw_exception(const char*)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, rwthrowproc_impl.o(i._ZNSt14__rw_exceptionC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::failure(const char*)
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const char*)
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const char*)
</UL>

<P><STRONG><a name="[6fc]"></a>std::__rw_exception::__rw_exception__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, rwthrowproc_impl.o(i._ZNSt14__rw_exceptionC1EPKc), UNUSED)

<P><STRONG><a name="[4ea]"></a>std::__rw_exception::__rw_exception(const std::__rw_exception&)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rwthrowproc_impl.o(i._ZNSt14__rw_exceptionC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception(const std::exception&)
</UL>
<BR>[Called By]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::failure(const std::ios_base::failure&)
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const std::runtime_error&)
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const std::logic_error&)
</UL>

<P><STRONG><a name="[6fd]"></a>std::__rw_exception::__rw_exception__sub_object(const std::__rw_exception&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, rwthrowproc_impl.o(i._ZNSt14__rw_exceptionC1ERKS_), UNUSED)

<P><STRONG><a name="[4f0]"></a>std::__rw_exception::__rw_exception(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, rwstdexcept.o(i._ZNSt14__rw_exceptionC1ERKSs), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception()
</UL>

<P><STRONG><a name="[6fe]"></a>std::__rw_exception::__rw_exception__sub_object(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, rwstdexcept.o(i._ZNSt14__rw_exceptionC1ERKSs), UNUSED)

<P><STRONG><a name="[4a2]"></a>std::__rw_exception::__rw_exception()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt14__rw_exceptionC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__rw_exception::__rw_exception()
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>

<P><STRONG><a name="[6ff]"></a>std::__rw_exception::__rw_exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt14__rw_exceptionC1Ev), UNUSED)

<P><STRONG><a name="[123]"></a>std::__rw_exception::~__rw_exception__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt14__rw_exceptionD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::__rw_exception::~__rw_exception__deallocating() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::~__rw_exception()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
</UL>
<P><STRONG><a name="[122]"></a>std::__rw_exception::~__rw_exception()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt14__rw_exceptionD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::~__rw_exception__deallocating()
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::~failure()
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::~runtime_error()
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
</UL>
<P><STRONG><a name="[700]"></a>std::__rw_exception::~__rw_exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt14__rw_exceptionD1Ev), UNUSED)

<P><STRONG><a name="[125]"></a>std::collate_byname&lang;char&rang;::~collate_byname__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, char.o(i._ZNSt14collate_bynameIcED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::collate_byname&lang;char&rang;::~collate_byname__deallocating() &rArr; std::collate_byname&lang;char&rang;::~collate_byname() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::~collate_byname()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt14collate_bynameIcE)
</UL>
<P><STRONG><a name="[124]"></a>std::collate_byname&lang;char&rang;::~collate_byname()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, char.o(i._ZNSt14collate_bynameIcED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::collate_byname&lang;char&rang;::~collate_byname() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate&lang;char&rang;::~collate()
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::~collate_byname__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt14collate_bynameIcE)
</UL>
<P><STRONG><a name="[701]"></a>std::collate_byname&lang;char&rang;::~collate_byname__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, char.o(i._ZNSt14collate_bynameIcED1Ev), UNUSED)

<P><STRONG><a name="[4c9]"></a>std::overflow_error::overflow_error(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt14overflow_errorC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = std::overflow_error::overflow_error(const char*) &rArr; std::runtime_error::runtime_error(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[702]"></a>std::overflow_error::overflow_error__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt14overflow_errorC1EPKc), UNUSED)

<P><STRONG><a name="[4ca]"></a>std::overflow_error::overflow_error(const std::overflow_error&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt14overflow_errorC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = std::overflow_error::overflow_error(const std::overflow_error&) &rArr; std::runtime_error::runtime_error(const std::runtime_error&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const std::runtime_error&)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[703]"></a>std::overflow_error::overflow_error__sub_object(const std::overflow_error&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt14overflow_errorC1ERKS_), UNUSED)

<P><STRONG><a name="[129]"></a>std::overflow_error::~overflow_error__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt14overflow_errorD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::overflow_error::~overflow_error__deallocating() &rArr; std::overflow_error::~overflow_error() &rArr; std::runtime_error::~runtime_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::overflow_error::~overflow_error()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVSt14overflow_error)
</UL>
<P><STRONG><a name="[96]"></a>std::overflow_error::~overflow_error()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt14overflow_errorD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::overflow_error::~overflow_error() &rArr; std::runtime_error::~runtime_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::~runtime_error()
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::overflow_error::~overflow_error__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt14overflow_error)
</UL>
<P><STRONG><a name="[704]"></a>std::overflow_error::~overflow_error__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt14overflow_errorD1Ev), UNUSED)

<P><STRONG><a name="[4cb]"></a>std::underflow_error::underflow_error(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt15underflow_errorC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = std::underflow_error::underflow_error(const char*) &rArr; std::runtime_error::runtime_error(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[705]"></a>std::underflow_error::underflow_error__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt15underflow_errorC1EPKc), UNUSED)

<P><STRONG><a name="[4cc]"></a>std::underflow_error::underflow_error(const std::underflow_error&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt15underflow_errorC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = std::underflow_error::underflow_error(const std::underflow_error&) &rArr; std::runtime_error::runtime_error(const std::runtime_error&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::runtime_error(const std::runtime_error&)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[706]"></a>std::underflow_error::underflow_error__sub_object(const std::underflow_error&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt15underflow_errorC1ERKS_), UNUSED)

<P><STRONG><a name="[12a]"></a>std::underflow_error::~underflow_error__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt15underflow_errorD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::underflow_error::~underflow_error__deallocating() &rArr; std::underflow_error::~underflow_error() &rArr; std::runtime_error::~runtime_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::underflow_error::~underflow_error()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVSt15underflow_error)
</UL>
<P><STRONG><a name="[97]"></a>std::underflow_error::~underflow_error()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt15underflow_errorD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::underflow_error::~underflow_error() &rArr; std::runtime_error::~runtime_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::~runtime_error()
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::underflow_error::~underflow_error__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt15underflow_error)
</UL>
<P><STRONG><a name="[707]"></a>std::underflow_error::~underflow_error__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt15underflow_errorD1Ev), UNUSED)

<P><STRONG><a name="[4bf]"></a>std::invalid_argument::invalid_argument(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt16invalid_argumentC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = std::invalid_argument::invalid_argument(const char*) &rArr; std::logic_error::logic_error(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[708]"></a>std::invalid_argument::invalid_argument__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt16invalid_argumentC1EPKc), UNUSED)

<P><STRONG><a name="[4c0]"></a>std::invalid_argument::invalid_argument(const std::invalid_argument&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt16invalid_argumentC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = std::invalid_argument::invalid_argument(const std::invalid_argument&) &rArr; std::logic_error::logic_error(const std::logic_error&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::logic_error(const std::logic_error&)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[709]"></a>std::invalid_argument::invalid_argument__sub_object(const std::invalid_argument&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt16invalid_argumentC1ERKS_), UNUSED)

<P><STRONG><a name="[12b]"></a>std::invalid_argument::~invalid_argument__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt16invalid_argumentD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::invalid_argument::~invalid_argument__deallocating() &rArr; std::invalid_argument::~invalid_argument() &rArr; std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::invalid_argument::~invalid_argument()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVSt16invalid_argument)
</UL>
<P><STRONG><a name="[91]"></a>std::invalid_argument::~invalid_argument()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt16invalid_argumentD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::invalid_argument::~invalid_argument() &rArr; std::logic_error::~logic_error() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error()
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::invalid_argument::~invalid_argument__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVSt16invalid_argument)
</UL>
<P><STRONG><a name="[70a]"></a>std::invalid_argument::~invalid_argument__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt16invalid_argumentD1Ev), UNUSED)

<P><STRONG><a name="[4f2]"></a>std::__rw_messages_base::~__rw_messages_base()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt18__rw_messages_baseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::__rw_messages_base::~__rw_messages_base() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages()
</UL>

<P><STRONG><a name="[70b]"></a>std::__rw_messages_base::~__rw_messages_base__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt18__rw_messages_baseD1Ev), UNUSED)

<P><STRONG><a name="[a7]"></a>std::__rw_open_cat_data::__rw_open_cat_data()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, messages.o(i._ZNSt18__rw_open_cat_dataC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&)
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>
<BR>[Called By]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
</UL>
<P><STRONG><a name="[70c]"></a>std::__rw_open_cat_data::__rw_open_cat_data__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, messages.o(i._ZNSt18__rw_open_cat_dataC1Ev), UNUSED)

<P><STRONG><a name="[a6]"></a>std::__rw_open_cat_data::~__rw_open_cat_data()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, messages.o(i._ZNSt18__rw_open_cat_dataD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = std::__rw_open_cat_data::~__rw_open_cat_data() &rArr; std::locale::~locale() &rArr; __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
</UL>
<BR>[Called By]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
<LI> messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev)
</UL>
<P><STRONG><a name="[70d]"></a>std::__rw_open_cat_data::~__rw_open_cat_data__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, messages.o(i._ZNSt18__rw_open_cat_dataD1Ev), UNUSED)

<P><STRONG><a name="[4f4]"></a>std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, messages.o(i._ZNSt18__rw_open_cat_dataaSERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&) &rArr; std::locale::operator =(const std::locale&) &rArr; __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
</UL>
<BR>[Called By]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
</UL>

<P><STRONG><a name="[364]"></a>std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~map()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dji_ack.o(i._ZNSt3mapIKjPKcSt4lessIS0_ESaISt4pairIS0_S2_EEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~map() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~__rb_tree() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~__rb_tree()
</UL>
<BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetActivationMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetControlMSG(unsigned char, unsigned)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetArmMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMissionMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMFIOMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetSubscribeMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[70e]"></a>std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~map__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dji_ack.o(i._ZNSt3mapIKjPKcSt4lessIS0_ESaISt4pairIS0_S2_EEED1Ev), UNUSED)

<P><STRONG><a name="[118]"></a>std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, char.o(i._ZNSt5ctypeIcE12_C_initfacetERKSt6locale))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = std::ctype&lang;char&rang;::_C_initfacet(const std::locale&) &rArr; std::locale::name() const &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_allocate(unsigned, int) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::name() const
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
<LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[4ed]"></a>std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, char.o(i._ZNSt5ctypeIcEC1EPKNSt10ctype_base4maskEbj))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[70f]"></a>std::ctype&lang;char&rang;::ctype__sub_object(const std::ctype_base::mask*, bool, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, char.o(i._ZNSt5ctypeIcEC1EPKNSt10ctype_base4maskEbj), UNUSED)

<P><STRONG><a name="[12d]"></a>std::ctype&lang;char&rang;::~ctype__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, char.o(i._ZNSt5ctypeIcED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::ctype&lang;char&rang;::~ctype__deallocating() &rArr; std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
</UL>
<P><STRONG><a name="[12c]"></a>std::ctype&lang;char&rang;::~ctype()</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, char.o(i._ZNSt5ctypeIcED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype__deallocating()
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::~ctype_byname()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
</UL>
<P><STRONG><a name="[710]"></a>std::ctype&lang;char&rang;::~ctype__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, char.o(i._ZNSt5ctypeIcED1Ev), UNUSED)

<P><STRONG><a name="[4f6]"></a>std::locale::_C_remove_facets(int)</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, locale.o(i._ZNSt6locale16_C_remove_facetsEi), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_map_category(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const std::locale&, int)
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const char*, int)
</UL>

<P><STRONG><a name="[10c]"></a>std::locale::facet::~facet__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt6locale5facetD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::locale::facet::~facet__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVNSt6locale5facetE)
</UL>
<P><STRONG><a name="[4f8]"></a>std::locale::global(const std::locale&)</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, locale.o(i._ZNSt6locale6globalERKS_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(__rw::__rw_locale_imp*)
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::name() const
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
</UL>

<P><STRONG><a name="[4f9]"></a>std::locale::_C_init()</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, locale.o(i._ZNSt6locale7_C_initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale()
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(__rw::__rw_locale_imp*)
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const char*)
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>

<P><STRONG><a name="[4e0]"></a>std::locale::classic()</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, locale.o(i._ZNSt6locale7classicEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(__rw::__rw_locale_imp*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_locale(int) const
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_close(int) const
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::__rw_open_cat_data()
</UL>

<P><STRONG><a name="[4fa]"></a>std::locale::locale(const char*)</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, locale.o(i._ZNSt6localeC1EPKc), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_parse_name(__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;&, const char*)
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[711]"></a>std::locale::locale__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, locale.o(i._ZNSt6localeC1EPKc), UNUSED)

<P><STRONG><a name="[4e6]"></a>std::locale::locale(__rw::__rw_locale_imp*)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, locale.o(i._ZNSt6localeC1EPN4__rw15__rw_locale_impE))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::global(const std::locale&)
</UL>

<P><STRONG><a name="[712]"></a>std::locale::locale__sub_object(__rw::__rw_locale_imp*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, locale.o(i._ZNSt6localeC1EPN4__rw15__rw_locale_impE), UNUSED)

<P><STRONG><a name="[4f3]"></a>std::locale::locale(const std::locale&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, messages.o(i._ZNSt6localeC1ERKS_))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::__rw_open_cat_data()
</UL>

<P><STRONG><a name="[713]"></a>std::locale::locale__sub_object(const std::locale&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, messages.o(i._ZNSt6localeC1ERKS_), UNUSED)

<P><STRONG><a name="[4fb]"></a>std::locale::locale(const std::locale&, const char*, int)</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, locale.o(i._ZNSt6localeC1ERKS_PKci), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_cookie
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_map_category(int)
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_parse_name(__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;&, const char*)
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector()
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_remove_facets(int)
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const __rw::__rw_locale_imp&, const char*, unsigned)
</UL>

<P><STRONG><a name="[714]"></a>std::locale::locale__sub_object(const std::locale&, const char*, int)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, locale.o(i._ZNSt6localeC1ERKS_PKci), UNUSED)

<P><STRONG><a name="[4fc]"></a>std::locale::locale(const std::locale&, const std::locale&, int)</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, locale.o(i._ZNSt6localeC1ERKS_S1_i), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_map_category(int)
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_remove_facets(int)
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const __rw::__rw_locale_imp&, const char*, unsigned)
</UL>

<P><STRONG><a name="[715]"></a>std::locale::locale__sub_object(const std::locale&, const std::locale&, int)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, locale.o(i._ZNSt6localeC1ERKS_S1_i), UNUSED)

<P><STRONG><a name="[4a0]"></a>std::locale::locale()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, rwstdexcept.o(i._ZNSt6localeC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[716]"></a>std::locale::locale__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, rwstdexcept.o(i._ZNSt6localeC1Ev), UNUSED)

<P><STRONG><a name="[9c]"></a>std::locale::~locale()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, locale.o(i._ZNSt6localeD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = std::locale::~locale() &rArr; __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>
<BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::~__rw_open_cat_data()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> locale.o(i._ZNSt6locale7classicEv)
</UL>
<P><STRONG><a name="[717]"></a>std::locale::~locale__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, locale.o(i._ZNSt6localeD1Ev), UNUSED)

<P><STRONG><a name="[4de]"></a>std::locale::operator =(const std::locale&)</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, locale.o(i._ZNSt6localeaSERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = std::locale::operator =(const std::locale&) &rArr; __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>
<BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_close(int) const
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&)
</UL>

<P><STRONG><a name="[4fd]"></a>std::collate&lang;char&rang;::~collate__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, char.o(i._ZNSt7collateIcED0Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate&lang;char&rang;::~collate()
</UL>

<P><STRONG><a name="[4f1]"></a>std::collate&lang;char&rang;::~collate()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, char.o(i._ZNSt7collateIcED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::collate&lang;char&rang;::~collate()
</UL>
<BR>[Called By]<UL><LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate&lang;char&rang;::~collate__deallocating()
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::~collate_byname()
</UL>

<P><STRONG><a name="[718]"></a>std::collate&lang;char&rang;::~collate__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, char.o(i._ZNSt7collateIcED1Ev), UNUSED)

<P><STRONG><a name="[4b9]"></a>std::bad_cast::bad_cast(const std::bad_cast&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bad_cast.o(i._ZNSt8bad_castC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_cast::bad_cast(const std::bad_cast&)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception(const std::exception&)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[719]"></a>std::bad_cast::bad_cast__sub_object(const std::bad_cast&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_cast.o(i._ZNSt8bad_castC1ERKS_), UNUSED)

<P><STRONG><a name="[4b8]"></a>std::bad_cast::bad_cast()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bad_cast.o(i._ZNSt8bad_castC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_cast::bad_cast()
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[71a]"></a>std::bad_cast::bad_cast__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_cast.o(i._ZNSt8bad_castC1Ev), UNUSED)

<P><STRONG><a name="[12e]"></a>std::bad_cast::~bad_cast__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bad_cast.o(i._ZNSt8bad_castD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::bad_cast::~bad_cast__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_cast::~bad_cast()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bad_cast.o(.constdata__ZTVSt8bad_cast)
</UL>
<P><STRONG><a name="[8e]"></a>std::bad_cast::~bad_cast()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bad_cast.o(i._ZNSt8bad_castD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_cast::~bad_cast()
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_cast::~bad_cast__deallocating()
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> bad_cast.o(.constdata__ZTVSt8bad_cast)
</UL>
<P><STRONG><a name="[71b]"></a>std::bad_cast::~bad_cast__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_cast.o(i._ZNSt8bad_castD1Ev), UNUSED)

<P><STRONG><a name="[4cf]"></a>std::ios_base::badbit_set::badbit_set(const std::ios_base::badbit_set&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10badbit_setC1ERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = std::ios_base::badbit_set::badbit_set(const std::ios_base::badbit_set&) &rArr; std::ios_base::failure::failure(const std::ios_base::failure&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::failure(const std::ios_base::failure&)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[71c]"></a>std::ios_base::badbit_set::badbit_set__sub_object(const std::ios_base::badbit_set&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10badbit_setC1ERKS0_), UNUSED)

<P><STRONG><a name="[10e]"></a>std::ios_base::badbit_set::~badbit_set__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10badbit_setD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::ios_base::badbit_set::~badbit_set__deallocating() &rArr; std::ios_base::badbit_set::~badbit_set() &rArr; std::ios_base::failure::~failure() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::badbit_set::~badbit_set()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10badbit_setE)
</UL>
<P><STRONG><a name="[99]"></a>std::ios_base::badbit_set::~badbit_set()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10badbit_setD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::ios_base::badbit_set::~badbit_set() &rArr; std::ios_base::failure::~failure() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::~failure()
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::badbit_set::~badbit_set__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10badbit_setE)
</UL>
<P><STRONG><a name="[71d]"></a>std::ios_base::badbit_set::~badbit_set__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10badbit_setD1Ev), UNUSED)

<P><STRONG><a name="[4d0]"></a>std::ios_base::eofbit_set::eofbit_set(const std::ios_base::eofbit_set&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10eofbit_setC1ERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = std::ios_base::eofbit_set::eofbit_set(const std::ios_base::eofbit_set&) &rArr; std::ios_base::failure::failure(const std::ios_base::failure&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::failure(const std::ios_base::failure&)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[71e]"></a>std::ios_base::eofbit_set::eofbit_set__sub_object(const std::ios_base::eofbit_set&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10eofbit_setC1ERKS0_), UNUSED)

<P><STRONG><a name="[110]"></a>std::ios_base::eofbit_set::~eofbit_set__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10eofbit_setD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::ios_base::eofbit_set::~eofbit_set__deallocating() &rArr; std::ios_base::eofbit_set::~eofbit_set() &rArr; std::ios_base::failure::~failure() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::eofbit_set::~eofbit_set()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10eofbit_setE)
</UL>
<P><STRONG><a name="[9a]"></a>std::ios_base::eofbit_set::~eofbit_set()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10eofbit_setD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::ios_base::eofbit_set::~eofbit_set() &rArr; std::ios_base::failure::~failure() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::~failure()
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::eofbit_set::~eofbit_set__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base10eofbit_setE)
</UL>
<P><STRONG><a name="[71f]"></a>std::ios_base::eofbit_set::~eofbit_set__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base10eofbit_setD1Ev), UNUSED)

<P><STRONG><a name="[4ce]"></a>std::ios_base::failbit_set::failbit_set(const std::ios_base::failbit_set&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base11failbit_setC1ERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = std::ios_base::failbit_set::failbit_set(const std::ios_base::failbit_set&) &rArr; std::ios_base::failure::failure(const std::ios_base::failure&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::failure(const std::ios_base::failure&)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[720]"></a>std::ios_base::failbit_set::failbit_set__sub_object(const std::ios_base::failbit_set&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base11failbit_setC1ERKS0_), UNUSED)

<P><STRONG><a name="[111]"></a>std::ios_base::failbit_set::~failbit_set__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base11failbit_setD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::ios_base::failbit_set::~failbit_set__deallocating() &rArr; std::ios_base::failbit_set::~failbit_set() &rArr; std::ios_base::failure::~failure() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failbit_set::~failbit_set()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base11failbit_setE)
</UL>
<P><STRONG><a name="[98]"></a>std::ios_base::failbit_set::~failbit_set()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base11failbit_setD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::ios_base::failbit_set::~failbit_set() &rArr; std::ios_base::failure::~failure() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::~failure()
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failbit_set::~failbit_set__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base11failbit_setE)
</UL>
<P><STRONG><a name="[721]"></a>std::ios_base::failbit_set::~failbit_set__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base11failbit_setD1Ev), UNUSED)

<P><STRONG><a name="[4cd]"></a>std::ios_base::failure::failure(const char*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base7failureC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = std::ios_base::failure::failure(const char*) &rArr; std::__rw_exception::__rw_exception(const char*) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[722]"></a>std::ios_base::failure::failure__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base7failureC1EPKc), UNUSED)

<P><STRONG><a name="[4d1]"></a>std::ios_base::failure::failure(const std::ios_base::failure&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base7failureC1ERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = std::ios_base::failure::failure(const std::ios_base::failure&) &rArr; std::__rw_exception::__rw_exception(const std::__rw_exception&) &rArr; std::__rw_exception::_C_assign(const char*, unsigned) &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const std::__rw_exception&)
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failbit_set::failbit_set(const std::ios_base::failbit_set&)
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::eofbit_set::eofbit_set(const std::ios_base::eofbit_set&)
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::badbit_set::badbit_set(const std::ios_base::badbit_set&)
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[723]"></a>std::ios_base::failure::failure__sub_object(const std::ios_base::failure&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base7failureC1ERKS0_), UNUSED)

<P><STRONG><a name="[112]"></a>std::ios_base::failure::~failure__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base7failureD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::ios_base::failure::~failure__deallocating() &rArr; std::ios_base::failure::~failure() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::~failure()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base7failureE)
</UL>
<P><STRONG><a name="[9b]"></a>std::ios_base::failure::~failure()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base7failureD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::ios_base::failure::~failure() &rArr; std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::~__rw_exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::~failure__deallocating()
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failbit_set::~failbit_set()
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::eofbit_set::~eofbit_set()
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::badbit_set::~badbit_set()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> rwthrowproc_impl.o(.constdata__ZTVNSt8ios_base7failureE)
</UL>
<P><STRONG><a name="[724]"></a>std::ios_base::failure::~failure__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwthrowproc_impl.o(i._ZNSt8ios_base7failureD1Ev), UNUSED)

<P><STRONG><a name="[130]"></a>std::messages&lang;char&rang;::~messages__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt8messagesIcED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = std::messages&lang;char&rang;::~messages__deallocating() &rArr; std::messages&lang;char&rang;::~messages() &rArr; std::__rw_messages_base::~__rw_messages_base() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[12f]"></a>std::messages&lang;char&rang;::~messages()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt8messagesIcED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::messages&lang;char&rang;::~messages() &rArr; std::__rw_messages_base::~__rw_messages_base() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::~__rw_messages_base()
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[725]"></a>std::messages&lang;char&rang;::~messages__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt8messagesIcED1Ev), UNUSED)

<P><STRONG><a name="[4fe]"></a>std::numpunct&lang;char&rang;::~numpunct__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, char.o(i._ZNSt8numpunctIcED0Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::~numpunct()
</UL>

<P><STRONG><a name="[4ff]"></a>std::numpunct&lang;char&rang;::~numpunct()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, char.o(i._ZNSt8numpunctIcED1Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl&lang;char&rang;::~__rw_numpunct_impl()
</UL>
<BR>[Called By]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::~numpunct__deallocating()
</UL>

<P><STRONG><a name="[726]"></a>std::numpunct&lang;char&rang;::~numpunct__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, char.o(i._ZNSt8numpunctIcED1Ev), UNUSED)

<P><STRONG><a name="[491]"></a>std::bad_alloc::bad_alloc(const std::bad_alloc&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bad_alloc_cctor.o(i._ZNSt9bad_allocC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_alloc::bad_alloc(const std::bad_alloc&)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception(const std::exception&)
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_new_handler()
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[727]"></a>std::bad_alloc::bad_alloc__sub_object(const std::bad_alloc&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_alloc_cctor.o(i._ZNSt9bad_allocC1ERKS_), UNUSED)

<P><STRONG><a name="[490]"></a>std::bad_alloc::bad_alloc()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bad_alloc_ctor.o(i._ZNSt9bad_allocC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_alloc::bad_alloc()
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_new_handler()
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[728]"></a>std::bad_alloc::bad_alloc__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_alloc_ctor.o(i._ZNSt9bad_allocC1Ev), UNUSED)

<P><STRONG><a name="[133]"></a>std::bad_alloc::~bad_alloc__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bad_alloc_dtor.o(i._ZNSt9bad_allocD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::bad_alloc::~bad_alloc__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::~bad_alloc()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bad_alloc_dtor.o(.constdata__ZTVSt9bad_alloc)
</UL>
<P><STRONG><a name="[8b]"></a>std::bad_alloc::~bad_alloc()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bad_alloc_dtor.o(i._ZNSt9bad_allocD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::bad_alloc::~bad_alloc()
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::~bad_alloc__deallocating()
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_new_handler()
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> bad_alloc_dtor.o(.constdata__ZTVSt9bad_alloc)
<LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
<LI> newhandler.o(i._Z21__default_new_handlerv)
</UL>
<P><STRONG><a name="[729]"></a>std::bad_alloc::~bad_alloc__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, bad_alloc_dtor.o(i._ZNSt9bad_allocD1Ev), UNUSED)

<P><STRONG><a name="[4b7]"></a>std::exception::exception(const std::exception&)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, exception_cctor.o(i._ZNSt9exceptionC1ERKS_))
<BR><BR>[Called By]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::bad_exception(const std::bad_exception&)
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_cast::bad_cast(const std::bad_cast&)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_typeid::bad_typeid(const std::bad_typeid&)
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const std::__rw_exception&)
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::bad_alloc(const std::bad_alloc&)
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[72a]"></a>std::exception::exception__sub_object(const std::exception&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, exception_cctor.o(i._ZNSt9exceptionC1ERKS_), UNUSED)

<P><STRONG><a name="[4b6]"></a>std::exception::exception()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, exception_ctor.o(i._ZNSt9exceptionC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::bad_exception()
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception()
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_cast::bad_cast()
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_typeid::bad_typeid()
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception(const char*)
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::bad_alloc()
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
</UL>

<P><STRONG><a name="[72b]"></a>std::exception::exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, exception_ctor.o(i._ZNSt9exceptionC1Ev), UNUSED)

<P><STRONG><a name="[b]"></a>std::exception::~exception()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, exception_dtor.o(i._ZNSt9exceptionD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> exception_dtor.o(.constdata__ZTVSt9exception)
<LI> rwthrowproc_impl.o(i._ZN4__rw20__rw_throw_exceptionEiPc)
</UL>
<P><STRONG><a name="[72c]"></a>std::exception::~exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, exception_dtor.o(i._ZNSt9exceptionD1Ev), UNUSED)

<P><STRONG><a name="[4dc]"></a>std::__rw_get_cats()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, messages.o(i._ZSt13__rw_get_catsv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__rw_get_cats() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_message(int, int, int) const
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_locale(int) const
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_close(int) const
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[1b7]"></a>std::abs(double)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, flightcontrolsample.o(i._ZSt3absd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
</UL>

<P><STRONG><a name="[a2]"></a>operator delete[] (void*)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, array_del.o(i._ZdaPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::~Vehicle()
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::~UartBuffer()
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::~OpenProtocol()
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::allocateDataBuffer()
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::clearDataBuffer()
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::~WaypointMission()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::~__rw_exception()
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(const char*, std::__va_list)
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector()
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception(int, char*)
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector()
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype()
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cxa_vec_new.o(i.__cxa_vec_new)
</UL>
<P><STRONG><a name="[18e]"></a>operator delete (void*)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, delete.o(i._ZdlPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list::emptyList()
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::~Vehicle()
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::droneInit()
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_deallocate(void*, unsigned, int)
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::~UartBuffer()
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionBase::~MissionBase__deallocating()
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::~HotpointMission__deallocating()
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HardDriver::~HardDriver__deallocating()
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::~OpenProtocol__deallocating()
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::~OpenProtocol()
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list::removeNode(unsigned char)
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ackTools::~ackTools()
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MutexDefault::~MutexDefault__deallocating()
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MutexDefault::~MutexDefault()
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::~ProtocolBase__deallocating()
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::~Singleton__deallocating()
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::~Log__deallocating()
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Thread::~Thread__deallocating()
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ThreadAbstract::~ThreadAbstract__deallocating()
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Mutex::~Mutex__deallocating()
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::STM32F4DataGuard::~STM32F4DataGuard__deallocating()
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F4::~STM32F4__deallocating()
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::~WaypointMission__deallocating()
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::~bad_exception__deallocating()
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_alloc::~bad_alloc__deallocating()
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages__deallocating()
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::facet::~facet__deallocating()
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::~__rw_exception__deallocating()
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_cast::~bad_cast__deallocating()
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_typeid::~bad_typeid__deallocating()
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failure::~failure__deallocating()
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::failbit_set::~failbit_set__deallocating()
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::eofbit_set::~eofbit_set__deallocating()
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::badbit_set::~badbit_set__deallocating()
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::invalid_argument::~invalid_argument__deallocating()
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::underflow_error::~underflow_error__deallocating()
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::overflow_error::~overflow_error__deallocating()
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::runtime_error::~runtime_error__deallocating()
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::out_of_range::~out_of_range__deallocating()
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::length_error::~length_error__deallocating()
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::domain_error::~domain_error__deallocating()
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::range_error::~range_error__deallocating()
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::logic_error::~logic_error__deallocating()
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catclose(__rw::__rw_cat*)
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catopen(const char*, int)
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const char*)
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::~numpunct__deallocating()
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate&lang;char&rang;::~collate__deallocating()
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype__deallocating()
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::~collate_byname__deallocating()
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()
</UL>

<P><STRONG><a name="[501]"></a>operator delete (void*, const std::nothrow_t&)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, deletenothrow.o(i._ZdlPvRKSt9nothrow_t), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[284]"></a>operator new[] (unsigned)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, array_new.o(i._Znaj))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::mandatorySetUp()
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::init(DJI::OSDK::HardDriver*, DJI::OSDK::MMU*, bool)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::allocateDataBuffer()
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::headInit()
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::ariInit()
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::setIndex(DJI::OSDK::WayPointSettings*, unsigned)
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_assign(const char*, unsigned)
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(const char*, std::__va_list)
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_rwcats_cpp_64e8068e
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_base::_C_get_named_init_(const char*)
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const __rw::__rw_locale_imp&, const char*, unsigned)
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const
</UL>

<P><STRONG><a name="[1ba]"></a>operator new(unsigned)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, new.o(i._Znwj))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_new_handler_addr
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___23_FlightControlSample_cpp_8e9053dd
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___22_CameraGimbalSample_cpp_2ed0a8e0
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___17_MissionSample_cpp_105bd650
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_TelemetrySample_cpp_d62fb3f4
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_MobileSample_cpp_0cb23d9d
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initSubscriber()
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initUart()
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initList()
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initTools()
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMySubscribe()
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::mandatorySetUp()
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initOpenProtocol()
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___15_dji_vehicle_cpp_8f4cafc0
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___23_dji_mission_manager_cpp_d61cd15c
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___12_dji_mfio_cpp_c2ebea95
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_dji_hotpoint_cpp_f4e83e9b
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_dji_hard_driver_cpp_df62f7f1
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___15_dji_control_cpp_aae34645
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::PlatformManager::addThreadHandle()
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::PlatformManager::addHardDriver(unsigned char, const char*, unsigned)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::init(DJI::OSDK::HardDriver*, DJI::OSDK::MMU*, bool)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_dji_open_protocol_cpp_81b2a1ff
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___11_dji_ack_cpp_0a38b940
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___20_dji_subscription_cpp_e3250e60
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___28_dji_mobile_communication_cpp_a0253467
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::initWayptMission(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::initWayptMission(int, void*)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::initHotptMission(int, void*)
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___11_GetData_cpp_8f60a30d
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list::initList()
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::saveWaypoint(void*)
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::init()
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::headInit()
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::wayInit()
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::ariInit()
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ackTools::ackTools()
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_dji_mobile_device_cpp_a8636f60
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_dji_protocol_base_cpp_246ea02c
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MutexDefault::MutexDefault()
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___23_dji_circular_buffer_cpp_bdb94397
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_dji_waypoint_cpp_16ca33f4
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catopen(const char*, int)
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const std::locale&, int)
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const char*, int)
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const char*)
</UL>

<P><STRONG><a name="[281]"></a>operator new(unsigned, const std::nothrow_t&)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, new_wrapnothrow.o(i._ZnwjRKSt9nothrow_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = operator new(unsigned, const std::nothrow_t&) &rArr; __new_nothrow(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__new_nothrow(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initVirtualRC()
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initHardSync()
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMissionManager()
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMobileDevice()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMOC()
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMFIO()
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initCamera()
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initControl()
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initBroadcast()
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initGimbal()
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initOpenProtocol()
</UL>

<P><STRONG><a name="[503]"></a>__0fprintf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0fprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[72d]"></a>__1fprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0fprintf), UNUSED)

<P><STRONG><a name="[72e]"></a>__2fprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0fprintf), UNUSED)

<P><STRONG><a name="[72f]"></a>__c89fprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0fprintf), UNUSED)

<P><STRONG><a name="[730]"></a>fprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0fprintf), UNUSED)

<P><STRONG><a name="[505]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[731]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[176]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::droneInit()
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::initFatfs()
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::saveAriToSd()
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::waypointUploading()
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::renewFatfs()
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gimbalCameraControl()
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displayResult(RotationAngle*)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runHotpointMission(int)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runWaypointMission(unsigned char)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createWaypoints(int, double, float)
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uploadWaypoints(std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;&)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredLanding()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredTakeOff()
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subscribeToData()
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBroadcastData()
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::uploadingWaypoint(DJI::OSDK::WayPointSettings*)
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::SubscribeData()
</UL>

<P><STRONG><a name="[732]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[733]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[506]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[734]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[170]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendWaypoint(NODE*)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::saveAriToSd()
</UL>

<P><STRONG><a name="[735]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[736]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[507]"></a>__0vprintf</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, printfa.o(i.__0vprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[737]"></a>__1vprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0vprintf), UNUSED)

<P><STRONG><a name="[738]"></a>__2vprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0vprintf), UNUSED)

<P><STRONG><a name="[3c8]"></a>__c89vprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0vprintf))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::print(const char*, ...)
</UL>

<P><STRONG><a name="[739]"></a>vprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0vprintf), UNUSED)

<P><STRONG><a name="[508]"></a>__0vsnprintf</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[73a]"></a>__1vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[73b]"></a>__2vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[73c]"></a>__c89vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[49b]"></a>vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[509]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[73d]"></a>__1vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[73e]"></a>__2vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[16a]"></a>__c89vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u2_printf
</UL>

<P><STRONG><a name="[73f]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[50a]"></a>__ARM_array_new_general</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, array_new_general.o(i.__ARM_array_new_general))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_vec_new
</UL>

<P><STRONG><a name="[46b]"></a>__ARM_common_get_typeid</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, arm_exceptions_throw.o(i.__ARM_common_get_typeid))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = __ARM_common_get_typeid &rArr; __cxa_bad_typeid &rArr; __cxa_throw &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_bad_typeid
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_type_match
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__derived_to_base_conversion
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*)
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::find_base_class_at_addr(void*, void*, const std::type_info*, const std::type_info*, int*)
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::traverse_base_classes(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)
</UL>

<P><STRONG><a name="[50c]"></a>__ARM_common_noexcept_landing</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, missionsample.o(i.__ARM_common_noexcept_landing), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_terminate
</UL>

<P><STRONG><a name="[515]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[50b]"></a>__ARM_vec_cleanup</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, ARM_vec_cleanup.o(i.__ARM_vec_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = __ARM_vec_cleanup &rArr; __cxa_begin_catch &rArr; __ARM::get_foreign_intermediary(__cxa_exception*, _Unwind_Control_Block*) &rArr; __cxa_allocate_exception &rArr; __ARM::call_terminate_handler(_Unwind_Control_Block*) &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
</UL>
<BR>[Called By]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>

<P><STRONG><a name="[50d]"></a>__ARM_vec_cleanup_rethrow</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, ARM_vec_cleanup_rethrow.o(i.__ARM_vec_cleanup_rethrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_vec_ctor
</UL>

<P><STRONG><a name="[740]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[741]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[4ae]"></a>__aeabi_vec_delete</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, aeabi_vec_delete.o(i.__aeabi_vec_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor_cookie
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector()
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector()
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[350]"></a>__aeabi_vec_dtor</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, aeabi_vec_dtor.o(i.__aeabi_vec_dtor))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup_rethrow
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::~DataSubscription()
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor_cookie
</UL>

<P><STRONG><a name="[50e]"></a>__aeabi_vec_dtor_cookie</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_vec_dtor_cookie.o(i.__aeabi_vec_dtor_cookie))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
</UL>

<P><STRONG><a name="[4ac]"></a>__aeabi_vec_new_cookie</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, aeabi_vec_new_cookie.o(i.__aeabi_vec_new_cookie))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_vec_new
</UL>
<BR>[Called By]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const char*, int)
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const __rw::__rw_locale_imp&, const char*, unsigned)
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[1b9]"></a>__cxa_guard_acquire</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cxa_guard_acquire.o(i.__cxa_guard_acquire))
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___23_FlightControlSample_cpp_8e9053dd
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___22_CameraGimbalSample_cpp_2ed0a8e0
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___17_MissionSample_cpp_105bd650
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_TelemetrySample_cpp_d62fb3f4
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_MobileSample_cpp_0cb23d9d
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___15_dji_vehicle_cpp_8f4cafc0
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___23_dji_mission_manager_cpp_d61cd15c
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___12_dji_mfio_cpp_c2ebea95
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_dji_hotpoint_cpp_f4e83e9b
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___19_dji_hard_driver_cpp_df62f7f1
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___15_dji_control_cpp_aae34645
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_dji_open_protocol_cpp_81b2a1ff
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___11_dji_ack_cpp_0a38b940
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___20_dji_subscription_cpp_e3250e60
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___28_dji_mobile_communication_cpp_a0253467
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___11_GetData_cpp_8f60a30d
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_dji_mobile_device_cpp_a8636f60
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_dji_protocol_base_cpp_246ea02c
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___23_dji_circular_buffer_cpp_bdb94397
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___16_dji_waypoint_cpp_16ca33f4
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>

<P><STRONG><a name="[b3]"></a>__cxa_pure_virtual</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pure_virt.o(i.__cxa_pure_virtual))
<BR><BR>[Calls]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>
<BR>[Address Reference Count : 6]<UL><LI> dji_hard_driver.o(.constdata__ZTVN3DJI4OSDK10HardDriverE)
<LI> dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK6ThreadE)
<LI> dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK14ThreadAbstractE)
<LI> dji_thread_manager.o(.constdata__ZTVN3DJI4OSDK5MutexE)
<LI> dji_hotpoint.o(.constdata__ZTVN3DJI4OSDK11MissionBaseE)
<LI> dji_protocol_base.o(.constdata__ZTVN3DJI4OSDK12ProtocolBaseE)
</UL>
<P><STRONG><a name="[34e]"></a>__cxa_vec_ctor</STRONG> (Thumb, 62 bytes, Stack size 48 bytes, cxa_vec_ctor.o(i.__cxa_vec_ctor), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup_rethrow
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::DataSubscription(DJI::OSDK::Vehicle*)
</UL>

<P><STRONG><a name="[50f]"></a>__cxa_vec_new</STRONG> (Thumb, 18 bytes, Stack size 32 bytes, cxa_vec_new.o(i.__cxa_vec_new))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_cookie
</UL>

<P><STRONG><a name="[46d]"></a>__derived_to_base_conversion</STRONG> (Thumb, 106 bytes, Stack size 72 bytes, rtti.o(i.__derived_to_base_conversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = __derived_to_base_conversion &rArr; [local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) &rArr;  [local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_get_typeid
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator ==(const std::type_info&) const
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*)
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_type_match
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dynamic_cast
</UL>

<P><STRONG><a name="[511]"></a>__dynamic_cast</STRONG> (Thumb, 170 bytes, Stack size 72 bytes, rtti.o(i.__dynamic_cast), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator ==(const std::type_info&) const
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__derived_to_base_conversion
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::find_base_class_at_addr(void*, void*, const std::type_info*, const std::type_info*, int*)
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::traverse_base_classes(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)
</UL>

<P><STRONG><a name="[1ab]"></a>__hardfp_asin</STRONG> (Thumb, 770 bytes, Stack size 88 bytes, asin.o(i.__hardfp_asin), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toEulerAngle(void*)
</UL>

<P><STRONG><a name="[51a]"></a>__hardfp_atan</STRONG> (Thumb, 622 bytes, Stack size 48 bytes, atan.o(i.__hardfp_atan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[1ac]"></a>__hardfp_atan2</STRONG> (Thumb, 432 bytes, Stack size 48 bytes, atan2.o(i.__hardfp_atan2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toEulerAngle(void*)
</UL>

<P><STRONG><a name="[443]"></a>__hardfp_atof</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, atof.o(i.__hardfp_atof), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicFunction::setWaypointParameter(NODE*, DJI::OSDK::WayPointSettings*)
</UL>

<P><STRONG><a name="[1a7]"></a>__hardfp_cos</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, cos.o(i.__hardfp_cos), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generateWaypointsPolygon(DJI::OSDK::WayPointSettings*, double, int)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localOffsetFromGpsOffset(DJI::OSDK::Vehicle*, DJI::OSDK::Telemetry::Vector3f&, void*, void*)
</UL>

<P><STRONG><a name="[500]"></a>__hardfp_fabs</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fabs.o(i.__hardfp_fabs), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::abs(double)
</UL>

<P><STRONG><a name="[1c6]"></a>__hardfp_sin</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, sin.o(i.__hardfp_sin), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generateWaypointsPolygon(DJI::OSDK::WayPointSettings*, double, int)
</UL>

<P><STRONG><a name="[51e]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 938 bytes, Stack size 120 bytes, rred.o(i.__ieee754_rem_pio2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[520]"></a>__kernel_cos</STRONG> (Thumb, 322 bytes, Stack size 64 bytes, cos_i.o(i.__kernel_cos), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[517]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[51f]"></a>__kernel_sin</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, sin_i.o(i.__kernel_sin), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[512]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[51b]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[514]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[516]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[51d]"></a>__read_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__read_errno), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
</UL>

<P><STRONG><a name="[742]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[743]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[744]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[513]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[488]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scanf_fp.o(i._is_digit), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[51c]"></a>atan</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, atan.o(i.atan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[518]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[3c5]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::~CircularBuffer()
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memfree
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*, const std::nothrow_t&)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_free_exception
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Complete
</UL>

<P><STRONG><a name="[3c4]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::CircularBuffer()
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_memalloc
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__new_nothrow(unsigned)
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_RaiseException
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_buffer_init
</UL>

<P><STRONG><a name="[519]"></a>sqrt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, sqrt.o(i.sqrt), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[1b2]"></a>DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)0&rang;()</STRONG> (Thumb, 178 bytes, Stack size 64 bytes, flightcontrolsample.o(t._ZN3DJI4OSDK16DataSubscription8getValueILNS0_9Telemetry9TopicNameE0EEENS3_7TypeMapIXT_EE4typeEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subscribeToData()
</UL>

<P><STRONG><a name="[1b1]"></a>DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)11&rang;()</STRONG> (Thumb, 170 bytes, Stack size 72 bytes, flightcontrolsample.o(t._ZN3DJI4OSDK16DataSubscription8getValueILNS0_9Telemetry9TopicNameE11EEENS3_7TypeMapIXT_EE4typeEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runHotpointMission(int)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createWaypoints(int, double, float)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveByPositionOffset(float, float, float, float, float, float)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subscribeToData()
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::GetGpsData()
</UL>

<P><STRONG><a name="[1f1]"></a>DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)23&rang;()</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, telemetrysample.o(t._ZN3DJI4OSDK16DataSubscription8getValueILNS0_9Telemetry9TopicNameE23EEENS3_7TypeMapIXT_EE4typeEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subscribeToData()
</UL>

<P><STRONG><a name="[1d7]"></a>DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)24&rang;()</STRONG> (Thumb, 178 bytes, Stack size 56 bytes, cameragimbalsample.o(t._ZN3DJI4OSDK16DataSubscription8getValueILNS0_9Telemetry9TopicNameE24EEENS3_7TypeMapIXT_EE4typeEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gimbalCameraControl()
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::GetGIMBALData()
</UL>

<P><STRONG><a name="[2a5]"></a>DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)25&rang;()</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, dji_vehicle.o(t._ZN3DJI4OSDK16DataSubscription8getValueILNS0_9Telemetry9TopicNameE25EEENS3_7TypeMapIXT_EE4typeEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initGimbal()
</UL>

<P><STRONG><a name="[199]"></a>DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)26&rang;()</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, flightcontrolsample.o(t._ZN3DJI4OSDK16DataSubscription8getValueILNS0_9Telemetry9TopicNameE26EEENS3_7TypeMapIXT_EE4typeEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredLanding()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredTakeOff()
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subscribeToData()
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::GetSTATUS_FLIGHTData()
</UL>

<P><STRONG><a name="[19a]"></a>DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)27&rang;()</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, flightcontrolsample.o(t._ZN3DJI4OSDK16DataSubscription8getValueILNS0_9Telemetry9TopicNameE27EEENS3_7TypeMapIXT_EE4typeEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredLanding()
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitoredTakeOff()
</UL>

<P><STRONG><a name="[438]"></a>DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)30&rang;()</STRONG> (Thumb, 170 bytes, Stack size 64 bytes, getdata.o(t._ZN3DJI4OSDK16DataSubscription8getValueILNS0_9Telemetry9TopicNameE30EEENS3_7TypeMapIXT_EE4typeEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Data::GetBATTERYData()
</UL>

<P><STRONG><a name="[1f2]"></a>DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)4&rang;()</STRONG> (Thumb, 170 bytes, Stack size 64 bytes, telemetrysample.o(t._ZN3DJI4OSDK16DataSubscription8getValueILNS0_9Telemetry9TopicNameE4EEENS3_7TypeMapIXT_EE4typeEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getThreadHandle() const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::title(int, const char*, const char*, int)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::getErrorLogState()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;subscribeToData()
</UL>

<P><STRONG><a name="[1e2]"></a>DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::instance()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, flightcontrolsample.o(t._ZN3DJI4OSDK9SingletonINS0_3LogEE8instanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::functionalSetUp()
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)24&rang;()
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::printInfo()
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::init(DJI::OSDK::DJI_MISSION_TYPE, int, void*)
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::emergencyBrake()
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::initPackageFromTopicList(int, int, DJI::OSDK::Telemetry::TopicName*, bool, unsigned short)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int)
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)27&rang;()
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)26&rang;()
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)11&rang;()
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)0&rang;()
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::processReceivedData(DJI::OSDK::RecvContainer*)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)4&rang;()
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)23&rang;()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getErrorCodeMessage(DJI::OSDK::ACK::ErrorCode, const char*)
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileCommunication::sendDataToMSDK(unsigned char*, unsigned char)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlAuthorityMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actionMobileCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verify(int)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::reset(int)
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removeLeftOverPackages()
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackage(int, int)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::startPackage(int, int)
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::CircularBuffer()
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::cbPush(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler, DJI::OSDK::RecvContainer)
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::CircularBuffer::cbPop(DJI::OSDK::CircularBuffer*, DJI::OSDK::VehicleCallBackHandler*, DJI::OSDK::RecvContainer*)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)25&rang;()
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initVirtualRC()
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initHardSync()
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMissionManager()
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMobileDevice()
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMOC()
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMFIO()
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initCamera()
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initControl()
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initBroadcast()
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initSubscriber()
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initFullPlatformSupport()
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::ACKHandler(void*)
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::PushDataHandler(void*)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activateCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getDroneVersion(int)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::parseDroneVersionInfo(DJI::OSDK::Version::VersionData&, unsigned char*)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::activate(DJI::OSDK::Vehicle::ActivateData*, int)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initGimbal()
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::controlAuthorityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::Vehicle(const char*, unsigned, bool, bool)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::mandatorySetUp()
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::initMainReadThread()
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::config(DJI::OSDK::MFIO::MODE, DJI::OSDK::MFIO::CHANNEL, unsigned, unsigned short, int)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::getValueCallback(DJI::OSDK::RecvContainer, void*)
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MFIO::config(DJI::OSDK::MFIO::MODE, DJI::OSDK::MFIO::CHANNEL, unsigned, unsigned short, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::missionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::startCallback(DJI::OSDK::RecvContainer, void*)
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HotpointMission::getHotpointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::HardDriver::displayLog(const char*)
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::killSwitch(DJI::OSDK::Control::KillSwitch, char*, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::killSwitch(DJI::OSDK::Control::KillSwitch, int, char*)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::angularRateAndVertPosCtrl(float, float, float, float)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::flightCtrl(DJI::OSDK::Control::AdvancedCtrlData)
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Control::actionCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::storeData(unsigned char)
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::appHandler(void*)
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::sendData(unsigned char*)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::sendInterface(void*)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::encrypt(unsigned char*, const unsigned char*, unsigned short, unsigned char, unsigned char, unsigned char, unsigned short)
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::sendPoll()
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::freeSession(DJI::OSDK::CMDSession*)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::allocSession(unsigned short, unsigned short)
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::OpenProtocol::allocACK(unsigned short, unsigned short)
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::resetCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removeAllExistingPackages()
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::removePackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::addPackageCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verifyCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::decodeCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::extractOnePackage(DJI::OSDK::RecvContainer*, DJI::OSDK::SubscriptionPackage*)
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::SubscriptionPackage::setTopicList(DJI::OSDK::Telemetry::TopicName*, int, unsigned short)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileCommunication::getDataFromMSDKCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::getHotpt(int)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::getWaypt(int)
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MissionManager::init(DJI::OSDK::DJI_MISSION_TYPE, void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileDevice::sendDataToMSDK(unsigned char*, unsigned char)
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::MobileDevice::getDataFromMSDKCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::idleVelocityCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexData(DJI::OSDK::WayPointSettings*, int)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::uploadIndexDataCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::setIndex(DJI::OSDK::WayPointSettings*, unsigned)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getIndexCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::WaypointMission::getWaypointSettingsCallback(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*)
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetActivationMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetControlMSG(unsigned char, unsigned)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetArmMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMissionMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMFIOMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetSubscribeMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Telemetry::TypeMap&lang;T1&rang;::type DJI::OSDK::DataSubscription::getValue&lang;(DJI::OSDK::Telemetry::TopicName)30&rang;()
</UL>

<P><STRONG><a name="[3c6]"></a>DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::Singleton()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_log.o(t._ZN3DJI4OSDK9SingletonINS0_3LogEEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
</UL>

<P><STRONG><a name="[745]"></a>DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::Singleton__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_log.o(t._ZN3DJI4OSDK9SingletonINS0_3LogEEC1Ev), UNUSED)

<P><STRONG><a name="[10b]"></a>DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::~Singleton__deallocating()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dji_log.o(t._ZN3DJI4OSDK9SingletonINS0_3LogEED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::~Singleton__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::~Singleton()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_log.o(.constdata__ZTVN3DJI4OSDK9SingletonINS0_3LogEEE)
</UL>
<P><STRONG><a name="[10a]"></a>DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::~Singleton()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_log.o(t._ZN3DJI4OSDK9SingletonINS0_3LogEED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::~Singleton__deallocating()
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::~Log()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_log.o(.constdata__ZTVN3DJI4OSDK9SingletonINS0_3LogEEE)
</UL>
<P><STRONG><a name="[746]"></a>DJI::OSDK::Singleton&lang;DJI::OSDK::Log&rang;::~Singleton__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_log.o(t._ZN3DJI4OSDK9SingletonINS0_3LogEED1Ev), UNUSED)

<P><STRONG><a name="[55a]"></a>__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_inc_ref()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, char.o(t._ZN4__rw12__string_refIcSt11char_traitsIcESaIcEE10_C_inc_refEv))
<BR><BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>

<P><STRONG><a name="[540]"></a>__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::__rw_tree_iter(const __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;&)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_ack.o(t._ZN4__rw14__rw_tree_iterISt4pairIKjPKcEiPS5_RS5_NS_17__rw_rb_tree_nodeISaIS5_ES5_S2_NS_11__select1stIS5_S2_EEEEEC1ERKSD_))
<BR><BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::pair&lang;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, bool&rang;::pair(const __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;&, const bool&)
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&)
</UL>

<P><STRONG><a name="[747]"></a>__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::__rw_tree_iter__sub_object(const __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_ack.o(t._ZN4__rw14__rw_tree_iterISt4pairIKjPKcEiPS5_RS5_NS_17__rw_rb_tree_nodeISaIS5_ES5_S2_NS_11__select1stIS5_S2_EEEEEC1ERKSD_), UNUSED)

<P><STRONG><a name="[525]"></a>__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator --()</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, dji_ack.o(t._ZN4__rw14__rw_tree_iterISt4pairIKjPKcEiPS5_RS5_NS_17__rw_rb_tree_nodeISaIS5_ES5_S2_NS_11__select1stIS5_S2_EEEEEmmEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator --()
</UL>
<BR>[Calls]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_parent()
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_right()
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_left()
</UL>
<BR>[Called By]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&)
</UL>

<P><STRONG><a name="[529]"></a>__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator ++()</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, dji_ack.o(t._ZN4__rw14__rw_tree_iterISt4pairIKjPKcEiPS5_RS5_NS_17__rw_rb_tree_nodeISaIS5_ES5_S2_NS_11__select1stIS5_S2_EEEEEppEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator ++()
</UL>
<BR>[Calls]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_parent()
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_right()
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_left()
</UL>
<BR>[Called By]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
</UL>

<P><STRONG><a name="[a8]"></a>__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, rwstdexcept.o(t._ZN4__rw16__rw_facet_makerISt5ctypeIcEE13_C_maker_funcEiPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = __rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned) &rArr; std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned) &rArr; std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*) &rArr; __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(t._ZNKSt8messagesIcE6do_getEiiiRKSs)
</UL>
<P><STRONG><a name="[537]"></a>unsigned __rw::__rw_new_capacity&lang;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&rang;(unsigned, const T1*)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, dji_ack.o(t._ZN4__rw17__rw_new_capacityINS_9__rb_treeIKjSt4pairIS2_PKcENS_11__select1stIS6_S2_EESt4lessIS2_ESaIS6_EEEEEjjPKT_))
<BR><BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer()
</UL>

<P><STRONG><a name="[52a]"></a>__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_maximum(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, dji_ack.o(t._ZN4__rw17__rw_rb_tree_nodeISaISt4pairIKjPKcEES5_S2_NS_11__select1stIS5_S2_EEE10_C_maximumEPS9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_maximum(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
</UL>
<BR>[Calls]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_right()
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::operator =(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&)
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&, bool)
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
</UL>

<P><STRONG><a name="[52b]"></a>__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_minimum(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, dji_ack.o(t._ZN4__rw17__rw_rb_tree_nodeISaISt4pairIKjPKcEES5_S2_NS_11__select1stIS5_S2_EEE10_C_minimumEPS9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_minimum(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
</UL>
<BR>[Calls]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_left()
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::operator =(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&)
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&, bool)
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
</UL>

<P><STRONG><a name="[53d]"></a>__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_key()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dji_ack.o(t._ZN4__rw17__rw_rb_tree_nodeISaISt4pairIKjPKcEES5_S2_NS_11__select1stIS5_S2_EEE6_C_keyEv))
<BR><BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&)
</UL>

<P><STRONG><a name="[528]"></a>__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_left()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_ack.o(t._ZN4__rw17__rw_rb_tree_nodeISaISt4pairIKjPKcEES5_S2_NS_11__select1stIS5_S2_EEE7_C_leftEv))
<BR><BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_leftmost() const
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&)
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_left(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase_leaf(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_minimum(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator ++()
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator --()
</UL>

<P><STRONG><a name="[527]"></a>__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_right()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_ack.o(t._ZN4__rw17__rw_rb_tree_nodeISaISt4pairIKjPKcEES5_S2_NS_11__select1stIS5_S2_EEE8_C_rightEv))
<BR><BR>[Called By]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rightmost() const
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&)
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_left(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase_leaf(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_maximum(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator ++()
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator --()
</UL>

<P><STRONG><a name="[377]"></a>__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_value()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dji_ack.o(t._ZN4__rw17__rw_rb_tree_nodeISaISt4pairIKjPKcEES5_S2_NS_11__select1stIS5_S2_EEE8_C_valueEv))
<BR><BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator -&rang;() const
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_put_node(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, bool)
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[526]"></a>__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_parent()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dji_ack.o(t._ZN4__rw17__rw_rb_tree_nodeISaISt4pairIKjPKcEES5_S2_NS_11__select1stIS5_S2_EEE9_C_parentEv))
<BR><BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_left(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase_leaf(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator ++()
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator --()
</UL>

<P><STRONG><a name="[4e5]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, locale.o(t._ZN4__rw18__rw_locale_vectorIPNS_15__rw_facet_baseEE6resizeEjRKS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = __rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const
</UL>

<P><STRONG><a name="[4b1]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, locale.o(t._ZN4__rw18__rw_locale_vectorIPNS_15__rw_facet_baseEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>

<P><STRONG><a name="[748]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, locale.o(t._ZN4__rw18__rw_locale_vectorIPNS_15__rw_facet_baseEED1Ev), UNUSED)

<P><STRONG><a name="[a5]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwcats.o(t._ZN4__rw18__rw_locale_vectorIPNS_8__rw_catEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwcats.o(i.__sti___10_rwcats_cpp_64e8068e)
</UL>
<P><STRONG><a name="[749]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwcats.o(t._ZN4__rw18__rw_locale_vectorIPNS_8__rw_catEED1Ev), UNUSED)

<P><STRONG><a name="[4b2]"></a>__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, locale.o(t._ZN4__rw18__rw_locale_vectorISsED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const char*, int)
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>

<P><STRONG><a name="[74a]"></a>__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, locale.o(t._ZN4__rw18__rw_locale_vectorISsED1Ev), UNUSED)

<P><STRONG><a name="[4dd]"></a>__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned) &rArr; std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_cookie
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::~__rw_open_cat_data()
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::__rw_open_cat_data()
</UL>
<BR>[Called By]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[9d]"></a>__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor &rArr; __ARM_vec_cleanup_rethrow &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messages.o(i._ZSt13__rw_get_catsv)
</UL>
<P><STRONG><a name="[74b]"></a>__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev), UNUSED)

<P><STRONG><a name="[52c]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE11_C_get_linkEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node()
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&)
</UL>

<P><STRONG><a name="[52e]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&)</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE11_C_get_nodeERKS5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_put_node(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, bool)
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link()
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_value()
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
</UL>
<BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
</UL>

<P><STRONG><a name="[530]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE11_C_get_nodeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link()
</UL>
<BR>[Called By]<UL><LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&, bool)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_init()
</UL>

<P><STRONG><a name="[52f]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_put_node(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, bool)</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE11_C_put_nodeEPNS_17__rw_rb_tree_nodeISA_S5_S1_S7_EEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_put_node(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_value()
</UL>
<BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~__rb_tree()
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&)
</UL>

<P><STRONG><a name="[53c]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_make_iter(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE12_C_make_iterEPNS_17__rw_rb_tree_nodeISA_S5_S1_S7_EE))
<BR><BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::begin()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end()
</UL>

<P><STRONG><a name="[531]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase_leaf(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE13_C_erase_leafEPNS_17__rw_rb_tree_nodeISA_S5_S1_S7_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase_leaf(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
</UL>
<BR>[Calls]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rightmost() const
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_leftmost() const
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_parent()
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_right()
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_left()
</UL>
<BR>[Called By]<UL><LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
</UL>

<P><STRONG><a name="[535]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_left(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE13__rotate_leftEPNS_17__rw_rb_tree_nodeISA_S5_S1_S7_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_left(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
</UL>
<BR>[Calls]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_parent()
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_right()
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_left()
</UL>
<BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
</UL>

<P><STRONG><a name="[536]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE14__rotate_rightEPNS_17__rw_rb_tree_nodeISA_S5_S1_S7_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
</UL>
<BR>[Calls]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_parent()
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_right()
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_left()
</UL>
<BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
</UL>

<P><STRONG><a name="[52d]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer()</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE17_C_add_new_bufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;(const std::allocator&lang;T1&rang;&)
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::deallocate(__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rb_tree_node_buffer*, unsigned)
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;(const std::allocator&lang;T1&rang;&)
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned __rw::__rw_new_capacity&lang;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&rang;(unsigned, const T1*)
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
</UL>
<BR>[Called By]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link()
</UL>

<P><STRONG><a name="[53b]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_deallocate_buffers()</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE21_C_deallocate_buffersEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_deallocate_buffers() &rArr; std::allocator&lang;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::deallocate(__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rb_tree_node_buffer*, unsigned) &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_deallocate(void*, unsigned, int)
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;(const std::allocator&lang;T1&rang;&)
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::deallocate(__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rb_tree_node_buffer*, unsigned)
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;(const std::allocator&lang;T1&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~__rb_tree()
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&, bool)
</UL>

<P><STRONG><a name="[375]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE3endEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end()
</UL>
<BR>[Calls]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_make_iter(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::operator =(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&)
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~__rb_tree()
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[374]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&)</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE4findERS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end()
</UL>
<BR>[Calls]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::less&lang;const unsigned&rang;::operator ()(const unsigned&, const unsigned&) const
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool __rw::operator ==&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end()
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_make_iter(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_right()
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_left()
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_key()
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::__rw_tree_iter(const __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&) const
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[541]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::begin()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE5beginEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::begin() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_leftmost() const
</UL>
<BR>[Calls]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_leftmost() const
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_make_iter(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::operator =(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&)
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~__rb_tree()
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
</UL>

<P><STRONG><a name="[542]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)</STRONG> (Thumb, 1528 bytes, Stack size 56 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE5eraseENS_14__rw_tree_iterIS5_iPS5_RS5_NS_17__rw_rb_tree_nodeISA_S5_S1_S7_EEEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
</UL>
<BR>[Calls]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rightmost() const
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_leftmost() const
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool __rw::operator ==&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end()
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_left(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase_leaf(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_put_node(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, bool)
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_parent()
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_right()
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_left()
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_minimum(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_maximum(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator ++()
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::__rw_tree_iter(const __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
</UL>

<P><STRONG><a name="[543]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)</STRONG> (Thumb, 196 bytes, Stack size 48 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE5eraseENS_14__rw_tree_iterIS5_iPS5_RS5_NS_17__rw_rb_tree_nodeISA_S5_S1_S7_EEEESH_))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
</UL>
<BR>[Calls]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rightmost() const
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_leftmost() const
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool __rw::operator !=&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool __rw::operator ==&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::begin()
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end()
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator ++()
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::__rw_tree_iter(const __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::operator =(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&)
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~__rb_tree()
</UL>

<P><STRONG><a name="[545]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&)</STRONG> (Thumb, 284 bytes, Stack size 64 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE6insertERKS5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::pair&lang;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, bool&rang;::pair(const __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;&, const bool&)
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::less&lang;const unsigned&rang;::operator ()(const unsigned&, const unsigned&) const
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool __rw::operator ==&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::begin()
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_make_iter(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_right()
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_left()
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_key()
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator --()
</UL>
<BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
</UL>

<P><STRONG><a name="[548]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE7_C_copyEPNS_17__rw_rb_tree_nodeISA_S5_S1_S7_EESE_))
<BR><BR>[Stack]<UL><LI>Max Depth = 928 + In Cycle
<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*) &rArr;  __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_parent()
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_value()
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_right()
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_left()
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::operator =(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&)
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&, bool)
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
</UL>

<P><STRONG><a name="[371]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_init()</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE7_C_initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_init() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rightmost() const
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_leftmost() const
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node()
</UL>
<BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[544]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE8_C_eraseEPNS_17__rw_rb_tree_nodeISA_S5_S1_S7_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*) &rArr;  __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_put_node(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, bool)
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_right()
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_left()
</UL>
<BR>[Called By]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
</UL>

<P><STRONG><a name="[546]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&)</STRONG> (Thumb, 714 bytes, Stack size 56 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE9_C_insertEPNS_17__rw_rb_tree_nodeISA_S5_S1_S7_EESE_RKS5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 952<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::less&lang;const unsigned&rang;::operator ()(const unsigned&, const unsigned&) const
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rightmost() const
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_leftmost() const
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_left(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_make_iter(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_parent()
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_right()
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_left()
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_key()
</UL>
<BR>[Called By]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&)
</UL>

<P><STRONG><a name="[549]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&, bool)</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EEC1ERKSB_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 968<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&, bool) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*) &rArr;  __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;::allocator(const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rightmost() const
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_leftmost() const
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_deallocate_buffers()
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node()
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_minimum(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_maximum(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map(const std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&)
</UL>

<P><STRONG><a name="[74c]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree__sub_object(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&, bool)</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EEC1ERKSB_b), UNUSED)

<P><STRONG><a name="[54a]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)</STRONG> (Thumb, 100 bytes, Stack size 64 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EEC1IPKS5_EET_SF_RKS9_bRKSA_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;::allocator(const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_init()
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_deallocate_buffers()
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
</UL>

<P><STRONG><a name="[74d]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree__sub_object&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EEC1IPKS5_EET_SF_RKS9_bRKSA_), UNUSED)

<P><STRONG><a name="[4f5]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~__rb_tree()</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~__rb_tree() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
</UL>
<BR>[Calls]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::begin()
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end()
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_deallocate_buffers()
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_put_node(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~map()
</UL>

<P><STRONG><a name="[74e]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::~__rb_tree__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EED1Ev), UNUSED)

<P><STRONG><a name="[54b]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::operator =(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&)</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, dji_ack.o(t._ZN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EEaSERKSB_))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::operator =(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*) &rArr;  __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rightmost() const
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_leftmost() const
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::begin()
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end()
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_minimum(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_maximum(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::operator =(const std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&)
</UL>

<P><STRONG><a name="[53f]"></a>bool __rw::operator ==&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, dji_ack.o(t._ZN4__rweqISt4pairIKjPKcEiPS5_RS5_S6_S7_NS_17__rw_rb_tree_nodeISaIS5_ES5_S2_NS_11__select1stIS5_S2_EEEEEEbRKNS_14__rw_tree_iterIT_T0_T1_T2_T5_EERKNSD_ISE_SF_T3_T4_SI_EE))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool __rw::operator !=&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&)
</UL>

<P><STRONG><a name="[362]"></a>bool __rw::operator !=&lang;std::pair&lang;const unsigned, const char*&rang;, int, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dji_ack.o(t._ZN4__rwneISt4pairIKjPKcEiPKS5_RS6_S7_S8_NS_17__rw_rb_tree_nodeISaIS5_ES5_S2_NS_11__select1stIS5_S2_EEEEEEbRKNS_14__rw_tree_iterIT_T0_T1_T2_T5_EERKNSE_ISF_SG_T3_T4_SJ_EE))
<BR><BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetActivationMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetControlMSG(unsigned char, unsigned)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetArmMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMissionMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMFIOMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetSubscribeMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[376]"></a>bool __rw::operator !=&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, dji_ack.o(t._ZN4__rwneISt4pairIKjPKcEiPS5_RS5_S6_S7_NS_17__rw_rb_tree_nodeISaIS5_ES5_S2_NS_11__select1stIS5_S2_EEEEEEbRKNS_14__rw_tree_iterIT_T0_T1_T2_T5_EERKNSD_ISE_SF_T3_T4_SI_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bool __rw::operator !=&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool __rw::operator ==&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;(const __rw::__rw_tree_iter&lang;T1, T2, T3, T4, T7&rang;&, const __rw::__rw_tree_iter&lang;T1, T2, T5, T6, T7&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[363]"></a>__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator -&rang;() const</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dji_ack.o(t._ZNK4__rw14__rw_tree_iterISt4pairIKjPKcEiPKS5_RS6_NS_17__rw_rb_tree_nodeISaIS5_ES5_S2_NS_11__select1stIS5_S2_EEEEEptEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, const std::pair&lang;const unsigned, const char*&rang;*, const std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::operator -&rang;() const
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_value()
</UL>
<BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetActivationMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetControlMSG(unsigned char, unsigned)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetArmMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMissionMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMFIOMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetSubscribeMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[54d]"></a>__rw::__rw_collate_data&lang;char&rang;::_C_coll_order(char) const</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, char.o(t._ZNK4__rw17__rw_collate_dataIcE13_C_coll_orderEc), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate&lang;char&rang;::do_transform(const char*, const char*) const
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const
</UL>

<P><STRONG><a name="[533]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_leftmost() const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dji_ack.o(t._ZNK4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE11_C_leftmostEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_leftmost() const
</UL>
<BR>[Calls]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_left()
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::operator =(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&)
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&, bool)
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_init()
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::begin()
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase_leaf(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
</UL>

<P><STRONG><a name="[532]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rightmost() const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dji_ack.o(t._ZNK4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE12_C_rightmostEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rightmost() const
</UL>
<BR>[Calls]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_right()
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::operator =(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&)
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&, bool)
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_init()
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase_leaf(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
</UL>

<P><STRONG><a name="[534]"></a>__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dji_ack.o(t._ZNK4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE7_C_rootEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_root() const
</UL>
<BR>[Calls]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;::_C_parent()
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::operator =(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&)
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&, bool)
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_init()
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::erase(__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&)
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_right(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rotate_left(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_erase_leaf(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*)
</UL>

<P><STRONG><a name="[361]"></a>std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end() const</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dji_ack.o(t._ZNKSt3mapIKjPKcSt4lessIS0_ESaISt4pairIS0_S2_EEE3endEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end() const
</UL>
<BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetActivationMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetControlMSG(unsigned char, unsigned)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetArmMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMissionMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMFIOMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetSubscribeMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[360]"></a>std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&) const</STRONG> (Thumb, 38 bytes, Stack size 40 bytes, dji_ack.o(t._ZNKSt3mapIKjPKcSt4lessIS0_ESaISt4pairIS0_S2_EEE4findERS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&) const &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::end()
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&)
</UL>
<BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetActivationMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetControlMSG(unsigned char, unsigned)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDSetArmMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMissionMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetMFIOMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDSetSubscribeMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCommonErrorCodeMessage(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[53e]"></a>std::less&lang;const unsigned&rang;::operator ()(const unsigned&, const unsigned&) const</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dji_ack.o(t._ZNKSt4lessIKjEclERS0_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::less&lang;const unsigned&rang;::operator ()(const unsigned&, const unsigned&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::find(const unsigned&)
</UL>

<P><STRONG><a name="[55d]"></a>std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::size() const</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, missionsample.o(t._ZNKSt6vectorIN3DJI4OSDK16WayPointSettingsESaIS2_EE4sizeEv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::_C_insert_aux(DJI::OSDK::WayPointSettings*, const DJI::OSDK::WayPointSettings&)
</UL>

<P><STRONG><a name="[55c]"></a>std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::capacity() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, missionsample.o(t._ZNKSt6vectorIN3DJI4OSDK16WayPointSettingsESaIS2_EE8capacityEv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::_C_insert_aux(DJI::OSDK::WayPointSettings*, const DJI::OSDK::WayPointSettings&)
</UL>

<P><STRONG><a name="[54c]"></a>std::collate&lang;char&rang;::do_compare(const char*, const char*, const char*, const char*) const</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, char.o(t._ZNKSt7collateIcE10do_compareEPKcS2_S2_S2_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_collate_data&lang;char&rang;::_C_coll_order(char) const
</UL>

<P><STRONG><a name="[54e]"></a>std::collate&lang;char&rang;::do_transform(const char*, const char*) const</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, char.o(t._ZNKSt7collateIcE12do_transformEPKcS2_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, unsigned, const std::allocator&lang;char&rang;&)
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::begin()
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_collate_data&lang;char&rang;::_C_coll_order(char) const
</UL>

<P><STRONG><a name="[128]"></a>std::collate&lang;char&rang;::do_hash(const char*, const char*) const</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, char.o(t._ZNKSt7collateIcE7do_hashEPKcS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::collate&lang;char&rang;::do_hash(const char*, const char*) const &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt14collate_bynameIcE)
</UL>
<P><STRONG><a name="[132]"></a>std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, rwstdexcept.o(t._ZNKSt8messagesIcE6do_getEiiiRKSs))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_message(int, int, int) const
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_locale(int) const
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[131]"></a>std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rwstdexcept.o(t._ZNKSt8messagesIcE7do_openERKSsRKSt6locale))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const &rArr; std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const &rArr; __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned) &rArr; std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[54f]"></a>std::numpunct&lang;char&rang;::do_grouping() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, char.o(t._ZNKSt8numpunctIcE11do_groupingEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>

<P><STRONG><a name="[550]"></a>std::numpunct&lang;char&rang;::do_truename() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, char.o(t._ZNKSt8numpunctIcE11do_truenameEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>

<P><STRONG><a name="[551]"></a>std::numpunct&lang;char&rang;::do_falsename() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, char.o(t._ZNKSt8numpunctIcE12do_falsenameEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>

<P><STRONG><a name="[552]"></a>std::allocator&lang;DJI::OSDK::WayPointSettings&rang;::deallocate(DJI::OSDK::WayPointSettings*, unsigned)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, missionsample.o(t._ZNSaIN3DJI4OSDK16WayPointSettingsEE10deallocateEPS1_j), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_deallocate(void*, unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::~vector()
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::_C_insert_aux(DJI::OSDK::WayPointSettings*, const DJI::OSDK::WayPointSettings&)
</UL>

<P><STRONG><a name="[553]"></a>std::allocator&lang;DJI::OSDK::WayPointSettings&rang;::construct(DJI::OSDK::WayPointSettings*, const DJI::OSDK::WayPointSettings&)</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, missionsample.o(t._ZNSaIN3DJI4OSDK16WayPointSettingsEE9constructEPS1_RKS1_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2 std::uninitialized_copy&lang;DJI::OSDK::WayPointSettings*, DJI::OSDK::WayPointSettings*, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;(T1, T1, T2, T3&)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::push_back(const DJI::OSDK::WayPointSettings&)
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::_C_insert_aux(DJI::OSDK::WayPointSettings*, const DJI::OSDK::WayPointSettings&)
</UL>

<P><STRONG><a name="[1c3]"></a>std::allocator&lang;DJI::OSDK::WayPointSettings&rang;::allocator(const std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, missionsample.o(t._ZNSaIN3DJI4OSDK16WayPointSettingsEEC1ERKS2_), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generateWaypointsPolygon(DJI::OSDK::WayPointSettings*, double, int)
</UL>

<P><STRONG><a name="[74f]"></a>std::allocator&lang;DJI::OSDK::WayPointSettings&rang;::allocator__sub_object(const std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, missionsample.o(t._ZNSaIN3DJI4OSDK16WayPointSettingsEEC1ERKS2_), UNUSED)

<P><STRONG><a name="[1c2]"></a>std::allocator&lang;DJI::OSDK::WayPointSettings&rang;::allocator()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, missionsample.o(t._ZNSaIN3DJI4OSDK16WayPointSettingsEEC1Ev), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generateWaypointsPolygon(DJI::OSDK::WayPointSettings*, double, int)
</UL>

<P><STRONG><a name="[750]"></a>std::allocator&lang;DJI::OSDK::WayPointSettings&rang;::allocator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, missionsample.o(t._ZNSaIN3DJI4OSDK16WayPointSettingsEEC1Ev), UNUSED)

<P><STRONG><a name="[539]"></a>std::allocator&lang;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;(const std::allocator&lang;T1&rang;&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_ack.o(t._ZNSaIN4__rw17__rw_rb_tree_nodeISaISt4pairIKjPKcEES5_S2_NS_11__select1stIS5_S2_EEEEEC1IS5_EERKSaIT_E))
<BR><BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_deallocate_buffers()
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer()
</UL>

<P><STRONG><a name="[751]"></a>std::allocator&lang;__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::allocator__sub_object&lang;std::pair&lang;const unsigned, const char*&rang;&rang;(const std::allocator&lang;T1&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_ack.o(t._ZNSaIN4__rw17__rw_rb_tree_nodeISaISt4pairIKjPKcEES5_S2_NS_11__select1stIS5_S2_EEEEEC1IS5_EERKSaIT_E), UNUSED)

<P><STRONG><a name="[53a]"></a>std::allocator&lang;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::deallocate(__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rb_tree_node_buffer*, unsigned)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, dji_ack.o(t._ZNSaIN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE22_C_rb_tree_node_bufferEE10deallocateEPSC_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::allocator&lang;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::deallocate(__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rb_tree_node_buffer*, unsigned) &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_deallocate(void*, unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_deallocate_buffers()
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer()
</UL>

<P><STRONG><a name="[538]"></a>std::allocator&lang;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;(const std::allocator&lang;T1&rang;&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_ack.o(t._ZNSaIN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE22_C_rb_tree_node_bufferEEC1IS5_EERKSaIT_E))
<BR><BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_deallocate_buffers()
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer()
</UL>

<P><STRONG><a name="[752]"></a>std::allocator&lang;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_rb_tree_node_buffer&rang;::allocator__sub_object&lang;std::pair&lang;const unsigned, const char*&rang;&rang;(const std::allocator&lang;T1&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_ack.o(t._ZNSaIN4__rw9__rb_treeIKjSt4pairIS1_PKcENS_11__select1stIS5_S1_EESt4lessIS1_ESaIS5_EE22_C_rb_tree_node_bufferEEC1IS5_EERKSaIT_E), UNUSED)

<P><STRONG><a name="[370]"></a>std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;::allocator(const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_ack.o(t._ZNSaISt4pairIKjPKcEEC1ERKS4_))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&, bool)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[753]"></a>std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;::allocator__sub_object(const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_ack.o(t._ZNSaISt4pairIKjPKcEEC1ERKS4_), UNUSED)

<P><STRONG><a name="[35d]"></a>std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;::allocator()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dji_ack.o(t._ZNSaISt4pairIKjPKcEEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createActivateErrorCodeMap()
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createSetControlErrorCodeMap()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode)
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createLegacyTaskErrorCodeMap()
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createTaskErrorCodeMap()
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createSetArmErrorCodeMap()
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createMissionErrorCodeMap()
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createMFIOErrorCodeMap()
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createSubscribeErrorCodeMap()
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createCommonErrorCodeMap()
</UL>

<P><STRONG><a name="[754]"></a>std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;::allocator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_ack.o(t._ZNSaISt4pairIKjPKcEEC1Ev), UNUSED)

<P><STRONG><a name="[4a7]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, locale.o(t._ZNSs11_C_allocateEjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_allocate(unsigned, int) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;const T1& std::max&lang;unsigned&rang;(const T1&, const T1&)
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_parse_name(__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;&, const char*)
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
</UL>

<P><STRONG><a name="[4da]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::begin()</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, char.o(t._ZNSs5beginEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::begin() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate&lang;char&rang;::do_transform(const char*, const char*) const
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const
</UL>

<P><STRONG><a name="[557]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, locale.o(t._ZNSs7replaceEjjPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
</UL>

<P><STRONG><a name="[558]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)</STRONG> (Thumb, 352 bytes, Stack size 48 bytes, char.o(t._ZNSs7replaceEjjPKcjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;___aeabi_memmove$base
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;const T1& std::max&lang;unsigned&rang;(const T1&, const T1&)
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)
</UL>

<P><STRONG><a name="[555]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, char.o(t._ZNSs9_C_getRepEjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_allocate(unsigned, int) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, unsigned, const std::allocator&lang;char&rang;&)
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::begin()
</UL>

<P><STRONG><a name="[556]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, char.o(t._ZNSs9_C_unlinkEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_deallocate(void*, unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::begin()
</UL>

<P><STRONG><a name="[49e]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, locale.o(t._ZNSsC1EPKcRKSaIcE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_allocate(unsigned, int) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::name() const
</UL>

<P><STRONG><a name="[755]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string__sub_object(const char*, const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, locale.o(t._ZNSsC1EPKcRKSaIcE), UNUSED)

<P><STRONG><a name="[4d9]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, unsigned, const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, char.o(t._ZNSsC1EPKcjRKSaIcE))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, unsigned, const std::allocator&lang;char&rang;&) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;const T1& std::max&lang;unsigned&rang;(const T1&, const T1&)
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate&lang;char&rang;::do_transform(const char*, const char*) const
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::do_transform(const char*, const char*) const
</UL>

<P><STRONG><a name="[756]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string__sub_object(const char*, unsigned, const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, char.o(t._ZNSsC1EPKcjRKSaIcE), UNUSED)

<P><STRONG><a name="[48e]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, locale.o(t._ZNSsC1ERKSaIcE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;&lang;Func5&rang;
</UL>

<P><STRONG><a name="[757]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string__sub_object(const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, locale.o(t._ZNSsC1ERKSaIcE), UNUSED)

<P><STRONG><a name="[49f]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, char.o(t._ZNSsC1ERKSs))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_allocate(unsigned, int) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_inc_ref()
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::do_falsename() const
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::do_truename() const
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::do_grouping() const
</UL>

<P><STRONG><a name="[758]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string__sub_object(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, char.o(t._ZNSsC1ERKSs), UNUSED)

<P><STRONG><a name="[8c]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, char.o(t._ZNSsD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::~__rw_messages_base()
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_parse_name(__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;&, const char*)
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::global(const std::locale&)
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate&lang;char&rang;::do_hash(const char*, const char*) const
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::collate_byname&lang;char&rang;::~collate_byname()
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_numpunct_impl_data&lang;char&rang;::~__rw_numpunct_impl_data()
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_punct_data&lang;char&rang;::~__rw_punct_data()
</UL>
<BR>[Address Reference Count : 4]<UL><LI> locale.o(i._ZNSt6localeC1ERKS_PKci)
<LI> locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj)
<LI> locale.o(i._ZN4__rw15__rw_locale_impC1ERKS0_PKcj)
<LI> locale.o(t._ZN4__rw18__rw_locale_vectorISsED1Ev)
</UL>
<P><STRONG><a name="[759]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, char.o(t._ZNSsD1Ev), UNUSED)

<P><STRONG><a name="[4a9]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, locale.o(t._ZNSsaSEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
</UL>
<BR>[Called By]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::_C_parse_name(__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;&, const char*)
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const char*, int)
</UL>

<P><STRONG><a name="[4ad]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, locale.o(t._ZNSsaSERKSs))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_inc_ref()
</UL>
<BR>[Called By]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&, const std::locale&, int)
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const __rw::__rw_locale_imp&, const char*, unsigned)
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::numpunct&lang;char&rang;::_C_initfacet(const std::locale&)
</UL>

<P><STRONG><a name="[372]"></a>std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map(const std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, dji_ack.o(t._ZNSt3mapIKjPKcSt4lessIS0_ESaISt4pairIS0_S2_EEEC1ERKS8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 984<LI>Call Chain = std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map(const std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&, bool) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*) &rArr;  __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[75a]"></a>std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map__sub_object(const std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dji_ack.o(t._ZNSt3mapIKjPKcSt4lessIS0_ESaISt4pairIS0_S2_EEEC1ERKS8_), UNUSED)

<P><STRONG><a name="[35e]"></a>std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, dji_ack.o(t._ZNSt3mapIKjPKcSt4lessIS0_ESaISt4pairIS0_S2_EEEC1IPKS6_EET_SC_RKS4_RKS7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112<LI>Call Chain = std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_insert(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_node(const std::pair&lang;const unsigned, const char*&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_get_link() &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_add_new_buffer() &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::__rb_tree&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, bool, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createActivateErrorCodeMap()
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createSetControlErrorCodeMap()
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createLegacyTaskErrorCodeMap()
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createTaskErrorCodeMap()
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createSetArmErrorCodeMap()
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createMissionErrorCodeMap()
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createMFIOErrorCodeMap()
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createSubscribeErrorCodeMap()
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::createCommonErrorCodeMap()
</UL>

<P><STRONG><a name="[75b]"></a>std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::map__sub_object&lang;const std::pair&lang;const unsigned, const char*&rang;*&rang;(T1, T1, const std::less&lang;const unsigned&rang;&, const std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dji_ack.o(t._ZNSt3mapIKjPKcSt4lessIS0_ESaISt4pairIS0_S2_EEEC1IPKS6_EET_SC_RKS4_RKS7_), UNUSED)

<P><STRONG><a name="[373]"></a>std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::operator =(const std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dji_ack.o(t._ZNSt3mapIKjPKcSt4lessIS0_ESaISt4pairIS0_S2_EEEaSERKS8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::operator =(const std::map&lang;const unsigned, const char*, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::operator =(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&) &rArr; __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*) &rArr;  __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::_C_copy(__rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::operator =(const __rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ACK::getCMDIDTaskMSG(DJI::OSDK::ACK::ErrorCode)
</UL>

<P><STRONG><a name="[384]"></a>std::pair&lang;const unsigned, const char*&rang;::pair&lang;unsigned char, const char*&rang;(const std::pair&lang;T1, T2&rang;&)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dji_ack.o(t._ZNSt4pairIKjPKcEC1IhS2_EERKS_IT_T0_E))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___11_dji_ack_cpp_0a38b940
</UL>

<P><STRONG><a name="[75c]"></a>std::pair&lang;const unsigned, const char*&rang;::pair__sub_object&lang;unsigned char, const char*&rang;(const std::pair&lang;T1, T2&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_ack.o(t._ZNSt4pairIKjPKcEC1IhS2_EERKS_IT_T0_E), UNUSED)

<P><STRONG><a name="[382]"></a>std::pair&lang;const unsigned, const char*&rang;::pair&lang;unsigned short, const char*&rang;(const std::pair&lang;T1, T2&rang;&)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dji_ack.o(t._ZNSt4pairIKjPKcEC1ItS2_EERKS_IT_T0_E))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___11_dji_ack_cpp_0a38b940
</UL>

<P><STRONG><a name="[75d]"></a>std::pair&lang;const unsigned, const char*&rang;::pair__sub_object&lang;unsigned short, const char*&rang;(const std::pair&lang;T1, T2&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dji_ack.o(t._ZNSt4pairIKjPKcEC1ItS2_EERKS_IT_T0_E), UNUSED)

<P><STRONG><a name="[547]"></a>std::pair&lang;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, bool&rang;::pair(const __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;&, const bool&)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dji_ack.o(t._ZNSt4pairIN4__rw14__rw_tree_iterIS_IKjPKcEiPS5_RS5_NS0_17__rw_rb_tree_nodeISaIS5_ES5_S2_NS0_11__select1stIS5_S2_EEEEEEbEC1ERKSD_RKb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::pair&lang;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, bool&rang;::pair(const __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;&, const bool&)
</UL>
<BR>[Calls]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;::__rw_tree_iter(const __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rb_tree&lang;const unsigned, std::pair&lang;const unsigned, const char*&rang;, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;, std::less&lang;const unsigned&rang;, std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;&rang;::insert(const std::pair&lang;const unsigned, const char*&rang;&)
</UL>

<P><STRONG><a name="[75e]"></a>std::pair&lang;__rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;, bool&rang;::pair__sub_object(const __rw::__rw_tree_iter&lang;std::pair&lang;const unsigned, const char*&rang;, int, std::pair&lang;const unsigned, const char*&rang;*, std::pair&lang;const unsigned, const char*&rang;&, __rw::__rw_rb_tree_node&lang;std::allocator&lang;std::pair&lang;const unsigned, const char*&rang;&rang;, std::pair&lang;const unsigned, const char*&rang;, const unsigned, __rw::__select1st&lang;std::pair&lang;const unsigned, const char*&rang;, const unsigned&rang;&rang;&rang;&, const bool&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dji_ack.o(t._ZNSt4pairIN4__rw14__rw_tree_iterIS_IKjPKcEiPS5_RS5_NS0_17__rw_rb_tree_nodeISaIS5_ES5_S2_NS0_11__select1stIS5_S2_EEEEEEbEC1ERKSD_RKb), UNUSED)

<P><STRONG><a name="[55f]"></a>std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::_C_destroy(DJI::OSDK::WayPointSettings*, DJI::OSDK::WayPointSettings*)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, missionsample.o(t._ZNSt6vectorIN3DJI4OSDK16WayPointSettingsESaIS2_EE10_C_destroyEPS2_S5_), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::~vector()
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::_C_insert_aux(DJI::OSDK::WayPointSettings*, const DJI::OSDK::WayPointSettings&)
</UL>

<P><STRONG><a name="[55b]"></a>std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::_C_insert_aux(DJI::OSDK::WayPointSettings*, const DJI::OSDK::WayPointSettings&)</STRONG> (Thumb, 424 bytes, Stack size 48 bytes, missionsample.o(t._ZNSt6vectorIN3DJI4OSDK16WayPointSettingsESaIS2_EE13_C_insert_auxEPS2_RKS2_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2 std::uninitialized_copy&lang;DJI::OSDK::WayPointSettings*, DJI::OSDK::WayPointSettings*, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;(T1, T1, T2, T3&)
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::begin()
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::end()
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::_C_destroy(DJI::OSDK::WayPointSettings*, DJI::OSDK::WayPointSettings*)
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;DJI::OSDK::WayPointSettings&rang;::construct(DJI::OSDK::WayPointSettings*, const DJI::OSDK::WayPointSettings&)
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;DJI::OSDK::WayPointSettings&rang;::deallocate(DJI::OSDK::WayPointSettings*, unsigned)
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::capacity() const
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::size() const
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::push_back(const DJI::OSDK::WayPointSettings&)
</UL>

<P><STRONG><a name="[1c0]"></a>std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::end()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, missionsample.o(t._ZNSt6vectorIN3DJI4OSDK16WayPointSettingsESaIS2_EE3endEv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::~vector()
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::push_back(const DJI::OSDK::WayPointSettings&)
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::_C_insert_aux(DJI::OSDK::WayPointSettings*, const DJI::OSDK::WayPointSettings&)
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uploadWaypoints(std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;&)
</UL>

<P><STRONG><a name="[1be]"></a>std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::begin()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, missionsample.o(t._ZNSt6vectorIN3DJI4OSDK16WayPointSettingsESaIS2_EE5beginEv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::~vector()
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::_C_insert_aux(DJI::OSDK::WayPointSettings*, const DJI::OSDK::WayPointSettings&)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generateWaypointsPolygon(DJI::OSDK::WayPointSettings*, double, int)
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uploadWaypoints(std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;&)
</UL>

<P><STRONG><a name="[1c4]"></a>std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::push_back(const DJI::OSDK::WayPointSettings&)</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, missionsample.o(t._ZNSt6vectorIN3DJI4OSDK16WayPointSettingsESaIS2_EE9push_backERKS2_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::end()
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::_C_insert_aux(DJI::OSDK::WayPointSettings*, const DJI::OSDK::WayPointSettings&)
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;DJI::OSDK::WayPointSettings&rang;::construct(DJI::OSDK::WayPointSettings*, const DJI::OSDK::WayPointSettings&)
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generateWaypointsPolygon(DJI::OSDK::WayPointSettings*, double, int)
</UL>

<P><STRONG><a name="[1cc]"></a>std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::~vector()</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, missionsample.o(t._ZNSt6vectorIN3DJI4OSDK16WayPointSettingsESaIS2_EED1Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::begin()
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::end()
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::_C_destroy(DJI::OSDK::WayPointSettings*, DJI::OSDK::WayPointSettings*)
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;DJI::OSDK::WayPointSettings&rang;::deallocate(DJI::OSDK::WayPointSettings*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runWaypointMission(unsigned char)
</UL>

<P><STRONG><a name="[75f]"></a>std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::~vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, missionsample.o(t._ZNSt6vectorIN3DJI4OSDK16WayPointSettingsESaIS2_EED1Ev), UNUSED)

<P><STRONG><a name="[560]"></a>std::numpunct&lang;char&rang;::_C_initfacet(const std::locale&)</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, char.o(t._ZNSt8numpunctIcE12_C_initfacetERKSt6locale), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
</UL>

<P><STRONG><a name="[55e]"></a>T2 std::uninitialized_copy&lang;DJI::OSDK::WayPointSettings*, DJI::OSDK::WayPointSettings*, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;(T1, T1, T2, T3&)</STRONG> (Thumb, 70 bytes, Stack size 48 bytes, missionsample.o(t._ZSt18uninitialized_copyIPN3DJI4OSDK16WayPointSettingsES3_SaIS2_EET0_T_S6_S5_RT1_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;DJI::OSDK::WayPointSettings&rang;::construct(DJI::OSDK::WayPointSettings*, const DJI::OSDK::WayPointSettings&)
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
</UL>
<BR>[Called By]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;DJI::OSDK::WayPointSettings, std::allocator&lang;DJI::OSDK::WayPointSettings&rang;&rang;::_C_insert_aux(DJI::OSDK::WayPointSettings*, const DJI::OSDK::WayPointSettings&)
</UL>

<P><STRONG><a name="[554]"></a>const T1& std::max&lang;unsigned&rang;(const T1&, const T1&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, char.o(t._ZSt3maxIjERKT_S2_S2_))
<BR><BR>[Called By]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, unsigned, const std::allocator&lang;char&rang;&)
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[383]"></a>std::pair&lang;T1, T2&rang; std::make_pair&lang;unsigned char, const char*&rang;(const T1&, const T2&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dji_ack.o(t._ZSt9make_pairIhPKcESt4pairIT_T0_ERKS3_RKS4_))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___11_dji_ack_cpp_0a38b940
</UL>

<P><STRONG><a name="[381]"></a>std::pair&lang;T1, T2&rang; std::make_pair&lang;unsigned short, const char*&rang;(const T1&, const T2&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dji_ack.o(t._ZSt9make_pairItPKcESt4pairIT_T0_ERKS3_RKS4_))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___11_dji_ack_cpp_0a38b940
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[134]"></a>__sti___15_cppforstm32_cpp_2d9dc738</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, cppforstm32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __sti___15_cppforstm32_cpp_2d9dc738 &rArr; DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cppforstm32.o(.init_array)
</UL>
<P><STRONG><a name="[172]"></a>[local to main_cpp]::ledHandler()</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [local to main_cpp]::ledHandler()
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[174]"></a>[local to main_cpp]::renewFatfs()</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = [local to main_cpp]::renewFatfs() &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::waypointUploading()
</UL>

<P><STRONG><a name="[178]"></a>[local to main_cpp]::waypointUploading()</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = [local to main_cpp]::waypointUploading() &rArr; [local to main_cpp]::renewFatfs() &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list::emptyList()
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list::getNode(unsigned char)
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::getSaveWaypoint()
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::getInitWaypoint()
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendWaypoint(NODE*)
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to main_cpp]::renewFatfs()
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17f]"></a>[local to main_cpp]::saveAriToSd()</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = [local to main_cpp]::saveAriToSd() &rArr; f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBuffer::getAri()
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[184]"></a>[local to main_cpp]::initFatfs()</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = [local to main_cpp]::initFatfs() &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18c]"></a>[local to main_cpp]::droneInit()</STRONG> (Thumb, 800 bytes, Stack size 16 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::getFwVersion() const
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::ProtocolBase::getDriver() const
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::~Vehicle()
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::obtainCtrlAuthority(void(*)(DJI::OSDK::Vehicle*, DJI::OSDK::RecvContainer, void*), void*)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::functionalSetUp()
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::DataSubscription::verify()
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_nms(unsigned short)
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userActivate()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[135]"></a>__sti___8_main_cpp_078b5881</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = __sti___8_main_cpp_078b5881 &rArr; DJI::OSDK::Vehicle::Vehicle(bool) &rArr; DJI::OSDK::Vehicle::mandatorySetUp() &rArr; DJI::OSDK::Vehicle::initOpenProtocol() &rArr; DJI::OSDK::OpenProtocol::OpenProtocol(DJI::OSDK::PlatformManager*, const char*, unsigned) &rArr; DJI::OSDK::OpenProtocol::init(DJI::OSDK::HardDriver*, DJI::OSDK::MMU*, bool) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Vehicle::Vehicle(bool)
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.init_array)
</UL>
<P><STRONG><a name="[136]"></a>__sti___23_FlightControlSample_cpp_8e9053dd</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, flightcontrolsample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __sti___23_FlightControlSample_cpp_8e9053dd &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> flightcontrolsample.o(.init_array)
</UL>
<P><STRONG><a name="[137]"></a>__sti___17_MissionSample_cpp_105bd650</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, missionsample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __sti___17_MissionSample_cpp_105bd650 &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> missionsample.o(.init_array)
</UL>
<P><STRONG><a name="[138]"></a>__sti___22_CameraGimbalSample_cpp_2ed0a8e0</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, cameragimbalsample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __sti___22_CameraGimbalSample_cpp_2ed0a8e0 &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cameragimbalsample.o(.init_array)
</UL>
<P><STRONG><a name="[139]"></a>__sti___16_MobileSample_cpp_0cb23d9d</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, mobilesample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __sti___16_MobileSample_cpp_0cb23d9d &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mobilesample.o(.init_array)
</UL>
<P><STRONG><a name="[13a]"></a>__sti___19_TelemetrySample_cpp_d62fb3f4</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, telemetrysample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __sti___19_TelemetrySample_cpp_d62fb3f4 &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> telemetrysample.o(.init_array)
</UL>
<P><STRONG><a name="[13b]"></a>__sti___12_Activate_cpp_c609511d</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, activate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __sti___12_Activate_cpp_c609511d &rArr; DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activate.o(.init_array)
</UL>
<P><STRONG><a name="[13c]"></a>__sti___11_Receive_cpp_88bc3a46</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, receive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __sti___11_Receive_cpp_88bc3a46 &rArr; DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> receive.o(.init_array)
</UL>
<P><STRONG><a name="[13d]"></a>__sti___12_BspUsart_cpp_353bec44</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, bspusart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __sti___12_BspUsart_cpp_353bec44 &rArr; DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bspusart.o(.init_array)
</UL>
<P><STRONG><a name="[13e]"></a>__sti___9_timer_cpp_tick</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __sti___9_timer_cpp_tick &rArr; DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer.o(.init_array)
</UL>
<P><STRONG><a name="[13f]"></a>__sti___7_bsp_cpp_eb441081</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __sti___7_bsp_cpp_eb441081 &rArr; DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(.init_array)
</UL>
<P><STRONG><a name="[140]"></a>__sti___7_rtc_cpp_8afd6a98</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __sti___7_rtc_cpp_8afd6a98 &rArr; DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtc.o(.init_array)
</UL>
<P><STRONG><a name="[260]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>

<P><STRONG><a name="[25f]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTimeStamp
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetAlarm
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>

<P><STRONG><a name="[270]"></a>TI4_Config</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[26e]"></a>TI3_Config</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[26c]"></a>TI2_Config</STRONG> (Thumb, 90 bytes, Stack size 20 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[26a]"></a>TI1_Config</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[27b]"></a>SetSysClock</STRONG> (Thumb, 220 bytes, Stack size 12 bytes, system_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[27c]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>

<P><STRONG><a name="[141]"></a>__sti___15_dji_vehicle_cpp_8f4cafc0</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, dji_vehicle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __sti___15_dji_vehicle_cpp_8f4cafc0 &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_vehicle.o(.init_array)
</UL>
<P><STRONG><a name="[142]"></a>__sti___21_dji_open_protocol_cpp_81b2a1ff</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, dji_open_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __sti___21_dji_open_protocol_cpp_81b2a1ff &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_open_protocol.o(.init_array)
</UL>
<P><STRONG><a name="[143]"></a>__sti___14_dji_camera_cpp_cdfdda64</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, dji_camera.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __sti___14_dji_camera_cpp_cdfdda64 &rArr; DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_camera.o(.init_array)
</UL>
<P><STRONG><a name="[144]"></a>__sti___15_dji_control_cpp_aae34645</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, dji_control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __sti___15_dji_control_cpp_aae34645 &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_control.o(.init_array)
</UL>
<P><STRONG><a name="[145]"></a>__sti___19_dji_hard_driver_cpp_df62f7f1</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, dji_hard_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __sti___19_dji_hard_driver_cpp_df62f7f1 &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hard_driver.o(.init_array)
</UL>
<P><STRONG><a name="[146]"></a>__sti___16_dji_hotpoint_cpp_f4e83e9b</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, dji_hotpoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __sti___16_dji_hotpoint_cpp_f4e83e9b &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hotpoint.o(.init_array)
</UL>
<P><STRONG><a name="[147]"></a>__sti___12_dji_mfio_cpp_c2ebea95</STRONG> (Thumb, 272 bytes, Stack size 16 bytes, dji_mfio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __sti___12_dji_mfio_cpp_c2ebea95 &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_mfio.o(.init_array)
</UL>
<P><STRONG><a name="[148]"></a>__sti___23_dji_mission_manager_cpp_d61cd15c</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, dji_mission_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __sti___23_dji_mission_manager_cpp_d61cd15c &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_mission_manager.o(.init_array)
</UL>
<P><STRONG><a name="[149]"></a>__sti___28_dji_mobile_communication_cpp_a0253467</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, dji_mobile_communication.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __sti___28_dji_mobile_communication_cpp_a0253467 &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_mobile_communication.o(.init_array)
</UL>
<P><STRONG><a name="[14a]"></a>__sti___21_dji_hardware_sync_cpp_571dc58a</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, dji_hardware_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __sti___21_dji_hardware_sync_cpp_571dc58a &rArr; DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_hardware_sync.o(.init_array)
</UL>
<P><STRONG><a name="[14b]"></a>__sti___20_dji_subscription_cpp_e3250e60</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, dji_subscription.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __sti___20_dji_subscription_cpp_e3250e60 &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_subscription.o(.init_array)
</UL>
<P><STRONG><a name="[14c]"></a>__sti___11_dji_ack_cpp_0a38b940</STRONG> (Thumb, 8272 bytes, Stack size 1752 bytes, dji_ack.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1820<LI>Call Chain = __sti___11_dji_ack_cpp_0a38b940 &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::pair&lang;T1, T2&rang; std::make_pair&lang;unsigned short, const char*&rang;(const T1&, const T2&)
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::pair&lang;T1, T2&rang; std::make_pair&lang;unsigned char, const char*&rang;(const T1&, const T2&)
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::pair&lang;const unsigned, const char*&rang;::pair&lang;unsigned short, const char*&rang;(const std::pair&lang;T1, T2&rang;&)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::pair&lang;const unsigned, const char*&rang;::pair&lang;unsigned char, const char*&rang;(const std::pair&lang;T1, T2&rang;&)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_ack.o(.init_array)
</UL>
<P><STRONG><a name="[14d]"></a>__sti___16_dji_waypoint_cpp_16ca33f4</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, dji_waypoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __sti___16_dji_waypoint_cpp_16ca33f4 &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_waypoint.o(.init_array)
</UL>
<P><STRONG><a name="[14e]"></a>__sti___17_dji_broadcast_cpp_d9fe0773</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, dji_broadcast.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __sti___17_dji_broadcast_cpp_d9fe0773 &rArr; DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_broadcast.o(.init_array)
</UL>
<P><STRONG><a name="[14f]"></a>__sti___14_dji_gimbal_cpp_d619892c</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, dji_gimbal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __sti___14_dji_gimbal_cpp_d619892c &rArr; DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_gimbal.o(.init_array)
</UL>
<P><STRONG><a name="[150]"></a>__sti___18_dji_virtual_rc_cpp_fcc8de67</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, dji_virtual_rc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __sti___18_dji_virtual_rc_cpp_fcc8de67 &rArr; DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_virtual_rc.o(.init_array)
</UL>
<P><STRONG><a name="[151]"></a>__sti___15_dji_version_cpp_06fb57c7</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, dji_version.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __sti___15_dji_version_cpp_06fb57c7 &rArr; DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_version.o(.init_array)
</UL>
<P><STRONG><a name="[152]"></a>__sti___23_dji_circular_buffer_cpp_bdb94397</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, dji_circular_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __sti___23_dji_circular_buffer_cpp_bdb94397 &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_circular_buffer.o(.init_array)
</UL>
<P><STRONG><a name="[153]"></a>__sti___21_dji_protocol_base_cpp_246ea02c</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, dji_protocol_base.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __sti___21_dji_protocol_base_cpp_246ea02c &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_protocol_base.o(.init_array)
</UL>
<P><STRONG><a name="[154]"></a>__sti___24_dji_platform_manager_cpp_4a190e86</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, dji_platform_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __sti___24_dji_platform_manager_cpp_4a190e86 &rArr; DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_platform_manager.o(.init_array)
</UL>
<P><STRONG><a name="[155]"></a>__sti___21_dji_mobile_device_cpp_a8636f60</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, dji_mobile_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __sti___21_dji_mobile_device_cpp_a8636f60 &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dji_mobile_device.o(.init_array)
</UL>
<P><STRONG><a name="[3e6]"></a>mem_cpy</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getlabel
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
</UL>

<P><STRONG><a name="[3da]"></a>mem_set</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
</UL>

<P><STRONG><a name="[3e9]"></a>mem_cmp</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[3f2]"></a>chk_chr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[3d7]"></a>sync_window</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[3d8]"></a>move_window</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getlabel
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>

<P><STRONG><a name="[3d9]"></a>sync_fs</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = sync_fs &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[3dd]"></a>remove_chain</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = remove_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
</UL>

<P><STRONG><a name="[3de]"></a>create_chain</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[3fc]"></a>clmt_clust</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = clmt_clust
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>

<P><STRONG><a name="[3e1]"></a>dir_next</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>

<P><STRONG><a name="[3e2]"></a>dir_alloc</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = dir_alloc &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[3f4]"></a>ld_clust</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ld_clust
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[3fa]"></a>st_clust</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[3e3]"></a>cmp_lfn</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = cmp_lfn
</UL>
<BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[3eb]"></a>pick_lfn</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, ff.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>

<P><STRONG><a name="[3ed]"></a>fit_lfn</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fit_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[3e5]"></a>gen_numname</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gen_numname &rArr; mem_cpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[3e8]"></a>sum_sfn</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sum_sfn
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[3e7]"></a>dir_find</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[3ea]"></a>dir_read</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pick_lfn
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getlabel
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[3ec]"></a>dir_register</STRONG> (Thumb, 298 bytes, Stack size 48 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_lfn
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[3ee]"></a>dir_remove</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
</UL>

<P><STRONG><a name="[3ef]"></a>get_fileinfo</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[3f1]"></a>create_name</STRONG> (Thumb, 604 bytes, Stack size 56 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = create_name &rArr; ff_convert
</UL>
<BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[3f3]"></a>follow_path</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>

<P><STRONG><a name="[3f7]"></a>get_ldnumber</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_ldnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[3f5]"></a>check_fs</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[3f6]"></a>find_volume</STRONG> (Thumb, 916 bytes, Stack size 80 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteDisk &rArr; SD_WriteBlock &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getlabel
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>

<P><STRONG><a name="[3f9]"></a>validate</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = validate
</UL>
<BR>[Calls]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>

<P><STRONG><a name="[40d]"></a>putc_bfd</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
</UL>
<BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_putc
</UL>

<P><STRONG><a name="[156]"></a>__sti___10_buffer_cpp_a556aa1b</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __sti___10_buffer_cpp_a556aa1b &rArr; DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> buffer.o(.init_array)
</UL>
<P><STRONG><a name="[157]"></a>__sti___8_list_cpp_dc6bb2e0</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, list.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __sti___8_list_cpp_dc6bb2e0 &rArr; DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> list.o(.init_array)
</UL>
<P><STRONG><a name="[158]"></a>__sti___11_GetData_cpp_8f60a30d</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, getdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __sti___11_GetData_cpp_8f60a30d &rArr; DJI::OSDK::Log::Log(DJI::OSDK::Mutex*) &rArr; DJI::OSDK::MutexDefault::MutexDefault() &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Log::Log(DJI::OSDK::Mutex*)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> getdata.o(.init_array)
</UL>
<P><STRONG><a name="[159]"></a>__sti___17_basicFunction_cpp_2da18785</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, basicfunction.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __sti___17_basicFunction_cpp_2da18785 &rArr; DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DJI::OSDK::Version::FW(unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> basicfunction.o(.init_array)
</UL>
<P><STRONG><a name="[521]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[504]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsnprintf
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vprintf
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0fprintf
</UL>

<P><STRONG><a name="[523]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[522]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[a1]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printfa.o(i._snputc))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0vsnprintf)
</UL>
<P><STRONG><a name="[a0]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> printfa.o(i.__0sprintf)
<LI> printfa.o(i.__0vsprintf)
</UL>
<P><STRONG><a name="[49a]"></a>[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, rwstdexcept.o(i._ZN37_INTERNAL_15_rwstdexcept_cpp_8697b68a4__rw13__rw_vfmatstrEPcjPKcSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(const char*, std::__va_list)
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[49c]"></a>[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)</STRONG> (Thumb, 296 bytes, Stack size 88 bytes, rwstdexcept.o(i._ZN37_INTERNAL_15_rwstdexcept_cpp_8697b68a4__rw13__rw_vfmatstrEPcjiSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale()
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sscanf
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strrchr
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
</UL>

<P><STRONG><a name="[80]"></a>[local to arm_exceptions_c]::armcpp_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, arm_exceptions_throw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = [local to arm_exceptions_c]::armcpp_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*) &rArr; __cxa_rethrow &rArr; _Unwind_RaiseException &rArr; __ARM_Unwind_RaiseException &rArr; __ARM_unwind_next_frame &rArr; [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_free_exception
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_exceptions_throw.o(.text)
</UL>
<P><STRONG><a name="[82]"></a>[local to arm_exceptions_c]::__default_terminate_handler()</STRONG> (Thumb, 6 bytes, Stack size 8 bytes, arm_exceptions_globs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [local to arm_exceptions_c]::__default_terminate_handler()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_exceptions_globs.o(.text)
</UL>
<P><STRONG><a name="[472]"></a>[local to unwind_pr_c]::next_unwind_byte(uwdata*)</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, unwind_prcommon.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_cpp_prcommon
</UL>

<P><STRONG><a name="[84]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[476]"></a>_local_sscanf</STRONG> (Thumb, 54 bytes, Stack size 56 bytes, strtod.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
</UL>

<P><STRONG><a name="[15a]"></a>__sti___8_char_cpp_a3dc957a</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, char.o(i.__sti___8_char_cpp_a3dc957a))
<BR>[Address Reference Count : 1]<UL><LI> char.o(.init_array)
</UL>
<P><STRONG><a name="[8d]"></a>&lang;Func5&rang;</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, locale.o(i.<Func5>))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = &lang;Func5&rang; &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> locale.o(i._ZNSt6localeC1ERKS_PKci)
<LI> locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj)
<LI> locale.o(i._ZN4__rw15__rw_locale_impC1ERKS0_PKcj)
</UL>
<P><STRONG><a name="[15b]"></a>__sti___10_locale_cpp_ff99fc7b</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, locale.o(i.__sti___10_locale_cpp_ff99fc7b))
<BR>[Address Reference Count : 1]<UL><LI> locale.o(.init_array)
</UL>
<P><STRONG><a name="[a3]"></a>[local to rtti_c]::tbc_downcast(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, rtti.o(i._ZN27_INTERNAL_6_rtti_c_066a44b012tbc_downcastEPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = [local to rtti_c]::tbc_downcast(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*) &rArr; std::type_info::operator ==(const std::type_info&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator ==(const std::type_info&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtti.o(i.__dynamic_cast)
</UL>
<P><STRONG><a name="[a4]"></a>[local to rtti_c]::tbc_post_downcast(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rtti.o(i._ZN27_INTERNAL_6_rtti_c_066a44b017tbc_post_downcastEPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = [local to rtti_c]::tbc_post_downcast(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*) &rArr; std::type_info::operator ==(const std::type_info&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator ==(const std::type_info&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtti.o(i.__dynamic_cast)
</UL>
<P><STRONG><a name="[496]"></a>[local to rtti_c]::traverse_base_classes(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, rtti.o(i._ZN27_INTERNAL_6_rtti_c_066a44b021traverse_base_classesEPvPKSt9type_infoP28a_base_class_traversal_blockPN10__cxxabiv122__base_class_type_infoE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_get_typeid
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator ==(const std::type_info&) const
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::get_virtual_base_pointer(void*, __cxxabiv1::__base_class_type_info*)
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::traverse_base_classes(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dynamic_cast
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::traverse_base_classes(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)
</UL>

<P><STRONG><a name="[498]"></a>[local to rtti_c]::find_base_class_at_addr(void*, void*, const std::type_info*, const std::type_info*, int*)</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, rtti.o(i._ZN27_INTERNAL_6_rtti_c_066a44b023find_base_class_at_addrEPvS0_PKSt9type_infoS3_Pi), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_get_typeid
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator ==(const std::type_info&) const
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::get_virtual_base_pointer(void*, __cxxabiv1::__base_class_type_info*)
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::find_base_class_at_addr(void*, void*, const std::type_info*, const std::type_info*, int*)
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dynamic_cast
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::find_base_class_at_addr(void*, void*, const std::type_info*, const std::type_info*, int*)
</UL>

<P><STRONG><a name="[497]"></a>[local to rtti_c]::get_virtual_base_pointer(void*, __cxxabiv1::__base_class_type_info*)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rtti.o(i._ZN27_INTERNAL_6_rtti_c_066a44b024get_virtual_base_pointerEPvPN10__cxxabiv122__base_class_type_infoE))
<BR><BR>[Called By]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*)
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::find_base_class_at_addr(void*, void*, const std::type_info*, const std::type_info*, int*)
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::traverse_base_classes(void*, const std::type_info*, a_base_class_traversal_block*, __cxxabiv1::__base_class_type_info*)
</UL>

<P><STRONG><a name="[499]"></a>[local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*)</STRONG> (Thumb, 476 bytes, Stack size 96 bytes, rtti.o(i._ZN27_INTERNAL_6_rtti_c_066a44b028derived_to_base_conversion_rEPvPS0_PKSt9type_infoS4_jPiiPS4_P19a_result_virtualityS5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + In Cycle
<LI>Call Chain = [local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) &rArr;  [local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_get_typeid
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::operator ==(const std::type_info&) const
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*)
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::get_virtual_base_pointer(void*, __cxxabiv1::__base_class_type_info*)
</UL>
<BR>[Called By]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__derived_to_base_conversion
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rtti_c]::derived_to_base_conversion_r(void*, void**, const std::type_info*, const std::type_info*, unsigned, int*, int, const std::type_info**, a_result_virtuality*, int*)
</UL>

<P><STRONG><a name="[87]"></a>[local to unwinder_c]::EIT_comparator(const void*, const void*)</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, unwinder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [local to unwinder_c]::EIT_comparator(const void*, const void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> unwinder.o(.text)
</UL>
<P><STRONG><a name="[47d]"></a>[local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned)</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, unwinder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = [local to unwinder_c]::find_and_expand_eit_entry(_Unwind_Control_Block*, unsigned) &rArr; bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Activity
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsearch
</UL>
<BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_unwind_next_frame
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_Unwind_RaiseException
</UL>

<P><STRONG><a name="[485]"></a>_fp_value</STRONG> (Thumb, 296 bytes, Stack size 64 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[15c]"></a>__sti___10_rwcats_cpp_64e8068e</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rwcats.o(i.__sti___10_rwcats_cpp_64e8068e))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = __sti___10_rwcats_cpp_64e8068e &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwcats.o(.init_array)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
